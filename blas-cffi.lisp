(COMMON-LISP:IN-PACKAGE #:MAGICL.BLAS-CFFI)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CAXPY))

(CFFI:DEFCFUN ("caxpy_" %%CAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CA :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CAXPY))

(COMMON-LISP:PUSHNEW '("CAXPY" "caxpy_" %%CAXPY %CAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CAXPY))

(COMMON-LISP:DEFUN %CAXPY (N CA CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF47953 ':INT32)
                              (CA-REF47954 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF47956 ':INT32) (INCY-REF47958 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47953 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF47954 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF47956 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF47958 :INT32) INCY)
    (%%CAXPY N-REF47953 CA-REF47954 (FNV-FOREIGN-POINTER CX) INCX-REF47956
     (FNV-FOREIGN-POINTER CY) INCY-REF47958)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CAXPY))

(COMMON-LISP:EXPORT '%CAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CCOPY))

(CFFI:DEFCFUN ("ccopy_" %%CCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CCOPY))

(COMMON-LISP:PUSHNEW '("CCOPY" "ccopy_" %%CCOPY %CCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CCOPY))

(COMMON-LISP:DEFUN %CCOPY (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF47959 ':INT32) (INCX-REF47961 ':INT32)
                              (INCY-REF47963 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47959 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF47961 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF47963 :INT32) INCY)
    (%%CCOPY N-REF47959 (FNV-FOREIGN-POINTER CX) INCX-REF47961
     (FNV-FOREIGN-POINTER CY) INCY-REF47963)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CCOPY))

(COMMON-LISP:EXPORT '%CCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CDOTC))

(CFFI:DEFCFUN ("cdotc_" %%CDOTC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    COMPLEX-SINGLE-FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CDOTC))

(COMMON-LISP:PUSHNEW '("CDOTC" "cdotc_" %%CDOTC %CDOTC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CDOTC))

(COMMON-LISP:DEFUN %CDOTC (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF47964 ':INT32) (INCX-REF47966 ':INT32)
                              (INCY-REF47968 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47964 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF47966 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF47968 :INT32) INCY)
    (%%CDOTC N-REF47964 (FNV-FOREIGN-POINTER CX) INCX-REF47966
     (FNV-FOREIGN-POINTER CY) INCY-REF47968)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CDOTC))

(COMMON-LISP:EXPORT '%CDOTC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CDOTU))

(CFFI:DEFCFUN ("cdotu_" %%CDOTU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    COMPLEX-SINGLE-FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CDOTU))

(COMMON-LISP:PUSHNEW '("CDOTU" "cdotu_" %%CDOTU %CDOTU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CDOTU))

(COMMON-LISP:DEFUN %CDOTU (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF47969 ':INT32) (INCX-REF47971 ':INT32)
                              (INCY-REF47973 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47969 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF47971 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF47973 :INT32) INCY)
    (%%CDOTU N-REF47969 (FNV-FOREIGN-POINTER CX) INCX-REF47971
     (FNV-FOREIGN-POINTER CY) INCY-REF47973)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CDOTU))

(COMMON-LISP:EXPORT '%CDOTU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGBMV))

(CFFI:DEFCFUN ("cgbmv_" %%CGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGBMV))

(COMMON-LISP:PUSHNEW '("CGBMV" "cgbmv_" %%CGBMV %CGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGBMV))

(COMMON-LISP:DEFUN %CGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF47975 ':INT32) (N-REF47976 ':INT32)
                              (KL-REF47977 ':INT32) (KU-REF47978 ':INT32)
                              (ALPHA-REF47979 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF47981 ':INT32) (INCX-REF47983 ':INT32)
                              (BETA-REF47984 'COMPLEX-SINGLE-FLOAT)
                              (INCY-REF47986 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF47975 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47976 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF47977 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF47978 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF47979 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF47981 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF47983 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF47984 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF47986 :INT32) INCY)
    (%%CGBMV TRANS M-REF47975 N-REF47976 KL-REF47977 KU-REF47978 ALPHA-REF47979
     (FNV-FOREIGN-POINTER A) LDA-REF47981 (FNV-FOREIGN-POINTER X) INCX-REF47983
     BETA-REF47984 (FNV-FOREIGN-POINTER Y) INCY-REF47986)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGBMV))

(COMMON-LISP:EXPORT '%CGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGEMM))

(CFFI:DEFCFUN ("cgemm_" %%CGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGEMM))

(COMMON-LISP:PUSHNEW '("CGEMM" "cgemm_" %%CGEMM %CGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGEMM))

(COMMON-LISP:DEFUN %CGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF47989 ':INT32) (N-REF47990 ':INT32)
                              (K-REF47991 ':INT32)
                              (ALPHA-REF47992 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF47994 ':INT32) (LDB-REF47996 ':INT32)
                              (BETA-REF47997 'COMPLEX-SINGLE-FLOAT)
                              (LDC-REF47999 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF47989 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF47990 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF47991 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF47992 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF47994 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF47996 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF47997 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF47999 :INT32) LDC)
    (%%CGEMM TRANSA TRANSB M-REF47989 N-REF47990 K-REF47991 ALPHA-REF47992
     (FNV-FOREIGN-POINTER A) LDA-REF47994 (FNV-FOREIGN-POINTER B) LDB-REF47996
     BETA-REF47997 (FNV-FOREIGN-POINTER C) LDC-REF47999)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGEMM))

(COMMON-LISP:EXPORT '%CGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGEMV))

(CFFI:DEFCFUN ("cgemv_" %%CGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGEMV))

(COMMON-LISP:PUSHNEW '("CGEMV" "cgemv_" %%CGEMV %CGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGEMV))

(COMMON-LISP:DEFUN %CGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48001 ':INT32) (N-REF48002 ':INT32)
                              (ALPHA-REF48003 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48005 ':INT32) (INCX-REF48007 ':INT32)
                              (BETA-REF48008 'COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48010 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48001 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48002 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48003 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48005 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48007 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48008 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48010 :INT32) INCY)
    (%%CGEMV TRANS M-REF48001 N-REF48002 ALPHA-REF48003 (FNV-FOREIGN-POINTER A)
     LDA-REF48005 (FNV-FOREIGN-POINTER X) INCX-REF48007 BETA-REF48008
     (FNV-FOREIGN-POINTER Y) INCY-REF48010)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGEMV))

(COMMON-LISP:EXPORT '%CGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGERC))

(CFFI:DEFCFUN ("cgerc_" %%CGERC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGERC))

(COMMON-LISP:PUSHNEW '("CGERC" "cgerc_" %%CGERC %CGERC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGERC))

(COMMON-LISP:DEFUN %CGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48011 ':INT32) (N-REF48012 ':INT32)
                              (ALPHA-REF48013 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48015 ':INT32) (INCY-REF48017 ':INT32)
                              (LDA-REF48019 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48011 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48012 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48013 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48015 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48017 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48019 :INT32) LDA)
    (%%CGERC M-REF48011 N-REF48012 ALPHA-REF48013 (FNV-FOREIGN-POINTER X)
     INCX-REF48015 (FNV-FOREIGN-POINTER Y) INCY-REF48017
     (FNV-FOREIGN-POINTER A) LDA-REF48019)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGERC))

(COMMON-LISP:EXPORT '%CGERC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGERU))

(CFFI:DEFCFUN ("cgeru_" %%CGERU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGERU))

(COMMON-LISP:PUSHNEW '("CGERU" "cgeru_" %%CGERU %CGERU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGERU))

(COMMON-LISP:DEFUN %CGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48020 ':INT32) (N-REF48021 ':INT32)
                              (ALPHA-REF48022 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48024 ':INT32) (INCY-REF48026 ':INT32)
                              (LDA-REF48028 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48020 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48021 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48022 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48024 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48026 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48028 :INT32) LDA)
    (%%CGERU M-REF48020 N-REF48021 ALPHA-REF48022 (FNV-FOREIGN-POINTER X)
     INCX-REF48024 (FNV-FOREIGN-POINTER Y) INCY-REF48026
     (FNV-FOREIGN-POINTER A) LDA-REF48028)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGERU))

(COMMON-LISP:EXPORT '%CGERU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHBMV))

(CFFI:DEFCFUN ("chbmv_" %%CHBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHBMV))

(COMMON-LISP:PUSHNEW '("CHBMV" "chbmv_" %%CHBMV %CHBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHBMV))

(COMMON-LISP:DEFUN %CHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48030 ':INT32) (K-REF48031 ':INT32)
                              (ALPHA-REF48032 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48034 ':INT32) (INCX-REF48036 ':INT32)
                              (BETA-REF48037 'COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48039 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48030 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48031 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48032 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48034 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48036 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48037 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48039 :INT32) INCY)
    (%%CHBMV UPLO N-REF48030 K-REF48031 ALPHA-REF48032 (FNV-FOREIGN-POINTER A)
     LDA-REF48034 (FNV-FOREIGN-POINTER X) INCX-REF48036 BETA-REF48037
     (FNV-FOREIGN-POINTER Y) INCY-REF48039)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHBMV))

(COMMON-LISP:EXPORT '%CHBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHEMM))

(CFFI:DEFCFUN ("chemm_" %%CHEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHEMM))

(COMMON-LISP:PUSHNEW '("CHEMM" "chemm_" %%CHEMM %CHEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHEMM))

(COMMON-LISP:DEFUN %CHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48042 ':INT32) (N-REF48043 ':INT32)
                              (ALPHA-REF48044 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48046 ':INT32) (LDB-REF48048 ':INT32)
                              (BETA-REF48049 'COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48051 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48042 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48043 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48044 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48046 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48048 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48049 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48051 :INT32) LDC)
    (%%CHEMM SIDE UPLO M-REF48042 N-REF48043 ALPHA-REF48044
     (FNV-FOREIGN-POINTER A) LDA-REF48046 (FNV-FOREIGN-POINTER B) LDB-REF48048
     BETA-REF48049 (FNV-FOREIGN-POINTER C) LDC-REF48051)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHEMM))

(COMMON-LISP:EXPORT '%CHEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHEMV))

(CFFI:DEFCFUN ("chemv_" %%CHEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHEMV))

(COMMON-LISP:PUSHNEW '("CHEMV" "chemv_" %%CHEMV %CHEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHEMV))

(COMMON-LISP:DEFUN %CHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48053 ':INT32)
                              (ALPHA-REF48054 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48056 ':INT32) (INCX-REF48058 ':INT32)
                              (BETA-REF48059 'COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48061 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48053 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48054 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48056 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48058 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48059 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48061 :INT32) INCY)
    (%%CHEMV UPLO N-REF48053 ALPHA-REF48054 (FNV-FOREIGN-POINTER A)
     LDA-REF48056 (FNV-FOREIGN-POINTER X) INCX-REF48058 BETA-REF48059
     (FNV-FOREIGN-POINTER Y) INCY-REF48061)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHEMV))

(COMMON-LISP:EXPORT '%CHEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER))

(CFFI:DEFCFUN ("cher_" %%CHER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER))

(COMMON-LISP:PUSHNEW '("CHER" "cher_" %%CHER %CHER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER))

(COMMON-LISP:DEFUN %CHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48063 ':INT32) (ALPHA-REF48064 ':FLOAT)
                              (INCX-REF48066 ':INT32) (LDA-REF48068 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48063 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48064 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48066 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48068 :INT32) LDA)
    (%%CHER UPLO N-REF48063 ALPHA-REF48064 (FNV-FOREIGN-POINTER X)
     INCX-REF48066 (FNV-FOREIGN-POINTER A) LDA-REF48068)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER))

(COMMON-LISP:EXPORT '%CHER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER2))

(CFFI:DEFCFUN ("cher2_" %%CHER2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER2))

(COMMON-LISP:PUSHNEW '("CHER2" "cher2_" %%CHER2 %CHER2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER2))

(COMMON-LISP:DEFUN %CHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48070 ':INT32)
                              (ALPHA-REF48071 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48073 ':INT32) (INCY-REF48075 ':INT32)
                              (LDA-REF48077 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48070 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48071 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48073 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48075 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48077 :INT32) LDA)
    (%%CHER2 UPLO N-REF48070 ALPHA-REF48071 (FNV-FOREIGN-POINTER X)
     INCX-REF48073 (FNV-FOREIGN-POINTER Y) INCY-REF48075
     (FNV-FOREIGN-POINTER A) LDA-REF48077)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER2))

(COMMON-LISP:EXPORT '%CHER2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER2K))

(CFFI:DEFCFUN ("cher2k_" %%CHER2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER2K))

(COMMON-LISP:PUSHNEW '("CHER2K" "cher2k_" %%CHER2K %CHER2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER2K))

(COMMON-LISP:DEFUN %CHER2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48080 ':INT32) (K-REF48081 ':INT32)
                              (ALPHA-REF48082 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48084 ':INT32) (LDB-REF48086 ':INT32)
                              (BETA-REF48087 ':FLOAT) (LDC-REF48089 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48080 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48081 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48082 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48084 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48086 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48087 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48089 :INT32) LDC)
    (%%CHER2K UPLO TRANS N-REF48080 K-REF48081 ALPHA-REF48082
     (FNV-FOREIGN-POINTER A) LDA-REF48084 (FNV-FOREIGN-POINTER B) LDB-REF48086
     BETA-REF48087 (FNV-FOREIGN-POINTER C) LDC-REF48089)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER2K))

(COMMON-LISP:EXPORT '%CHER2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHERK))

(CFFI:DEFCFUN ("cherk_" %%CHERK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHERK))

(COMMON-LISP:PUSHNEW '("CHERK" "cherk_" %%CHERK %CHERK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHERK))

(COMMON-LISP:DEFUN %CHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHERK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48092 ':INT32) (K-REF48093 ':INT32)
                              (ALPHA-REF48094 ':FLOAT) (LDA-REF48096 ':INT32)
                              (BETA-REF48097 ':FLOAT) (LDC-REF48099 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48092 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48093 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48094 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48096 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48097 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48099 :INT32) LDC)
    (%%CHERK UPLO TRANS N-REF48092 K-REF48093 ALPHA-REF48094
     (FNV-FOREIGN-POINTER A) LDA-REF48096 BETA-REF48097 (FNV-FOREIGN-POINTER C)
     LDC-REF48099)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHERK))

(COMMON-LISP:EXPORT '%CHERK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPMV))

(CFFI:DEFCFUN ("chpmv_" %%CHPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPMV))

(COMMON-LISP:PUSHNEW '("CHPMV" "chpmv_" %%CHPMV %CHPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPMV))

(COMMON-LISP:DEFUN %CHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48101 ':INT32)
                              (ALPHA-REF48102 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48105 ':INT32)
                              (BETA-REF48106 'COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48108 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48101 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48102 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48105 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48106 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48108 :INT32) INCY)
    (%%CHPMV UPLO N-REF48101 ALPHA-REF48102 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48105 BETA-REF48106
     (FNV-FOREIGN-POINTER Y) INCY-REF48108)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPMV))

(COMMON-LISP:EXPORT '%CHPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPR))

(CFFI:DEFCFUN ("chpr_" %%CHPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPR))

(COMMON-LISP:PUSHNEW '("CHPR" "chpr_" %%CHPR %CHPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPR))

(COMMON-LISP:DEFUN %CHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48110 ':INT32) (ALPHA-REF48111 ':FLOAT)
                              (INCX-REF48113 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48110 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48111 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48113 :INT32) INCX)
    (%%CHPR UPLO N-REF48110 ALPHA-REF48111 (FNV-FOREIGN-POINTER X)
     INCX-REF48113 (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPR))

(COMMON-LISP:EXPORT '%CHPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPR2))

(CFFI:DEFCFUN ("chpr2_" %%CHPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPR2))

(COMMON-LISP:PUSHNEW '("CHPR2" "chpr2_" %%CHPR2 %CHPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPR2))

(COMMON-LISP:DEFUN %CHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48116 ':INT32)
                              (ALPHA-REF48117 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48119 ':INT32) (INCY-REF48121 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48116 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48117 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48119 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48121 :INT32) INCY)
    (%%CHPR2 UPLO N-REF48116 ALPHA-REF48117 (FNV-FOREIGN-POINTER X)
     INCX-REF48119 (FNV-FOREIGN-POINTER Y) INCY-REF48121
     (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPR2))

(COMMON-LISP:EXPORT '%CHPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CROTG))

(CFFI:DEFCFUN ("crotg_" %%CROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (CA :POINTER)
  (CB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CROTG))

(COMMON-LISP:PUSHNEW '("CROTG" "crotg_" %%CROTG %CROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CROTG))

(COMMON-LISP:DEFUN %CROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CROTG)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF48123 'COMPLEX-SINGLE-FLOAT)
                              (CB-REF48124 'COMPLEX-SINGLE-FLOAT)
                              (C-REF48125 ':FLOAT)
                              (S-REF48126 'COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF48123 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CB-REF48124 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48125 :FLOAT) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              S-REF48126 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART S)))
    (%%CROTG CA-REF48123 CB-REF48124 C-REF48125 S-REF48126)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CROTG))

(COMMON-LISP:EXPORT '%CROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSCAL))

(CFFI:DEFCFUN ("cscal_" %%CSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CA :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSCAL))

(COMMON-LISP:PUSHNEW '("CSCAL" "cscal_" %%CSCAL %CSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSCAL))

(COMMON-LISP:DEFUN %CSCAL (N CA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48127 ':INT32)
                              (CA-REF48128 'COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48130 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48127 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF48128 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48130 :INT32) INCX)
    (%%CSCAL N-REF48127 CA-REF48128 (FNV-FOREIGN-POINTER CX) INCX-REF48130)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSCAL))

(COMMON-LISP:EXPORT '%CSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSROT))

(CFFI:DEFCFUN ("csrot_" %%CSROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSROT))

(COMMON-LISP:PUSHNEW '("CSROT" "csrot_" %%CSROT %CSROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSROT))

(COMMON-LISP:DEFUN %CSROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48131 ':INT32) (INCX-REF48133 ':INT32)
                              (INCY-REF48135 ':INT32) (C-REF48136 ':FLOAT)
                              (S-REF48137 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48131 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48133 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48135 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48136 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48137 :FLOAT) S)
    (%%CSROT N-REF48131 (FNV-FOREIGN-POINTER CX) INCX-REF48133
     (FNV-FOREIGN-POINTER CY) INCY-REF48135 C-REF48136 S-REF48137)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSROT))

(COMMON-LISP:EXPORT '%CSROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSSCAL))

(CFFI:DEFCFUN ("csscal_" %%CSSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSSCAL))

(COMMON-LISP:PUSHNEW '("CSSCAL" "csscal_" %%CSSCAL %CSSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSSCAL))

(COMMON-LISP:DEFUN %CSSCAL (N SA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48138 ':INT32) (SA-REF48139 ':FLOAT)
                              (INCX-REF48141 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48138 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48139 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48141 :INT32) INCX)
    (%%CSSCAL N-REF48138 SA-REF48139 (FNV-FOREIGN-POINTER CX) INCX-REF48141)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSSCAL))

(COMMON-LISP:EXPORT '%CSSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSWAP))

(CFFI:DEFCFUN ("cswap_" %%CSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSWAP))

(COMMON-LISP:PUSHNEW '("CSWAP" "cswap_" %%CSWAP %CSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSWAP))

(COMMON-LISP:DEFUN %CSWAP (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48142 ':INT32) (INCX-REF48144 ':INT32)
                              (INCY-REF48146 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48142 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48144 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48146 :INT32) INCY)
    (%%CSWAP N-REF48142 (FNV-FOREIGN-POINTER CX) INCX-REF48144
     (FNV-FOREIGN-POINTER CY) INCY-REF48146)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSWAP))

(COMMON-LISP:EXPORT '%CSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYMM))

(CFFI:DEFCFUN ("csymm_" %%CSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYMM))

(COMMON-LISP:PUSHNEW '("CSYMM" "csymm_" %%CSYMM %CSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYMM))

(COMMON-LISP:DEFUN %CSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48149 ':INT32) (N-REF48150 ':INT32)
                              (ALPHA-REF48151 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48153 ':INT32) (LDB-REF48155 ':INT32)
                              (BETA-REF48156 'COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48158 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48149 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48150 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48151 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48153 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48155 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48156 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48158 :INT32) LDC)
    (%%CSYMM SIDE UPLO M-REF48149 N-REF48150 ALPHA-REF48151
     (FNV-FOREIGN-POINTER A) LDA-REF48153 (FNV-FOREIGN-POINTER B) LDB-REF48155
     BETA-REF48156 (FNV-FOREIGN-POINTER C) LDC-REF48158)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYMM))

(COMMON-LISP:EXPORT '%CSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYR2K))

(CFFI:DEFCFUN ("csyr2k_" %%CSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYR2K))

(COMMON-LISP:PUSHNEW '("CSYR2K" "csyr2k_" %%CSYR2K %CSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYR2K))

(COMMON-LISP:DEFUN %CSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48161 ':INT32) (K-REF48162 ':INT32)
                              (ALPHA-REF48163 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48165 ':INT32) (LDB-REF48167 ':INT32)
                              (BETA-REF48168 'COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48170 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48161 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48162 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48163 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48165 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48167 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48168 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48170 :INT32) LDC)
    (%%CSYR2K UPLO TRANS N-REF48161 K-REF48162 ALPHA-REF48163
     (FNV-FOREIGN-POINTER A) LDA-REF48165 (FNV-FOREIGN-POINTER B) LDB-REF48167
     BETA-REF48168 (FNV-FOREIGN-POINTER C) LDC-REF48170)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYR2K))

(COMMON-LISP:EXPORT '%CSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYRK))

(CFFI:DEFCFUN ("csyrk_" %%CSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYRK))

(COMMON-LISP:PUSHNEW '("CSYRK" "csyrk_" %%CSYRK %CSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYRK))

(COMMON-LISP:DEFUN %CSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48173 ':INT32) (K-REF48174 ':INT32)
                              (ALPHA-REF48175 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48177 ':INT32)
                              (BETA-REF48178 'COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48180 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48173 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48174 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48175 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48177 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48178 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48180 :INT32) LDC)
    (%%CSYRK UPLO TRANS N-REF48173 K-REF48174 ALPHA-REF48175
     (FNV-FOREIGN-POINTER A) LDA-REF48177 BETA-REF48178 (FNV-FOREIGN-POINTER C)
     LDC-REF48180)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYRK))

(COMMON-LISP:EXPORT '%CSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTBMV))

(CFFI:DEFCFUN ("ctbmv_" %%CTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTBMV))

(COMMON-LISP:PUSHNEW '("CTBMV" "ctbmv_" %%CTBMV %CTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTBMV))

(COMMON-LISP:DEFUN %CTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48184 ':INT32) (K-REF48185 ':INT32)
                              (LDA-REF48187 ':INT32) (INCX-REF48189 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48184 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48185 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48187 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48189 :INT32) INCX)
    (%%CTBMV UPLO TRANS DIAG N-REF48184 K-REF48185 (FNV-FOREIGN-POINTER A)
     LDA-REF48187 (FNV-FOREIGN-POINTER X) INCX-REF48189)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTBMV))

(COMMON-LISP:EXPORT '%CTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTBSV))

(CFFI:DEFCFUN ("ctbsv_" %%CTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTBSV))

(COMMON-LISP:PUSHNEW '("CTBSV" "ctbsv_" %%CTBSV %CTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTBSV))

(COMMON-LISP:DEFUN %CTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48193 ':INT32) (K-REF48194 ':INT32)
                              (LDA-REF48196 ':INT32) (INCX-REF48198 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48193 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48194 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48196 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48198 :INT32) INCX)
    (%%CTBSV UPLO TRANS DIAG N-REF48193 K-REF48194 (FNV-FOREIGN-POINTER A)
     LDA-REF48196 (FNV-FOREIGN-POINTER X) INCX-REF48198)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTBSV))

(COMMON-LISP:EXPORT '%CTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTPMV))

(CFFI:DEFCFUN ("ctpmv_" %%CTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTPMV))

(COMMON-LISP:PUSHNEW '("CTPMV" "ctpmv_" %%CTPMV %CTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTPMV))

(COMMON-LISP:DEFUN %CTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48202 ':INT32) (INCX-REF48205 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48202 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48205 :INT32) INCX)
    (%%CTPMV UPLO TRANS DIAG N-REF48202 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48205)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTPMV))

(COMMON-LISP:EXPORT '%CTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTPSV))

(CFFI:DEFCFUN ("ctpsv_" %%CTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTPSV))

(COMMON-LISP:PUSHNEW '("CTPSV" "ctpsv_" %%CTPSV %CTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTPSV))

(COMMON-LISP:DEFUN %CTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48209 ':INT32) (INCX-REF48212 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48209 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48212 :INT32) INCX)
    (%%CTPSV UPLO TRANS DIAG N-REF48209 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48212)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTPSV))

(COMMON-LISP:EXPORT '%CTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRMM))

(CFFI:DEFCFUN ("ctrmm_" %%CTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRMM))

(COMMON-LISP:PUSHNEW '("CTRMM" "ctrmm_" %%CTRMM %CTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRMM))

(COMMON-LISP:DEFUN %CTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48217 ':INT32) (N-REF48218 ':INT32)
                              (ALPHA-REF48219 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48221 ':INT32) (LDB-REF48223 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48217 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48218 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48219 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48221 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48223 :INT32) LDB)
    (%%CTRMM SIDE UPLO TRANSA DIAG M-REF48217 N-REF48218 ALPHA-REF48219
     (FNV-FOREIGN-POINTER A) LDA-REF48221 (FNV-FOREIGN-POINTER B)
     LDB-REF48223)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRMM))

(COMMON-LISP:EXPORT '%CTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRMV))

(CFFI:DEFCFUN ("ctrmv_" %%CTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRMV))

(COMMON-LISP:PUSHNEW '("CTRMV" "ctrmv_" %%CTRMV %CTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRMV))

(COMMON-LISP:DEFUN %CTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48227 ':INT32) (LDA-REF48229 ':INT32)
                              (INCX-REF48231 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48227 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48229 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48231 :INT32) INCX)
    (%%CTRMV UPLO TRANS DIAG N-REF48227 (FNV-FOREIGN-POINTER A) LDA-REF48229
     (FNV-FOREIGN-POINTER X) INCX-REF48231)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRMV))

(COMMON-LISP:EXPORT '%CTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRSM))

(CFFI:DEFCFUN ("ctrsm_" %%CTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRSM))

(COMMON-LISP:PUSHNEW '("CTRSM" "ctrsm_" %%CTRSM %CTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRSM))

(COMMON-LISP:DEFUN %CTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48236 ':INT32) (N-REF48237 ':INT32)
                              (ALPHA-REF48238 'COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48240 ':INT32) (LDB-REF48242 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48236 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48237 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48238 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48240 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48242 :INT32) LDB)
    (%%CTRSM SIDE UPLO TRANSA DIAG M-REF48236 N-REF48237 ALPHA-REF48238
     (FNV-FOREIGN-POINTER A) LDA-REF48240 (FNV-FOREIGN-POINTER B)
     LDB-REF48242)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRSM))

(COMMON-LISP:EXPORT '%CTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRSV))

(CFFI:DEFCFUN ("ctrsv_" %%CTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRSV))

(COMMON-LISP:PUSHNEW '("CTRSV" "ctrsv_" %%CTRSV %CTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRSV))

(COMMON-LISP:DEFUN %CTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48246 ':INT32) (LDA-REF48248 ':INT32)
                              (INCX-REF48250 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48246 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48248 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48250 :INT32) INCX)
    (%%CTRSV UPLO TRANS DIAG N-REF48246 (FNV-FOREIGN-POINTER A) LDA-REF48248
     (FNV-FOREIGN-POINTER X) INCX-REF48250)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRSV))

(COMMON-LISP:EXPORT '%CTRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DASUM))

(CFFI:DEFCFUN ("dasum_" %%DASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DASUM))

(COMMON-LISP:PUSHNEW '("DASUM" "dasum_" %%DASUM %DASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DASUM))

(COMMON-LISP:DEFUN %DASUM (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48251 ':INT32) (INCX-REF48253 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48251 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48253 :INT32) INCX)
    (%%DASUM N-REF48251 (FNV-FOREIGN-POINTER DX) INCX-REF48253)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DASUM))

(COMMON-LISP:EXPORT '%DASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DAXPY))

(CFFI:DEFCFUN ("daxpy_" %%DAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DAXPY))

(COMMON-LISP:PUSHNEW '("DAXPY" "daxpy_" %%DAXPY %DAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DAXPY))

(COMMON-LISP:DEFUN %DAXPY (N DA DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48254 ':INT32) (DA-REF48255 ':DOUBLE)
                              (INCX-REF48257 ':INT32) (INCY-REF48259 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48254 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48255 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48257 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48259 :INT32) INCY)
    (%%DAXPY N-REF48254 DA-REF48255 (FNV-FOREIGN-POINTER DX) INCX-REF48257
     (FNV-FOREIGN-POINTER DY) INCY-REF48259)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DAXPY))

(COMMON-LISP:EXPORT '%DAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DCABS1))

(CFFI:DEFCFUN ("dcabs1_" %%DCABS1 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (Z :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DCABS1))

(COMMON-LISP:PUSHNEW '("DCABS1" "dcabs1_" %%DCABS1 %DCABS1)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DCABS1))

(COMMON-LISP:DEFUN %DCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCABS1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF48260 'COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              Z-REF48260 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART Z)))
    (%%DCABS1 Z-REF48260)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DCABS1))

(COMMON-LISP:EXPORT '%DCABS1 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DCOPY))

(CFFI:DEFCFUN ("dcopy_" %%DCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DCOPY))

(COMMON-LISP:PUSHNEW '("DCOPY" "dcopy_" %%DCOPY %DCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DCOPY))

(COMMON-LISP:DEFUN %DCOPY (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48261 ':INT32) (INCX-REF48263 ':INT32)
                              (INCY-REF48265 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48261 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48263 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48265 :INT32) INCY)
    (%%DCOPY N-REF48261 (FNV-FOREIGN-POINTER DX) INCX-REF48263
     (FNV-FOREIGN-POINTER DY) INCY-REF48265)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DCOPY))

(COMMON-LISP:EXPORT '%DCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DDOT))

(CFFI:DEFCFUN ("ddot_" %%DDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DDOT))

(COMMON-LISP:PUSHNEW '("DDOT" "ddot_" %%DDOT %DDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DDOT))

(COMMON-LISP:DEFUN %DDOT (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48266 ':INT32) (INCX-REF48268 ':INT32)
                              (INCY-REF48270 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48266 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48268 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48270 :INT32) INCY)
    (%%DDOT N-REF48266 (FNV-FOREIGN-POINTER DX) INCX-REF48268
     (FNV-FOREIGN-POINTER DY) INCY-REF48270)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DDOT))

(COMMON-LISP:EXPORT '%DDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGBMV))

(CFFI:DEFCFUN ("dgbmv_" %%DGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGBMV))

(COMMON-LISP:PUSHNEW '("DGBMV" "dgbmv_" %%DGBMV %DGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGBMV))

(COMMON-LISP:DEFUN %DGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48272 ':INT32) (N-REF48273 ':INT32)
                              (KL-REF48274 ':INT32) (KU-REF48275 ':INT32)
                              (ALPHA-REF48276 ':DOUBLE) (LDA-REF48278 ':INT32)
                              (INCX-REF48280 ':INT32) (BETA-REF48281 ':DOUBLE)
                              (INCY-REF48283 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48272 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48273 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48274 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48275 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48276 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48278 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48280 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48281 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48283 :INT32) INCY)
    (%%DGBMV TRANS M-REF48272 N-REF48273 KL-REF48274 KU-REF48275 ALPHA-REF48276
     (FNV-FOREIGN-POINTER A) LDA-REF48278 (FNV-FOREIGN-POINTER X) INCX-REF48280
     BETA-REF48281 (FNV-FOREIGN-POINTER Y) INCY-REF48283)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGBMV))

(COMMON-LISP:EXPORT '%DGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGEMM))

(CFFI:DEFCFUN ("dgemm_" %%DGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGEMM))

(COMMON-LISP:PUSHNEW '("DGEMM" "dgemm_" %%DGEMM %DGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGEMM))

(COMMON-LISP:DEFUN %DGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48286 ':INT32) (N-REF48287 ':INT32)
                              (K-REF48288 ':INT32) (ALPHA-REF48289 ':DOUBLE)
                              (LDA-REF48291 ':INT32) (LDB-REF48293 ':INT32)
                              (BETA-REF48294 ':DOUBLE) (LDC-REF48296 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48286 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48287 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48288 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48289 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48291 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48293 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48294 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48296 :INT32) LDC)
    (%%DGEMM TRANSA TRANSB M-REF48286 N-REF48287 K-REF48288 ALPHA-REF48289
     (FNV-FOREIGN-POINTER A) LDA-REF48291 (FNV-FOREIGN-POINTER B) LDB-REF48293
     BETA-REF48294 (FNV-FOREIGN-POINTER C) LDC-REF48296)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGEMM))

(COMMON-LISP:EXPORT '%DGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGEMV))

(CFFI:DEFCFUN ("dgemv_" %%DGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGEMV))

(COMMON-LISP:PUSHNEW '("DGEMV" "dgemv_" %%DGEMV %DGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGEMV))

(COMMON-LISP:DEFUN %DGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48298 ':INT32) (N-REF48299 ':INT32)
                              (ALPHA-REF48300 ':DOUBLE) (LDA-REF48302 ':INT32)
                              (INCX-REF48304 ':INT32) (BETA-REF48305 ':DOUBLE)
                              (INCY-REF48307 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48298 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48299 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48300 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48302 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48304 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48305 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48307 :INT32) INCY)
    (%%DGEMV TRANS M-REF48298 N-REF48299 ALPHA-REF48300 (FNV-FOREIGN-POINTER A)
     LDA-REF48302 (FNV-FOREIGN-POINTER X) INCX-REF48304 BETA-REF48305
     (FNV-FOREIGN-POINTER Y) INCY-REF48307)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGEMV))

(COMMON-LISP:EXPORT '%DGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGER))

(CFFI:DEFCFUN ("dger_" %%DGER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGER))

(COMMON-LISP:PUSHNEW '("DGER" "dger_" %%DGER %DGER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGER))

(COMMON-LISP:DEFUN %DGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGER)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48308 ':INT32) (N-REF48309 ':INT32)
                              (ALPHA-REF48310 ':DOUBLE) (INCX-REF48312 ':INT32)
                              (INCY-REF48314 ':INT32) (LDA-REF48316 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48308 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48309 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48310 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48312 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48314 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48316 :INT32) LDA)
    (%%DGER M-REF48308 N-REF48309 ALPHA-REF48310 (FNV-FOREIGN-POINTER X)
     INCX-REF48312 (FNV-FOREIGN-POINTER Y) INCY-REF48314
     (FNV-FOREIGN-POINTER A) LDA-REF48316)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGER))

(COMMON-LISP:EXPORT '%DGER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DNRM2))

(CFFI:DEFCFUN ("dnrm2_" %%DNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DNRM2))

(COMMON-LISP:PUSHNEW '("DNRM2" "dnrm2_" %%DNRM2 %DNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DNRM2))

(COMMON-LISP:DEFUN %DNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48317 ':INT32) (INCX-REF48319 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48317 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48319 :INT32) INCX)
    (%%DNRM2 N-REF48317 (FNV-FOREIGN-POINTER X) INCX-REF48319)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DNRM2))

(COMMON-LISP:EXPORT '%DNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROT))

(CFFI:DEFCFUN ("drot_" %%DROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROT))

(COMMON-LISP:PUSHNEW '("DROT" "drot_" %%DROT %DROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROT))

(COMMON-LISP:DEFUN %DROT (N DX INCX DY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48320 ':INT32) (INCX-REF48322 ':INT32)
                              (INCY-REF48324 ':INT32) (C-REF48325 ':DOUBLE)
                              (S-REF48326 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48320 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48322 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48324 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48325 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48326 :DOUBLE) S)
    (%%DROT N-REF48320 (FNV-FOREIGN-POINTER DX) INCX-REF48322
     (FNV-FOREIGN-POINTER DY) INCY-REF48324 C-REF48325 S-REF48326)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROT))

(COMMON-LISP:EXPORT '%DROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTG))

(CFFI:DEFCFUN ("drotg_" %%DROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (DA :POINTER)
  (DB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTG))

(COMMON-LISP:PUSHNEW '("DROTG" "drotg_" %%DROTG %DROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTG))

(COMMON-LISP:DEFUN %DROTG (DA DB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTG)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((DA-REF48327 ':DOUBLE) (DB-REF48328 ':DOUBLE)
                              (C-REF48329 ':DOUBLE) (S-REF48330 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48327 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF DB-REF48328 :DOUBLE) DB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48329 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48330 :DOUBLE) S)
    (%%DROTG DA-REF48327 DB-REF48328 C-REF48329 S-REF48330)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTG))

(COMMON-LISP:EXPORT '%DROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTM))

(CFFI:DEFCFUN ("drotm_" %%DROTM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER)
  (DPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTM))

(COMMON-LISP:PUSHNEW '("DROTM" "drotm_" %%DROTM %DROTM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTM))

(COMMON-LISP:DEFUN %DROTM (N DX INCX DY INCY DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-DOUBLE DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48331 ':INT32) (INCX-REF48333 ':INT32)
                              (INCY-REF48335 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48331 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48333 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48335 :INT32) INCY)
    (%%DROTM N-REF48331 (FNV-FOREIGN-POINTER DX) INCX-REF48333
     (FNV-FOREIGN-POINTER DY) INCY-REF48335 (FNV-FOREIGN-POINTER DPARAM))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTM))

(COMMON-LISP:EXPORT '%DROTM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTMG))

(CFFI:DEFCFUN ("drotmg_" %%DROTMG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (DD1 :POINTER)
  (DD2 :POINTER)
  (DX1 :POINTER)
  (DY1 :POINTER)
  (DPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTMG))

(COMMON-LISP:PUSHNEW '("DROTMG" "drotmg_" %%DROTMG %DROTMG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTMG))

(COMMON-LISP:DEFUN %DROTMG (DD1 DD2 DX1 DY1 DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTMG)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD1)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD2)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DX1)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DY1)
                       (COMMON-LISP:TYPE FNV-DOUBLE DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((DD1-REF48337 ':DOUBLE) (DD2-REF48338 ':DOUBLE)
                              (DX1-REF48339 ':DOUBLE) (DY1-REF48340 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DD1-REF48337 :DOUBLE) DD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DD2-REF48338 :DOUBLE) DD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF DX1-REF48339 :DOUBLE) DX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DY1-REF48340 :DOUBLE) DY1)
    (%%DROTMG DD1-REF48337 DD2-REF48338 DX1-REF48339 DY1-REF48340
     (FNV-FOREIGN-POINTER DPARAM))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTMG))

(COMMON-LISP:EXPORT '%DROTMG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSBMV))

(CFFI:DEFCFUN ("dsbmv_" %%DSBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSBMV))

(COMMON-LISP:PUSHNEW '("DSBMV" "dsbmv_" %%DSBMV %DSBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSBMV))

(COMMON-LISP:DEFUN %DSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48343 ':INT32) (K-REF48344 ':INT32)
                              (ALPHA-REF48345 ':DOUBLE) (LDA-REF48347 ':INT32)
                              (INCX-REF48349 ':INT32) (BETA-REF48350 ':DOUBLE)
                              (INCY-REF48352 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48343 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48344 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48345 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48347 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48349 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48350 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48352 :INT32) INCY)
    (%%DSBMV UPLO N-REF48343 K-REF48344 ALPHA-REF48345 (FNV-FOREIGN-POINTER A)
     LDA-REF48347 (FNV-FOREIGN-POINTER X) INCX-REF48349 BETA-REF48350
     (FNV-FOREIGN-POINTER Y) INCY-REF48352)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSBMV))

(COMMON-LISP:EXPORT '%DSBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSCAL))

(CFFI:DEFCFUN ("dscal_" %%DSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSCAL))

(COMMON-LISP:PUSHNEW '("DSCAL" "dscal_" %%DSCAL %DSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSCAL))

(COMMON-LISP:DEFUN %DSCAL (N DA DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48353 ':INT32) (DA-REF48354 ':DOUBLE)
                              (INCX-REF48356 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48353 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48354 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48356 :INT32) INCX)
    (%%DSCAL N-REF48353 DA-REF48354 (FNV-FOREIGN-POINTER DX) INCX-REF48356)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSCAL))

(COMMON-LISP:EXPORT '%DSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSDOT))

(CFFI:DEFCFUN ("dsdot_" %%DSDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSDOT))

(COMMON-LISP:PUSHNEW '("DSDOT" "dsdot_" %%DSDOT %DSDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSDOT))

(COMMON-LISP:DEFUN %DSDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48357 ':INT32) (INCX-REF48359 ':INT32)
                              (INCY-REF48361 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48357 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48359 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48361 :INT32) INCY)
    (%%DSDOT N-REF48357 (FNV-FOREIGN-POINTER SX) INCX-REF48359
     (FNV-FOREIGN-POINTER SY) INCY-REF48361)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSDOT))

(COMMON-LISP:EXPORT '%DSDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPMV))

(CFFI:DEFCFUN ("dspmv_" %%DSPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPMV))

(COMMON-LISP:PUSHNEW '("DSPMV" "dspmv_" %%DSPMV %DSPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPMV))

(COMMON-LISP:DEFUN %DSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48363 ':INT32) (ALPHA-REF48364 ':DOUBLE)
                              (INCX-REF48367 ':INT32) (BETA-REF48368 ':DOUBLE)
                              (INCY-REF48370 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48363 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48364 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48367 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48368 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48370 :INT32) INCY)
    (%%DSPMV UPLO N-REF48363 ALPHA-REF48364 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48367 BETA-REF48368
     (FNV-FOREIGN-POINTER Y) INCY-REF48370)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPMV))

(COMMON-LISP:EXPORT '%DSPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPR))

(CFFI:DEFCFUN ("dspr_" %%DSPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPR))

(COMMON-LISP:PUSHNEW '("DSPR" "dspr_" %%DSPR %DSPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPR))

(COMMON-LISP:DEFUN %DSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48372 ':INT32) (ALPHA-REF48373 ':DOUBLE)
                              (INCX-REF48375 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48372 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48373 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48375 :INT32) INCX)
    (%%DSPR UPLO N-REF48372 ALPHA-REF48373 (FNV-FOREIGN-POINTER X)
     INCX-REF48375 (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPR))

(COMMON-LISP:EXPORT '%DSPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPR2))

(CFFI:DEFCFUN ("dspr2_" %%DSPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPR2))

(COMMON-LISP:PUSHNEW '("DSPR2" "dspr2_" %%DSPR2 %DSPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPR2))

(COMMON-LISP:DEFUN %DSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-DOUBLE AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48378 ':INT32) (ALPHA-REF48379 ':DOUBLE)
                              (INCX-REF48381 ':INT32) (INCY-REF48383 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48378 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48379 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48381 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48383 :INT32) INCY)
    (%%DSPR2 UPLO N-REF48378 ALPHA-REF48379 (FNV-FOREIGN-POINTER X)
     INCX-REF48381 (FNV-FOREIGN-POINTER Y) INCY-REF48383
     (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPR2))

(COMMON-LISP:EXPORT '%DSPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSWAP))

(CFFI:DEFCFUN ("dswap_" %%DSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSWAP))

(COMMON-LISP:PUSHNEW '("DSWAP" "dswap_" %%DSWAP %DSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSWAP))

(COMMON-LISP:DEFUN %DSWAP (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48385 ':INT32) (INCX-REF48387 ':INT32)
                              (INCY-REF48389 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48385 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48387 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48389 :INT32) INCY)
    (%%DSWAP N-REF48385 (FNV-FOREIGN-POINTER DX) INCX-REF48387
     (FNV-FOREIGN-POINTER DY) INCY-REF48389)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSWAP))

(COMMON-LISP:EXPORT '%DSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYMM))

(CFFI:DEFCFUN ("dsymm_" %%DSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYMM))

(COMMON-LISP:PUSHNEW '("DSYMM" "dsymm_" %%DSYMM %DSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYMM))

(COMMON-LISP:DEFUN %DSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48392 ':INT32) (N-REF48393 ':INT32)
                              (ALPHA-REF48394 ':DOUBLE) (LDA-REF48396 ':INT32)
                              (LDB-REF48398 ':INT32) (BETA-REF48399 ':DOUBLE)
                              (LDC-REF48401 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48392 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48393 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48394 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48396 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48398 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48399 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48401 :INT32) LDC)
    (%%DSYMM SIDE UPLO M-REF48392 N-REF48393 ALPHA-REF48394
     (FNV-FOREIGN-POINTER A) LDA-REF48396 (FNV-FOREIGN-POINTER B) LDB-REF48398
     BETA-REF48399 (FNV-FOREIGN-POINTER C) LDC-REF48401)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYMM))

(COMMON-LISP:EXPORT '%DSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYMV))

(CFFI:DEFCFUN ("dsymv_" %%DSYMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYMV))

(COMMON-LISP:PUSHNEW '("DSYMV" "dsymv_" %%DSYMV %DSYMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYMV))

(COMMON-LISP:DEFUN %DSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48403 ':INT32) (ALPHA-REF48404 ':DOUBLE)
                              (LDA-REF48406 ':INT32) (INCX-REF48408 ':INT32)
                              (BETA-REF48409 ':DOUBLE) (INCY-REF48411 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48403 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48404 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48406 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48408 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48409 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48411 :INT32) INCY)
    (%%DSYMV UPLO N-REF48403 ALPHA-REF48404 (FNV-FOREIGN-POINTER A)
     LDA-REF48406 (FNV-FOREIGN-POINTER X) INCX-REF48408 BETA-REF48409
     (FNV-FOREIGN-POINTER Y) INCY-REF48411)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYMV))

(COMMON-LISP:EXPORT '%DSYMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR))

(CFFI:DEFCFUN ("dsyr_" %%DSYR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR))

(COMMON-LISP:PUSHNEW '("DSYR" "dsyr_" %%DSYR %DSYR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR))

(COMMON-LISP:DEFUN %DSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48413 ':INT32) (ALPHA-REF48414 ':DOUBLE)
                              (INCX-REF48416 ':INT32) (LDA-REF48418 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48413 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48414 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48416 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48418 :INT32) LDA)
    (%%DSYR UPLO N-REF48413 ALPHA-REF48414 (FNV-FOREIGN-POINTER X)
     INCX-REF48416 (FNV-FOREIGN-POINTER A) LDA-REF48418)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR))

(COMMON-LISP:EXPORT '%DSYR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR2))

(CFFI:DEFCFUN ("dsyr2_" %%DSYR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR2))

(COMMON-LISP:PUSHNEW '("DSYR2" "dsyr2_" %%DSYR2 %DSYR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR2))

(COMMON-LISP:DEFUN %DSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48420 ':INT32) (ALPHA-REF48421 ':DOUBLE)
                              (INCX-REF48423 ':INT32) (INCY-REF48425 ':INT32)
                              (LDA-REF48427 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48420 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48421 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48423 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48425 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48427 :INT32) LDA)
    (%%DSYR2 UPLO N-REF48420 ALPHA-REF48421 (FNV-FOREIGN-POINTER X)
     INCX-REF48423 (FNV-FOREIGN-POINTER Y) INCY-REF48425
     (FNV-FOREIGN-POINTER A) LDA-REF48427)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR2))

(COMMON-LISP:EXPORT '%DSYR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR2K))

(CFFI:DEFCFUN ("dsyr2k_" %%DSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR2K))

(COMMON-LISP:PUSHNEW '("DSYR2K" "dsyr2k_" %%DSYR2K %DSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR2K))

(COMMON-LISP:DEFUN %DSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48430 ':INT32) (K-REF48431 ':INT32)
                              (ALPHA-REF48432 ':DOUBLE) (LDA-REF48434 ':INT32)
                              (LDB-REF48436 ':INT32) (BETA-REF48437 ':DOUBLE)
                              (LDC-REF48439 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48430 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48431 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48432 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48434 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48436 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48437 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48439 :INT32) LDC)
    (%%DSYR2K UPLO TRANS N-REF48430 K-REF48431 ALPHA-REF48432
     (FNV-FOREIGN-POINTER A) LDA-REF48434 (FNV-FOREIGN-POINTER B) LDB-REF48436
     BETA-REF48437 (FNV-FOREIGN-POINTER C) LDC-REF48439)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR2K))

(COMMON-LISP:EXPORT '%DSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYRK))

(CFFI:DEFCFUN ("dsyrk_" %%DSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYRK))

(COMMON-LISP:PUSHNEW '("DSYRK" "dsyrk_" %%DSYRK %DSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYRK))

(COMMON-LISP:DEFUN %DSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48442 ':INT32) (K-REF48443 ':INT32)
                              (ALPHA-REF48444 ':DOUBLE) (LDA-REF48446 ':INT32)
                              (BETA-REF48447 ':DOUBLE) (LDC-REF48449 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48442 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48443 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48444 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48446 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48447 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48449 :INT32) LDC)
    (%%DSYRK UPLO TRANS N-REF48442 K-REF48443 ALPHA-REF48444
     (FNV-FOREIGN-POINTER A) LDA-REF48446 BETA-REF48447 (FNV-FOREIGN-POINTER C)
     LDC-REF48449)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYRK))

(COMMON-LISP:EXPORT '%DSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTBMV))

(CFFI:DEFCFUN ("dtbmv_" %%DTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTBMV))

(COMMON-LISP:PUSHNEW '("DTBMV" "dtbmv_" %%DTBMV %DTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTBMV))

(COMMON-LISP:DEFUN %DTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48453 ':INT32) (K-REF48454 ':INT32)
                              (LDA-REF48456 ':INT32) (INCX-REF48458 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48453 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48454 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48456 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48458 :INT32) INCX)
    (%%DTBMV UPLO TRANS DIAG N-REF48453 K-REF48454 (FNV-FOREIGN-POINTER A)
     LDA-REF48456 (FNV-FOREIGN-POINTER X) INCX-REF48458)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTBMV))

(COMMON-LISP:EXPORT '%DTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTBSV))

(CFFI:DEFCFUN ("dtbsv_" %%DTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTBSV))

(COMMON-LISP:PUSHNEW '("DTBSV" "dtbsv_" %%DTBSV %DTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTBSV))

(COMMON-LISP:DEFUN %DTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48462 ':INT32) (K-REF48463 ':INT32)
                              (LDA-REF48465 ':INT32) (INCX-REF48467 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48462 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48463 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48465 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48467 :INT32) INCX)
    (%%DTBSV UPLO TRANS DIAG N-REF48462 K-REF48463 (FNV-FOREIGN-POINTER A)
     LDA-REF48465 (FNV-FOREIGN-POINTER X) INCX-REF48467)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTBSV))

(COMMON-LISP:EXPORT '%DTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTPMV))

(CFFI:DEFCFUN ("dtpmv_" %%DTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTPMV))

(COMMON-LISP:PUSHNEW '("DTPMV" "dtpmv_" %%DTPMV %DTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTPMV))

(COMMON-LISP:DEFUN %DTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48471 ':INT32) (INCX-REF48474 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48471 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48474 :INT32) INCX)
    (%%DTPMV UPLO TRANS DIAG N-REF48471 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48474)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTPMV))

(COMMON-LISP:EXPORT '%DTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTPSV))

(CFFI:DEFCFUN ("dtpsv_" %%DTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTPSV))

(COMMON-LISP:PUSHNEW '("DTPSV" "dtpsv_" %%DTPSV %DTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTPSV))

(COMMON-LISP:DEFUN %DTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48478 ':INT32) (INCX-REF48481 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48478 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48481 :INT32) INCX)
    (%%DTPSV UPLO TRANS DIAG N-REF48478 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48481)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTPSV))

(COMMON-LISP:EXPORT '%DTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRMM))

(CFFI:DEFCFUN ("dtrmm_" %%DTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRMM))

(COMMON-LISP:PUSHNEW '("DTRMM" "dtrmm_" %%DTRMM %DTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRMM))

(COMMON-LISP:DEFUN %DTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48486 ':INT32) (N-REF48487 ':INT32)
                              (ALPHA-REF48488 ':DOUBLE) (LDA-REF48490 ':INT32)
                              (LDB-REF48492 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48486 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48487 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48488 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48490 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48492 :INT32) LDB)
    (%%DTRMM SIDE UPLO TRANSA DIAG M-REF48486 N-REF48487 ALPHA-REF48488
     (FNV-FOREIGN-POINTER A) LDA-REF48490 (FNV-FOREIGN-POINTER B)
     LDB-REF48492)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRMM))

(COMMON-LISP:EXPORT '%DTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRMV))

(CFFI:DEFCFUN ("dtrmv_" %%DTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRMV))

(COMMON-LISP:PUSHNEW '("DTRMV" "dtrmv_" %%DTRMV %DTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRMV))

(COMMON-LISP:DEFUN %DTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48496 ':INT32) (LDA-REF48498 ':INT32)
                              (INCX-REF48500 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48496 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48498 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48500 :INT32) INCX)
    (%%DTRMV UPLO TRANS DIAG N-REF48496 (FNV-FOREIGN-POINTER A) LDA-REF48498
     (FNV-FOREIGN-POINTER X) INCX-REF48500)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRMV))

(COMMON-LISP:EXPORT '%DTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRSM))

(CFFI:DEFCFUN ("dtrsm_" %%DTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRSM))

(COMMON-LISP:PUSHNEW '("DTRSM" "dtrsm_" %%DTRSM %DTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRSM))

(COMMON-LISP:DEFUN %DTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48505 ':INT32) (N-REF48506 ':INT32)
                              (ALPHA-REF48507 ':DOUBLE) (LDA-REF48509 ':INT32)
                              (LDB-REF48511 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48505 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48506 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48507 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48509 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48511 :INT32) LDB)
    (%%DTRSM SIDE UPLO TRANSA DIAG M-REF48505 N-REF48506 ALPHA-REF48507
     (FNV-FOREIGN-POINTER A) LDA-REF48509 (FNV-FOREIGN-POINTER B)
     LDB-REF48511)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRSM))

(COMMON-LISP:EXPORT '%DTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRSV))

(CFFI:DEFCFUN ("dtrsv_" %%DTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRSV))

(COMMON-LISP:PUSHNEW '("DTRSV" "dtrsv_" %%DTRSV %DTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRSV))

(COMMON-LISP:DEFUN %DTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48515 ':INT32) (LDA-REF48517 ':INT32)
                              (INCX-REF48519 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48515 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48517 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48519 :INT32) INCX)
    (%%DTRSV UPLO TRANS DIAG N-REF48515 (FNV-FOREIGN-POINTER A) LDA-REF48517
     (FNV-FOREIGN-POINTER X) INCX-REF48519)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRSV))

(COMMON-LISP:EXPORT '%DTRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DZASUM))

(CFFI:DEFCFUN ("dzasum_" %%DZASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DZASUM))

(COMMON-LISP:PUSHNEW '("DZASUM" "dzasum_" %%DZASUM %DZASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DZASUM))

(COMMON-LISP:DEFUN %DZASUM (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48520 ':INT32) (INCX-REF48522 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48520 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48522 :INT32) INCX)
    (%%DZASUM N-REF48520 (FNV-FOREIGN-POINTER ZX) INCX-REF48522)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DZASUM))

(COMMON-LISP:EXPORT '%DZASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DZNRM2))

(CFFI:DEFCFUN ("dznrm2_" %%DZNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DZNRM2))

(COMMON-LISP:PUSHNEW '("DZNRM2" "dznrm2_" %%DZNRM2 %DZNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DZNRM2))

(COMMON-LISP:DEFUN %DZNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48523 ':INT32) (INCX-REF48525 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48523 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48525 :INT32) INCX)
    (%%DZNRM2 N-REF48523 (FNV-FOREIGN-POINTER X) INCX-REF48525)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DZNRM2))

(COMMON-LISP:EXPORT '%DZNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ICAMAX))

(CFFI:DEFCFUN ("icamax_" %%ICAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ICAMAX))

(COMMON-LISP:PUSHNEW '("ICAMAX" "icamax_" %%ICAMAX %ICAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ICAMAX))

(COMMON-LISP:DEFUN %ICAMAX (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ICAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48526 ':INT32) (INCX-REF48528 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48526 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48528 :INT32) INCX)
    (%%ICAMAX N-REF48526 (FNV-FOREIGN-POINTER CX) INCX-REF48528)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ICAMAX))

(COMMON-LISP:EXPORT '%ICAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%IDAMAX))

(CFFI:DEFCFUN ("idamax_" %%IDAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%IDAMAX))

(COMMON-LISP:PUSHNEW '("IDAMAX" "idamax_" %%IDAMAX %IDAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %IDAMAX))

(COMMON-LISP:DEFUN %IDAMAX (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IDAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-DOUBLE DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48529 ':INT32) (INCX-REF48531 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48529 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48531 :INT32) INCX)
    (%%IDAMAX N-REF48529 (FNV-FOREIGN-POINTER DX) INCX-REF48531)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %IDAMAX))

(COMMON-LISP:EXPORT '%IDAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ISAMAX))

(CFFI:DEFCFUN ("isamax_" %%ISAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ISAMAX))

(COMMON-LISP:PUSHNEW '("ISAMAX" "isamax_" %%ISAMAX %ISAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ISAMAX))

(COMMON-LISP:DEFUN %ISAMAX (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ISAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48532 ':INT32) (INCX-REF48534 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48532 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48534 :INT32) INCX)
    (%%ISAMAX N-REF48532 (FNV-FOREIGN-POINTER SX) INCX-REF48534)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ISAMAX))

(COMMON-LISP:EXPORT '%ISAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%IZAMAX))

(CFFI:DEFCFUN ("izamax_" %%IZAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%IZAMAX))

(COMMON-LISP:PUSHNEW '("IZAMAX" "izamax_" %%IZAMAX %IZAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %IZAMAX))

(COMMON-LISP:DEFUN %IZAMAX (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IZAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48535 ':INT32) (INCX-REF48537 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48535 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48537 :INT32) INCX)
    (%%IZAMAX N-REF48535 (FNV-FOREIGN-POINTER ZX) INCX-REF48537)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %IZAMAX))

(COMMON-LISP:EXPORT '%IZAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%LSAME))

(CFFI:DEFCFUN ("lsame_" %%LSAME :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (CA :STRING)
  (CB :STRING))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%LSAME))

(COMMON-LISP:PUSHNEW '("LSAME" "lsame_" %%LSAME %LSAME)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %LSAME))

(COMMON-LISP:DEFUN %LSAME (CA CB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%LSAME)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING CA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING CB))
  (CFFI:WITH-FOREIGN-OBJECTS COMMON-LISP:NIL
    (%%LSAME CA CB)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %LSAME))

(COMMON-LISP:EXPORT '%LSAME '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SASUM))

(CFFI:DEFCFUN ("sasum_" %%SASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SASUM))

(COMMON-LISP:PUSHNEW '("SASUM" "sasum_" %%SASUM %SASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SASUM))

(COMMON-LISP:DEFUN %SASUM (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48540 ':INT32) (INCX-REF48542 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48540 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48542 :INT32) INCX)
    (%%SASUM N-REF48540 (FNV-FOREIGN-POINTER SX) INCX-REF48542)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SASUM))

(COMMON-LISP:EXPORT '%SASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SAXPY))

(CFFI:DEFCFUN ("saxpy_" %%SAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SAXPY))

(COMMON-LISP:PUSHNEW '("SAXPY" "saxpy_" %%SAXPY %SAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SAXPY))

(COMMON-LISP:DEFUN %SAXPY (N SA SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48543 ':INT32) (SA-REF48544 ':FLOAT)
                              (INCX-REF48546 ':INT32) (INCY-REF48548 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48543 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48544 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48546 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48548 :INT32) INCY)
    (%%SAXPY N-REF48543 SA-REF48544 (FNV-FOREIGN-POINTER SX) INCX-REF48546
     (FNV-FOREIGN-POINTER SY) INCY-REF48548)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SAXPY))

(COMMON-LISP:EXPORT '%SAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCABS1))

(CFFI:DEFCFUN ("scabs1_" %%SCABS1 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (Z :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCABS1))

(COMMON-LISP:PUSHNEW '("SCABS1" "scabs1_" %%SCABS1 %SCABS1)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCABS1))

(COMMON-LISP:DEFUN %SCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCABS1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF48549 'COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              Z-REF48549 COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART Z)))
    (%%SCABS1 Z-REF48549)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCABS1))

(COMMON-LISP:EXPORT '%SCABS1 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCASUM))

(CFFI:DEFCFUN ("scasum_" %%SCASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCASUM))

(COMMON-LISP:PUSHNEW '("SCASUM" "scasum_" %%SCASUM %SCASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCASUM))

(COMMON-LISP:DEFUN %SCASUM (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48550 ':INT32) (INCX-REF48552 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48550 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48552 :INT32) INCX)
    (%%SCASUM N-REF48550 (FNV-FOREIGN-POINTER CX) INCX-REF48552)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCASUM))

(COMMON-LISP:EXPORT '%SCASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCNRM2))

(CFFI:DEFCFUN ("scnrm2_" %%SCNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCNRM2))

(COMMON-LISP:PUSHNEW '("SCNRM2" "scnrm2_" %%SCNRM2 %SCNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCNRM2))

(COMMON-LISP:DEFUN %SCNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48553 ':INT32) (INCX-REF48555 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48553 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48555 :INT32) INCX)
    (%%SCNRM2 N-REF48553 (FNV-FOREIGN-POINTER X) INCX-REF48555)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCNRM2))

(COMMON-LISP:EXPORT '%SCNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCOPY))

(CFFI:DEFCFUN ("scopy_" %%SCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCOPY))

(COMMON-LISP:PUSHNEW '("SCOPY" "scopy_" %%SCOPY %SCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCOPY))

(COMMON-LISP:DEFUN %SCOPY (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48556 ':INT32) (INCX-REF48558 ':INT32)
                              (INCY-REF48560 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48556 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48558 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48560 :INT32) INCY)
    (%%SCOPY N-REF48556 (FNV-FOREIGN-POINTER SX) INCX-REF48558
     (FNV-FOREIGN-POINTER SY) INCY-REF48560)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCOPY))

(COMMON-LISP:EXPORT '%SCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SDOT))

(CFFI:DEFCFUN ("sdot_" %%SDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SDOT))

(COMMON-LISP:PUSHNEW '("SDOT" "sdot_" %%SDOT %SDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SDOT))

(COMMON-LISP:DEFUN %SDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48561 ':INT32) (INCX-REF48563 ':INT32)
                              (INCY-REF48565 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48561 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48563 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48565 :INT32) INCY)
    (%%SDOT N-REF48561 (FNV-FOREIGN-POINTER SX) INCX-REF48563
     (FNV-FOREIGN-POINTER SY) INCY-REF48565)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SDOT))

(COMMON-LISP:EXPORT '%SDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SDSDOT))

(CFFI:DEFCFUN ("sdsdot_" %%SDSDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SB :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SDSDOT))

(COMMON-LISP:PUSHNEW '("SDSDOT" "sdsdot_" %%SDSDOT %SDSDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SDSDOT))

(COMMON-LISP:DEFUN %SDSDOT (N SB SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDSDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48566 ':INT32) (SB-REF48567 ':FLOAT)
                              (INCX-REF48569 ':INT32) (INCY-REF48571 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48566 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF48567 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48569 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48571 :INT32) INCY)
    (%%SDSDOT N-REF48566 SB-REF48567 (FNV-FOREIGN-POINTER SX) INCX-REF48569
     (FNV-FOREIGN-POINTER SY) INCY-REF48571)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SDSDOT))

(COMMON-LISP:EXPORT '%SDSDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGBMV))

(CFFI:DEFCFUN ("sgbmv_" %%SGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGBMV))

(COMMON-LISP:PUSHNEW '("SGBMV" "sgbmv_" %%SGBMV %SGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGBMV))

(COMMON-LISP:DEFUN %SGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48573 ':INT32) (N-REF48574 ':INT32)
                              (KL-REF48575 ':INT32) (KU-REF48576 ':INT32)
                              (ALPHA-REF48577 ':FLOAT) (LDA-REF48579 ':INT32)
                              (INCX-REF48581 ':INT32) (BETA-REF48582 ':FLOAT)
                              (INCY-REF48584 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48573 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48574 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48575 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48576 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48577 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48579 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48581 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48582 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48584 :INT32) INCY)
    (%%SGBMV TRANS M-REF48573 N-REF48574 KL-REF48575 KU-REF48576 ALPHA-REF48577
     (FNV-FOREIGN-POINTER A) LDA-REF48579 (FNV-FOREIGN-POINTER X) INCX-REF48581
     BETA-REF48582 (FNV-FOREIGN-POINTER Y) INCY-REF48584)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGBMV))

(COMMON-LISP:EXPORT '%SGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGEMM))

(CFFI:DEFCFUN ("sgemm_" %%SGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGEMM))

(COMMON-LISP:PUSHNEW '("SGEMM" "sgemm_" %%SGEMM %SGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGEMM))

(COMMON-LISP:DEFUN %SGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48587 ':INT32) (N-REF48588 ':INT32)
                              (K-REF48589 ':INT32) (ALPHA-REF48590 ':FLOAT)
                              (LDA-REF48592 ':INT32) (LDB-REF48594 ':INT32)
                              (BETA-REF48595 ':FLOAT) (LDC-REF48597 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48587 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48588 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48589 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48590 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48592 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48594 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48595 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48597 :INT32) LDC)
    (%%SGEMM TRANSA TRANSB M-REF48587 N-REF48588 K-REF48589 ALPHA-REF48590
     (FNV-FOREIGN-POINTER A) LDA-REF48592 (FNV-FOREIGN-POINTER B) LDB-REF48594
     BETA-REF48595 (FNV-FOREIGN-POINTER C) LDC-REF48597)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGEMM))

(COMMON-LISP:EXPORT '%SGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGEMV))

(CFFI:DEFCFUN ("sgemv_" %%SGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGEMV))

(COMMON-LISP:PUSHNEW '("SGEMV" "sgemv_" %%SGEMV %SGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGEMV))

(COMMON-LISP:DEFUN %SGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48599 ':INT32) (N-REF48600 ':INT32)
                              (ALPHA-REF48601 ':FLOAT) (LDA-REF48603 ':INT32)
                              (INCX-REF48605 ':INT32) (BETA-REF48606 ':FLOAT)
                              (INCY-REF48608 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48599 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48600 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48601 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48603 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48605 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48606 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48608 :INT32) INCY)
    (%%SGEMV TRANS M-REF48599 N-REF48600 ALPHA-REF48601 (FNV-FOREIGN-POINTER A)
     LDA-REF48603 (FNV-FOREIGN-POINTER X) INCX-REF48605 BETA-REF48606
     (FNV-FOREIGN-POINTER Y) INCY-REF48608)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGEMV))

(COMMON-LISP:EXPORT '%SGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGER))

(CFFI:DEFCFUN ("sger_" %%SGER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGER))

(COMMON-LISP:PUSHNEW '("SGER" "sger_" %%SGER %SGER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGER))

(COMMON-LISP:DEFUN %SGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGER)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48609 ':INT32) (N-REF48610 ':INT32)
                              (ALPHA-REF48611 ':FLOAT) (INCX-REF48613 ':INT32)
                              (INCY-REF48615 ':INT32) (LDA-REF48617 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48609 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48610 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48611 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48613 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48615 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48617 :INT32) LDA)
    (%%SGER M-REF48609 N-REF48610 ALPHA-REF48611 (FNV-FOREIGN-POINTER X)
     INCX-REF48613 (FNV-FOREIGN-POINTER Y) INCY-REF48615
     (FNV-FOREIGN-POINTER A) LDA-REF48617)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGER))

(COMMON-LISP:EXPORT '%SGER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SNRM2))

(CFFI:DEFCFUN ("snrm2_" %%SNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SNRM2))

(COMMON-LISP:PUSHNEW '("SNRM2" "snrm2_" %%SNRM2 %SNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SNRM2))

(COMMON-LISP:DEFUN %SNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48618 ':INT32) (INCX-REF48620 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48618 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48620 :INT32) INCX)
    (%%SNRM2 N-REF48618 (FNV-FOREIGN-POINTER X) INCX-REF48620)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SNRM2))

(COMMON-LISP:EXPORT '%SNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROT))

(CFFI:DEFCFUN ("srot_" %%SROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROT))

(COMMON-LISP:PUSHNEW '("SROT" "srot_" %%SROT %SROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROT))

(COMMON-LISP:DEFUN %SROT (N SX INCX SY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48621 ':INT32) (INCX-REF48623 ':INT32)
                              (INCY-REF48625 ':INT32) (C-REF48626 ':FLOAT)
                              (S-REF48627 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48621 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48623 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48625 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48626 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48627 :FLOAT) S)
    (%%SROT N-REF48621 (FNV-FOREIGN-POINTER SX) INCX-REF48623
     (FNV-FOREIGN-POINTER SY) INCY-REF48625 C-REF48626 S-REF48627)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROT))

(COMMON-LISP:EXPORT '%SROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTG))

(CFFI:DEFCFUN ("srotg_" %%SROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SA :POINTER)
  (SB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTG))

(COMMON-LISP:PUSHNEW '("SROTG" "srotg_" %%SROTG %SROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTG))

(COMMON-LISP:DEFUN %SROTG (SA SB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTG)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((SA-REF48628 ':FLOAT) (SB-REF48629 ':FLOAT)
                              (C-REF48630 ':FLOAT) (S-REF48631 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48628 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF48629 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48630 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48631 :FLOAT) S)
    (%%SROTG SA-REF48628 SB-REF48629 C-REF48630 S-REF48631)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTG))

(COMMON-LISP:EXPORT '%SROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTM))

(CFFI:DEFCFUN ("srotm_" %%SROTM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER)
  (SPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTM))

(COMMON-LISP:PUSHNEW '("SROTM" "srotm_" %%SROTM %SROTM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTM))

(COMMON-LISP:DEFUN %SROTM (N SX INCX SY INCY SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-FLOAT SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48632 ':INT32) (INCX-REF48634 ':INT32)
                              (INCY-REF48636 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48632 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48634 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48636 :INT32) INCY)
    (%%SROTM N-REF48632 (FNV-FOREIGN-POINTER SX) INCX-REF48634
     (FNV-FOREIGN-POINTER SY) INCY-REF48636 (FNV-FOREIGN-POINTER SPARAM))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTM))

(COMMON-LISP:EXPORT '%SROTM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTMG))

(CFFI:DEFCFUN ("srotmg_" %%SROTMG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SD1 :POINTER)
  (SD2 :POINTER)
  (SX1 :POINTER)
  (SY1 :POINTER)
  (SPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTMG))

(COMMON-LISP:PUSHNEW '("SROTMG" "srotmg_" %%SROTMG %SROTMG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTMG))

(COMMON-LISP:DEFUN %SROTMG (SD1 SD2 SX1 SY1 SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTMG)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD1)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD2)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SX1)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SY1)
                       (COMMON-LISP:TYPE FNV-FLOAT SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((SD1-REF48638 ':FLOAT) (SD2-REF48639 ':FLOAT)
                              (SX1-REF48640 ':FLOAT) (SY1-REF48641 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SD1-REF48638 :FLOAT) SD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SD2-REF48639 :FLOAT) SD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF SX1-REF48640 :FLOAT) SX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SY1-REF48641 :FLOAT) SY1)
    (%%SROTMG SD1-REF48638 SD2-REF48639 SX1-REF48640 SY1-REF48641
     (FNV-FOREIGN-POINTER SPARAM))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTMG))

(COMMON-LISP:EXPORT '%SROTMG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSBMV))

(CFFI:DEFCFUN ("ssbmv_" %%SSBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSBMV))

(COMMON-LISP:PUSHNEW '("SSBMV" "ssbmv_" %%SSBMV %SSBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSBMV))

(COMMON-LISP:DEFUN %SSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48644 ':INT32) (K-REF48645 ':INT32)
                              (ALPHA-REF48646 ':FLOAT) (LDA-REF48648 ':INT32)
                              (INCX-REF48650 ':INT32) (BETA-REF48651 ':FLOAT)
                              (INCY-REF48653 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48644 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48645 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48646 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48648 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48650 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48651 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48653 :INT32) INCY)
    (%%SSBMV UPLO N-REF48644 K-REF48645 ALPHA-REF48646 (FNV-FOREIGN-POINTER A)
     LDA-REF48648 (FNV-FOREIGN-POINTER X) INCX-REF48650 BETA-REF48651
     (FNV-FOREIGN-POINTER Y) INCY-REF48653)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSBMV))

(COMMON-LISP:EXPORT '%SSBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSCAL))

(CFFI:DEFCFUN ("sscal_" %%SSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSCAL))

(COMMON-LISP:PUSHNEW '("SSCAL" "sscal_" %%SSCAL %SSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSCAL))

(COMMON-LISP:DEFUN %SSCAL (N SA SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48654 ':INT32) (SA-REF48655 ':FLOAT)
                              (INCX-REF48657 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48654 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48655 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48657 :INT32) INCX)
    (%%SSCAL N-REF48654 SA-REF48655 (FNV-FOREIGN-POINTER SX) INCX-REF48657)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSCAL))

(COMMON-LISP:EXPORT '%SSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPMV))

(CFFI:DEFCFUN ("sspmv_" %%SSPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPMV))

(COMMON-LISP:PUSHNEW '("SSPMV" "sspmv_" %%SSPMV %SSPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPMV))

(COMMON-LISP:DEFUN %SSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48659 ':INT32) (ALPHA-REF48660 ':FLOAT)
                              (INCX-REF48663 ':INT32) (BETA-REF48664 ':FLOAT)
                              (INCY-REF48666 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48659 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48660 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48663 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48664 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48666 :INT32) INCY)
    (%%SSPMV UPLO N-REF48659 ALPHA-REF48660 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48663 BETA-REF48664
     (FNV-FOREIGN-POINTER Y) INCY-REF48666)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPMV))

(COMMON-LISP:EXPORT '%SSPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPR))

(CFFI:DEFCFUN ("sspr_" %%SSPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPR))

(COMMON-LISP:PUSHNEW '("SSPR" "sspr_" %%SSPR %SSPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPR))

(COMMON-LISP:DEFUN %SSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48668 ':INT32) (ALPHA-REF48669 ':FLOAT)
                              (INCX-REF48671 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48668 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48669 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48671 :INT32) INCX)
    (%%SSPR UPLO N-REF48668 ALPHA-REF48669 (FNV-FOREIGN-POINTER X)
     INCX-REF48671 (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPR))

(COMMON-LISP:EXPORT '%SSPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPR2))

(CFFI:DEFCFUN ("sspr2_" %%SSPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPR2))

(COMMON-LISP:PUSHNEW '("SSPR2" "sspr2_" %%SSPR2 %SSPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPR2))

(COMMON-LISP:DEFUN %SSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-FLOAT AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48674 ':INT32) (ALPHA-REF48675 ':FLOAT)
                              (INCX-REF48677 ':INT32) (INCY-REF48679 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48674 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48675 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48677 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48679 :INT32) INCY)
    (%%SSPR2 UPLO N-REF48674 ALPHA-REF48675 (FNV-FOREIGN-POINTER X)
     INCX-REF48677 (FNV-FOREIGN-POINTER Y) INCY-REF48679
     (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPR2))

(COMMON-LISP:EXPORT '%SSPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSWAP))

(CFFI:DEFCFUN ("sswap_" %%SSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSWAP))

(COMMON-LISP:PUSHNEW '("SSWAP" "sswap_" %%SSWAP %SSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSWAP))

(COMMON-LISP:DEFUN %SSWAP (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48681 ':INT32) (INCX-REF48683 ':INT32)
                              (INCY-REF48685 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48681 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48683 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48685 :INT32) INCY)
    (%%SSWAP N-REF48681 (FNV-FOREIGN-POINTER SX) INCX-REF48683
     (FNV-FOREIGN-POINTER SY) INCY-REF48685)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSWAP))

(COMMON-LISP:EXPORT '%SSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYMM))

(CFFI:DEFCFUN ("ssymm_" %%SSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYMM))

(COMMON-LISP:PUSHNEW '("SSYMM" "ssymm_" %%SSYMM %SSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYMM))

(COMMON-LISP:DEFUN %SSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48688 ':INT32) (N-REF48689 ':INT32)
                              (ALPHA-REF48690 ':FLOAT) (LDA-REF48692 ':INT32)
                              (LDB-REF48694 ':INT32) (BETA-REF48695 ':FLOAT)
                              (LDC-REF48697 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48688 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48689 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48690 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48692 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48694 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48695 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48697 :INT32) LDC)
    (%%SSYMM SIDE UPLO M-REF48688 N-REF48689 ALPHA-REF48690
     (FNV-FOREIGN-POINTER A) LDA-REF48692 (FNV-FOREIGN-POINTER B) LDB-REF48694
     BETA-REF48695 (FNV-FOREIGN-POINTER C) LDC-REF48697)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYMM))

(COMMON-LISP:EXPORT '%SSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYMV))

(CFFI:DEFCFUN ("ssymv_" %%SSYMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYMV))

(COMMON-LISP:PUSHNEW '("SSYMV" "ssymv_" %%SSYMV %SSYMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYMV))

(COMMON-LISP:DEFUN %SSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48699 ':INT32) (ALPHA-REF48700 ':FLOAT)
                              (LDA-REF48702 ':INT32) (INCX-REF48704 ':INT32)
                              (BETA-REF48705 ':FLOAT) (INCY-REF48707 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48699 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48700 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48702 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48704 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48705 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48707 :INT32) INCY)
    (%%SSYMV UPLO N-REF48699 ALPHA-REF48700 (FNV-FOREIGN-POINTER A)
     LDA-REF48702 (FNV-FOREIGN-POINTER X) INCX-REF48704 BETA-REF48705
     (FNV-FOREIGN-POINTER Y) INCY-REF48707)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYMV))

(COMMON-LISP:EXPORT '%SSYMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR))

(CFFI:DEFCFUN ("ssyr_" %%SSYR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR))

(COMMON-LISP:PUSHNEW '("SSYR" "ssyr_" %%SSYR %SSYR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR))

(COMMON-LISP:DEFUN %SSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48709 ':INT32) (ALPHA-REF48710 ':FLOAT)
                              (INCX-REF48712 ':INT32) (LDA-REF48714 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48709 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48710 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48712 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48714 :INT32) LDA)
    (%%SSYR UPLO N-REF48709 ALPHA-REF48710 (FNV-FOREIGN-POINTER X)
     INCX-REF48712 (FNV-FOREIGN-POINTER A) LDA-REF48714)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR))

(COMMON-LISP:EXPORT '%SSYR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR2))

(CFFI:DEFCFUN ("ssyr2_" %%SSYR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR2))

(COMMON-LISP:PUSHNEW '("SSYR2" "ssyr2_" %%SSYR2 %SSYR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR2))

(COMMON-LISP:DEFUN %SSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-FLOAT Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48716 ':INT32) (ALPHA-REF48717 ':FLOAT)
                              (INCX-REF48719 ':INT32) (INCY-REF48721 ':INT32)
                              (LDA-REF48723 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48716 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48717 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48719 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48721 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48723 :INT32) LDA)
    (%%SSYR2 UPLO N-REF48716 ALPHA-REF48717 (FNV-FOREIGN-POINTER X)
     INCX-REF48719 (FNV-FOREIGN-POINTER Y) INCY-REF48721
     (FNV-FOREIGN-POINTER A) LDA-REF48723)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR2))

(COMMON-LISP:EXPORT '%SSYR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR2K))

(CFFI:DEFCFUN ("ssyr2k_" %%SSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR2K))

(COMMON-LISP:PUSHNEW '("SSYR2K" "ssyr2k_" %%SSYR2K %SSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR2K))

(COMMON-LISP:DEFUN %SSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48726 ':INT32) (K-REF48727 ':INT32)
                              (ALPHA-REF48728 ':FLOAT) (LDA-REF48730 ':INT32)
                              (LDB-REF48732 ':INT32) (BETA-REF48733 ':FLOAT)
                              (LDC-REF48735 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48726 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48727 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48728 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48730 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48732 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48733 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48735 :INT32) LDC)
    (%%SSYR2K UPLO TRANS N-REF48726 K-REF48727 ALPHA-REF48728
     (FNV-FOREIGN-POINTER A) LDA-REF48730 (FNV-FOREIGN-POINTER B) LDB-REF48732
     BETA-REF48733 (FNV-FOREIGN-POINTER C) LDC-REF48735)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR2K))

(COMMON-LISP:EXPORT '%SSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYRK))

(CFFI:DEFCFUN ("ssyrk_" %%SSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYRK))

(COMMON-LISP:PUSHNEW '("SSYRK" "ssyrk_" %%SSYRK %SSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYRK))

(COMMON-LISP:DEFUN %SSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-FLOAT C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48738 ':INT32) (K-REF48739 ':INT32)
                              (ALPHA-REF48740 ':FLOAT) (LDA-REF48742 ':INT32)
                              (BETA-REF48743 ':FLOAT) (LDC-REF48745 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48738 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48739 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48740 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48742 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48743 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48745 :INT32) LDC)
    (%%SSYRK UPLO TRANS N-REF48738 K-REF48739 ALPHA-REF48740
     (FNV-FOREIGN-POINTER A) LDA-REF48742 BETA-REF48743 (FNV-FOREIGN-POINTER C)
     LDC-REF48745)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYRK))

(COMMON-LISP:EXPORT '%SSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STBMV))

(CFFI:DEFCFUN ("stbmv_" %%STBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STBMV))

(COMMON-LISP:PUSHNEW '("STBMV" "stbmv_" %%STBMV %STBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STBMV))

(COMMON-LISP:DEFUN %STBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48749 ':INT32) (K-REF48750 ':INT32)
                              (LDA-REF48752 ':INT32) (INCX-REF48754 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48749 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48750 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48752 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48754 :INT32) INCX)
    (%%STBMV UPLO TRANS DIAG N-REF48749 K-REF48750 (FNV-FOREIGN-POINTER A)
     LDA-REF48752 (FNV-FOREIGN-POINTER X) INCX-REF48754)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STBMV))

(COMMON-LISP:EXPORT '%STBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STBSV))

(CFFI:DEFCFUN ("stbsv_" %%STBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STBSV))

(COMMON-LISP:PUSHNEW '("STBSV" "stbsv_" %%STBSV %STBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STBSV))

(COMMON-LISP:DEFUN %STBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48758 ':INT32) (K-REF48759 ':INT32)
                              (LDA-REF48761 ':INT32) (INCX-REF48763 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48758 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48759 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48761 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48763 :INT32) INCX)
    (%%STBSV UPLO TRANS DIAG N-REF48758 K-REF48759 (FNV-FOREIGN-POINTER A)
     LDA-REF48761 (FNV-FOREIGN-POINTER X) INCX-REF48763)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STBSV))

(COMMON-LISP:EXPORT '%STBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STPMV))

(CFFI:DEFCFUN ("stpmv_" %%STPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STPMV))

(COMMON-LISP:PUSHNEW '("STPMV" "stpmv_" %%STPMV %STPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STPMV))

(COMMON-LISP:DEFUN %STPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48767 ':INT32) (INCX-REF48770 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48767 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48770 :INT32) INCX)
    (%%STPMV UPLO TRANS DIAG N-REF48767 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48770)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STPMV))

(COMMON-LISP:EXPORT '%STPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STPSV))

(CFFI:DEFCFUN ("stpsv_" %%STPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STPSV))

(COMMON-LISP:PUSHNEW '("STPSV" "stpsv_" %%STPSV %STPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STPSV))

(COMMON-LISP:DEFUN %STPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT AP)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48774 ':INT32) (INCX-REF48777 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48774 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48777 :INT32) INCX)
    (%%STPSV UPLO TRANS DIAG N-REF48774 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48777)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STPSV))

(COMMON-LISP:EXPORT '%STPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRMM))

(CFFI:DEFCFUN ("strmm_" %%STRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRMM))

(COMMON-LISP:PUSHNEW '("STRMM" "strmm_" %%STRMM %STRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRMM))

(COMMON-LISP:DEFUN %STRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48782 ':INT32) (N-REF48783 ':INT32)
                              (ALPHA-REF48784 ':FLOAT) (LDA-REF48786 ':INT32)
                              (LDB-REF48788 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48782 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48783 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48784 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48786 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48788 :INT32) LDB)
    (%%STRMM SIDE UPLO TRANSA DIAG M-REF48782 N-REF48783 ALPHA-REF48784
     (FNV-FOREIGN-POINTER A) LDA-REF48786 (FNV-FOREIGN-POINTER B)
     LDB-REF48788)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRMM))

(COMMON-LISP:EXPORT '%STRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRMV))

(CFFI:DEFCFUN ("strmv_" %%STRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRMV))

(COMMON-LISP:PUSHNEW '("STRMV" "strmv_" %%STRMV %STRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRMV))

(COMMON-LISP:DEFUN %STRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48792 ':INT32) (LDA-REF48794 ':INT32)
                              (INCX-REF48796 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48792 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48794 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48796 :INT32) INCX)
    (%%STRMV UPLO TRANS DIAG N-REF48792 (FNV-FOREIGN-POINTER A) LDA-REF48794
     (FNV-FOREIGN-POINTER X) INCX-REF48796)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRMV))

(COMMON-LISP:EXPORT '%STRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRSM))

(CFFI:DEFCFUN ("strsm_" %%STRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRSM))

(COMMON-LISP:PUSHNEW '("STRSM" "strsm_" %%STRSM %STRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRSM))

(COMMON-LISP:DEFUN %STRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48801 ':INT32) (N-REF48802 ':INT32)
                              (ALPHA-REF48803 ':FLOAT) (LDA-REF48805 ':INT32)
                              (LDB-REF48807 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48801 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48802 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48803 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48805 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48807 :INT32) LDB)
    (%%STRSM SIDE UPLO TRANSA DIAG M-REF48801 N-REF48802 ALPHA-REF48803
     (FNV-FOREIGN-POINTER A) LDA-REF48805 (FNV-FOREIGN-POINTER B)
     LDB-REF48807)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRSM))

(COMMON-LISP:EXPORT '%STRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRSV))

(CFFI:DEFCFUN ("strsv_" %%STRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRSV))

(COMMON-LISP:PUSHNEW '("STRSV" "strsv_" %%STRSV %STRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRSV))

(COMMON-LISP:DEFUN %STRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-FLOAT A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-FLOAT X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48811 ':INT32) (LDA-REF48813 ':INT32)
                              (INCX-REF48815 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48811 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48813 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48815 :INT32) INCX)
    (%%STRSV UPLO TRANS DIAG N-REF48811 (FNV-FOREIGN-POINTER A) LDA-REF48813
     (FNV-FOREIGN-POINTER X) INCX-REF48815)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRSV))

(COMMON-LISP:EXPORT '%STRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%XERBLA))

(CFFI:DEFCFUN ("xerbla_" %%XERBLA :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SRNAME :STRING)
  (INFO :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%XERBLA))

(COMMON-LISP:PUSHNEW '("XERBLA" "xerbla_" %%XERBLA %XERBLA)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %XERBLA))

(COMMON-LISP:DEFUN %XERBLA (SRNAME INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SRNAME)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((INFO-REF48817 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF48817 :INT32) INFO)
    (%%XERBLA SRNAME INFO-REF48817)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %XERBLA))

(COMMON-LISP:EXPORT '%XERBLA '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%XERBLA_ARRAY))

(CFFI:DEFCFUN ("xerbla_array_" %%XERBLA_ARRAY :LIBRARY
               MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SRNAME_ARRAY :POINTER)
  (SRNAME_LEN :POINTER)
  (INFO :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%XERBLA_ARRAY))

(COMMON-LISP:PUSHNEW
 '("XERBLA_ARRAY" "xerbla_array_" %%XERBLA_ARRAY %XERBLA_ARRAY)
 (COMMON-LISP:GETF (COMMON-LISP:SYMBOL-PLIST 'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                   ':MAGICL)
 :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %XERBLA_ARRAY))

(COMMON-LISP:DEFUN %XERBLA_ARRAY (SRNAME_ARRAY SRNAME_LEN INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA_ARRAY)
                       (COMMON-LISP:TYPE COMMON-LISP:ARRAY SRNAME_ARRAY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32)
                        SRNAME_LEN)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SRNAME_LEN-REF48819 ':INT32)
                              (INFO-REF48820 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SRNAME_LEN-REF48819 :INT32) SRNAME_LEN)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF48820 :INT32) INFO)
    (%%XERBLA_ARRAY (FNV-FOREIGN-POINTER SRNAME_ARRAY) SRNAME_LEN-REF48819
     INFO-REF48820)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %XERBLA_ARRAY))

(COMMON-LISP:EXPORT '%XERBLA_ARRAY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZAXPY))

(CFFI:DEFCFUN ("zaxpy_" %%ZAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZAXPY))

(COMMON-LISP:PUSHNEW '("ZAXPY" "zaxpy_" %%ZAXPY %ZAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZAXPY))

(COMMON-LISP:DEFUN %ZAXPY (N ZA ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48821 ':INT32)
                              (ZA-REF48822 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48824 ':INT32) (INCY-REF48826 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48821 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF48822 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48824 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48826 :INT32) INCY)
    (%%ZAXPY N-REF48821 ZA-REF48822 (FNV-FOREIGN-POINTER ZX) INCX-REF48824
     (FNV-FOREIGN-POINTER ZY) INCY-REF48826)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZAXPY))

(COMMON-LISP:EXPORT '%ZAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZCOPY))

(CFFI:DEFCFUN ("zcopy_" %%ZCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZCOPY))

(COMMON-LISP:PUSHNEW '("ZCOPY" "zcopy_" %%ZCOPY %ZCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZCOPY))

(COMMON-LISP:DEFUN %ZCOPY (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48827 ':INT32) (INCX-REF48829 ':INT32)
                              (INCY-REF48831 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48827 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48829 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48831 :INT32) INCY)
    (%%ZCOPY N-REF48827 (FNV-FOREIGN-POINTER ZX) INCX-REF48829
     (FNV-FOREIGN-POINTER ZY) INCY-REF48831)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZCOPY))

(COMMON-LISP:EXPORT '%ZCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDOTC))

(CFFI:DEFCFUN ("zdotc_" %%ZDOTC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    COMPLEX-DOUBLE-FLOAT
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDOTC))

(COMMON-LISP:PUSHNEW '("ZDOTC" "zdotc_" %%ZDOTC %ZDOTC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDOTC))

(COMMON-LISP:DEFUN %ZDOTC (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48832 ':INT32) (INCX-REF48834 ':INT32)
                              (INCY-REF48836 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48832 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48834 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48836 :INT32) INCY)
    (%%ZDOTC N-REF48832 (FNV-FOREIGN-POINTER ZX) INCX-REF48834
     (FNV-FOREIGN-POINTER ZY) INCY-REF48836)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDOTC))

(COMMON-LISP:EXPORT '%ZDOTC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDOTU))

(CFFI:DEFCFUN ("zdotu_" %%ZDOTU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    COMPLEX-DOUBLE-FLOAT
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDOTU))

(COMMON-LISP:PUSHNEW '("ZDOTU" "zdotu_" %%ZDOTU %ZDOTU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDOTU))

(COMMON-LISP:DEFUN %ZDOTU (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48837 ':INT32) (INCX-REF48839 ':INT32)
                              (INCY-REF48841 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48837 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48839 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48841 :INT32) INCY)
    (%%ZDOTU N-REF48837 (FNV-FOREIGN-POINTER ZX) INCX-REF48839
     (FNV-FOREIGN-POINTER ZY) INCY-REF48841)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDOTU))

(COMMON-LISP:EXPORT '%ZDOTU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDROT))

(CFFI:DEFCFUN ("zdrot_" %%ZDROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDROT))

(COMMON-LISP:PUSHNEW '("ZDROT" "zdrot_" %%ZDROT %ZDROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDROT))

(COMMON-LISP:DEFUN %ZDROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48842 ':INT32) (INCX-REF48844 ':INT32)
                              (INCY-REF48846 ':INT32) (C-REF48847 ':DOUBLE)
                              (S-REF48848 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48842 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48844 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48846 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48847 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48848 :DOUBLE) S)
    (%%ZDROT N-REF48842 (FNV-FOREIGN-POINTER CX) INCX-REF48844
     (FNV-FOREIGN-POINTER CY) INCY-REF48846 C-REF48847 S-REF48848)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDROT))

(COMMON-LISP:EXPORT '%ZDROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDSCAL))

(CFFI:DEFCFUN ("zdscal_" %%ZDSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDSCAL))

(COMMON-LISP:PUSHNEW '("ZDSCAL" "zdscal_" %%ZDSCAL %ZDSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDSCAL))

(COMMON-LISP:DEFUN %ZDSCAL (N DA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48849 ':INT32) (DA-REF48850 ':DOUBLE)
                              (INCX-REF48852 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48849 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48850 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48852 :INT32) INCX)
    (%%ZDSCAL N-REF48849 DA-REF48850 (FNV-FOREIGN-POINTER ZX) INCX-REF48852)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDSCAL))

(COMMON-LISP:EXPORT '%ZDSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGBMV))

(CFFI:DEFCFUN ("zgbmv_" %%ZGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGBMV))

(COMMON-LISP:PUSHNEW '("ZGBMV" "zgbmv_" %%ZGBMV %ZGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGBMV))

(COMMON-LISP:DEFUN %ZGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48854 ':INT32) (N-REF48855 ':INT32)
                              (KL-REF48856 ':INT32) (KU-REF48857 ':INT32)
                              (ALPHA-REF48858 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48860 ':INT32) (INCX-REF48862 ':INT32)
                              (BETA-REF48863 'COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48865 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48854 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48855 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48856 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48857 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48858 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48860 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48862 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48863 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48865 :INT32) INCY)
    (%%ZGBMV TRANS M-REF48854 N-REF48855 KL-REF48856 KU-REF48857 ALPHA-REF48858
     (FNV-FOREIGN-POINTER A) LDA-REF48860 (FNV-FOREIGN-POINTER X) INCX-REF48862
     BETA-REF48863 (FNV-FOREIGN-POINTER Y) INCY-REF48865)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGBMV))

(COMMON-LISP:EXPORT '%ZGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGEMM))

(CFFI:DEFCFUN ("zgemm_" %%ZGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGEMM))

(COMMON-LISP:PUSHNEW '("ZGEMM" "zgemm_" %%ZGEMM %ZGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGEMM))

(COMMON-LISP:DEFUN %ZGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48868 ':INT32) (N-REF48869 ':INT32)
                              (K-REF48870 ':INT32)
                              (ALPHA-REF48871 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48873 ':INT32) (LDB-REF48875 ':INT32)
                              (BETA-REF48876 'COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF48878 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48868 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48869 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48870 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48871 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48873 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48875 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48876 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48878 :INT32) LDC)
    (%%ZGEMM TRANSA TRANSB M-REF48868 N-REF48869 K-REF48870 ALPHA-REF48871
     (FNV-FOREIGN-POINTER A) LDA-REF48873 (FNV-FOREIGN-POINTER B) LDB-REF48875
     BETA-REF48876 (FNV-FOREIGN-POINTER C) LDC-REF48878)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGEMM))

(COMMON-LISP:EXPORT '%ZGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGEMV))

(CFFI:DEFCFUN ("zgemv_" %%ZGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGEMV))

(COMMON-LISP:PUSHNEW '("ZGEMV" "zgemv_" %%ZGEMV %ZGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGEMV))

(COMMON-LISP:DEFUN %ZGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48880 ':INT32) (N-REF48881 ':INT32)
                              (ALPHA-REF48882 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48884 ':INT32) (INCX-REF48886 ':INT32)
                              (BETA-REF48887 'COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48889 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48880 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48881 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48882 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48884 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48886 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48887 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48889 :INT32) INCY)
    (%%ZGEMV TRANS M-REF48880 N-REF48881 ALPHA-REF48882 (FNV-FOREIGN-POINTER A)
     LDA-REF48884 (FNV-FOREIGN-POINTER X) INCX-REF48886 BETA-REF48887
     (FNV-FOREIGN-POINTER Y) INCY-REF48889)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGEMV))

(COMMON-LISP:EXPORT '%ZGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGERC))

(CFFI:DEFCFUN ("zgerc_" %%ZGERC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGERC))

(COMMON-LISP:PUSHNEW '("ZGERC" "zgerc_" %%ZGERC %ZGERC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGERC))

(COMMON-LISP:DEFUN %ZGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48890 ':INT32) (N-REF48891 ':INT32)
                              (ALPHA-REF48892 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48894 ':INT32) (INCY-REF48896 ':INT32)
                              (LDA-REF48898 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48890 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48891 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48892 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48894 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48896 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48898 :INT32) LDA)
    (%%ZGERC M-REF48890 N-REF48891 ALPHA-REF48892 (FNV-FOREIGN-POINTER X)
     INCX-REF48894 (FNV-FOREIGN-POINTER Y) INCY-REF48896
     (FNV-FOREIGN-POINTER A) LDA-REF48898)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGERC))

(COMMON-LISP:EXPORT '%ZGERC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGERU))

(CFFI:DEFCFUN ("zgeru_" %%ZGERU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGERU))

(COMMON-LISP:PUSHNEW '("ZGERU" "zgeru_" %%ZGERU %ZGERU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGERU))

(COMMON-LISP:DEFUN %ZGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48899 ':INT32) (N-REF48900 ':INT32)
                              (ALPHA-REF48901 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48903 ':INT32) (INCY-REF48905 ':INT32)
                              (LDA-REF48907 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48899 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48900 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48901 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48903 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48905 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48907 :INT32) LDA)
    (%%ZGERU M-REF48899 N-REF48900 ALPHA-REF48901 (FNV-FOREIGN-POINTER X)
     INCX-REF48903 (FNV-FOREIGN-POINTER Y) INCY-REF48905
     (FNV-FOREIGN-POINTER A) LDA-REF48907)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGERU))

(COMMON-LISP:EXPORT '%ZGERU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHBMV))

(CFFI:DEFCFUN ("zhbmv_" %%ZHBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHBMV))

(COMMON-LISP:PUSHNEW '("ZHBMV" "zhbmv_" %%ZHBMV %ZHBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHBMV))

(COMMON-LISP:DEFUN %ZHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48909 ':INT32) (K-REF48910 ':INT32)
                              (ALPHA-REF48911 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48913 ':INT32) (INCX-REF48915 ':INT32)
                              (BETA-REF48916 'COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48918 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48909 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48910 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48911 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48913 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48915 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48916 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48918 :INT32) INCY)
    (%%ZHBMV UPLO N-REF48909 K-REF48910 ALPHA-REF48911 (FNV-FOREIGN-POINTER A)
     LDA-REF48913 (FNV-FOREIGN-POINTER X) INCX-REF48915 BETA-REF48916
     (FNV-FOREIGN-POINTER Y) INCY-REF48918)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHBMV))

(COMMON-LISP:EXPORT '%ZHBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHEMM))

(CFFI:DEFCFUN ("zhemm_" %%ZHEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHEMM))

(COMMON-LISP:PUSHNEW '("ZHEMM" "zhemm_" %%ZHEMM %ZHEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHEMM))

(COMMON-LISP:DEFUN %ZHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48921 ':INT32) (N-REF48922 ':INT32)
                              (ALPHA-REF48923 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48925 ':INT32) (LDB-REF48927 ':INT32)
                              (BETA-REF48928 'COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF48930 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48921 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48922 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48923 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48925 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48927 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48928 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48930 :INT32) LDC)
    (%%ZHEMM SIDE UPLO M-REF48921 N-REF48922 ALPHA-REF48923
     (FNV-FOREIGN-POINTER A) LDA-REF48925 (FNV-FOREIGN-POINTER B) LDB-REF48927
     BETA-REF48928 (FNV-FOREIGN-POINTER C) LDC-REF48930)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHEMM))

(COMMON-LISP:EXPORT '%ZHEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHEMV))

(CFFI:DEFCFUN ("zhemv_" %%ZHEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHEMV))

(COMMON-LISP:PUSHNEW '("ZHEMV" "zhemv_" %%ZHEMV %ZHEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHEMV))

(COMMON-LISP:DEFUN %ZHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48932 ':INT32)
                              (ALPHA-REF48933 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48935 ':INT32) (INCX-REF48937 ':INT32)
                              (BETA-REF48938 'COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48940 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48932 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48933 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48935 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48937 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48938 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48940 :INT32) INCY)
    (%%ZHEMV UPLO N-REF48932 ALPHA-REF48933 (FNV-FOREIGN-POINTER A)
     LDA-REF48935 (FNV-FOREIGN-POINTER X) INCX-REF48937 BETA-REF48938
     (FNV-FOREIGN-POINTER Y) INCY-REF48940)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHEMV))

(COMMON-LISP:EXPORT '%ZHEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER))

(CFFI:DEFCFUN ("zher_" %%ZHER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER))

(COMMON-LISP:PUSHNEW '("ZHER" "zher_" %%ZHER %ZHER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER))

(COMMON-LISP:DEFUN %ZHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48942 ':INT32) (ALPHA-REF48943 ':DOUBLE)
                              (INCX-REF48945 ':INT32) (LDA-REF48947 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48942 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48943 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48945 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48947 :INT32) LDA)
    (%%ZHER UPLO N-REF48942 ALPHA-REF48943 (FNV-FOREIGN-POINTER X)
     INCX-REF48945 (FNV-FOREIGN-POINTER A) LDA-REF48947)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER))

(COMMON-LISP:EXPORT '%ZHER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER2))

(CFFI:DEFCFUN ("zher2_" %%ZHER2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER2))

(COMMON-LISP:PUSHNEW '("ZHER2" "zher2_" %%ZHER2 %ZHER2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER2))

(COMMON-LISP:DEFUN %ZHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48949 ':INT32)
                              (ALPHA-REF48950 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48952 ':INT32) (INCY-REF48954 ':INT32)
                              (LDA-REF48956 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48949 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48950 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48952 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48954 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48956 :INT32) LDA)
    (%%ZHER2 UPLO N-REF48949 ALPHA-REF48950 (FNV-FOREIGN-POINTER X)
     INCX-REF48952 (FNV-FOREIGN-POINTER Y) INCY-REF48954
     (FNV-FOREIGN-POINTER A) LDA-REF48956)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER2))

(COMMON-LISP:EXPORT '%ZHER2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER2K))

(CFFI:DEFCFUN ("zher2k_" %%ZHER2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER2K))

(COMMON-LISP:PUSHNEW '("ZHER2K" "zher2k_" %%ZHER2K %ZHER2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER2K))

(COMMON-LISP:DEFUN %ZHER2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48959 ':INT32) (K-REF48960 ':INT32)
                              (ALPHA-REF48961 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48963 ':INT32) (LDB-REF48965 ':INT32)
                              (BETA-REF48966 ':DOUBLE) (LDC-REF48968 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48959 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48960 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48961 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48963 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48965 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48966 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48968 :INT32) LDC)
    (%%ZHER2K UPLO TRANS N-REF48959 K-REF48960 ALPHA-REF48961
     (FNV-FOREIGN-POINTER A) LDA-REF48963 (FNV-FOREIGN-POINTER B) LDB-REF48965
     BETA-REF48966 (FNV-FOREIGN-POINTER C) LDC-REF48968)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER2K))

(COMMON-LISP:EXPORT '%ZHER2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHERK))

(CFFI:DEFCFUN ("zherk_" %%ZHERK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHERK))

(COMMON-LISP:PUSHNEW '("ZHERK" "zherk_" %%ZHERK %ZHERK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHERK))

(COMMON-LISP:DEFUN %ZHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHERK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48971 ':INT32) (K-REF48972 ':INT32)
                              (ALPHA-REF48973 ':DOUBLE) (LDA-REF48975 ':INT32)
                              (BETA-REF48976 ':DOUBLE) (LDC-REF48978 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48971 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48972 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48973 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48975 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48976 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48978 :INT32) LDC)
    (%%ZHERK UPLO TRANS N-REF48971 K-REF48972 ALPHA-REF48973
     (FNV-FOREIGN-POINTER A) LDA-REF48975 BETA-REF48976 (FNV-FOREIGN-POINTER C)
     LDC-REF48978)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHERK))

(COMMON-LISP:EXPORT '%ZHERK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPMV))

(CFFI:DEFCFUN ("zhpmv_" %%ZHPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPMV))

(COMMON-LISP:PUSHNEW '("ZHPMV" "zhpmv_" %%ZHPMV %ZHPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPMV))

(COMMON-LISP:DEFUN %ZHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48980 ':INT32)
                              (ALPHA-REF48981 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48984 ':INT32)
                              (BETA-REF48985 'COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48987 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48980 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48981 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48984 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48985 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48987 :INT32) INCY)
    (%%ZHPMV UPLO N-REF48980 ALPHA-REF48981 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF48984 BETA-REF48985
     (FNV-FOREIGN-POINTER Y) INCY-REF48987)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPMV))

(COMMON-LISP:EXPORT '%ZHPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPR))

(CFFI:DEFCFUN ("zhpr_" %%ZHPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPR))

(COMMON-LISP:PUSHNEW '("ZHPR" "zhpr_" %%ZHPR %ZHPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPR))

(COMMON-LISP:DEFUN %ZHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48989 ':INT32) (ALPHA-REF48990 ':DOUBLE)
                              (INCX-REF48992 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48989 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48990 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48992 :INT32) INCX)
    (%%ZHPR UPLO N-REF48989 ALPHA-REF48990 (FNV-FOREIGN-POINTER X)
     INCX-REF48992 (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPR))

(COMMON-LISP:EXPORT '%ZHPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPR2))

(CFFI:DEFCFUN ("zhpr2_" %%ZHPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPR2))

(COMMON-LISP:PUSHNEW '("ZHPR2" "zhpr2_" %%ZHPR2 %ZHPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPR2))

(COMMON-LISP:DEFUN %ZHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48995 ':INT32)
                              (ALPHA-REF48996 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48998 ':INT32) (INCY-REF49000 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48995 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48996 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48998 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49000 :INT32) INCY)
    (%%ZHPR2 UPLO N-REF48995 ALPHA-REF48996 (FNV-FOREIGN-POINTER X)
     INCX-REF48998 (FNV-FOREIGN-POINTER Y) INCY-REF49000
     (FNV-FOREIGN-POINTER AP))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPR2))

(COMMON-LISP:EXPORT '%ZHPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZROTG))

(CFFI:DEFCFUN ("zrotg_" %%ZROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (CA :POINTER)
  (CB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZROTG))

(COMMON-LISP:PUSHNEW '("ZROTG" "zrotg_" %%ZROTG %ZROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZROTG))

(COMMON-LISP:DEFUN %ZROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZROTG)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF49002 'COMPLEX-DOUBLE-FLOAT)
                              (CB-REF49003 'COMPLEX-DOUBLE-FLOAT)
                              (C-REF49004 ':DOUBLE)
                              (S-REF49005 'COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF49002 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CB-REF49003 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF49004 :DOUBLE) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              S-REF49005 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART S)))
    (%%ZROTG CA-REF49002 CB-REF49003 C-REF49004 S-REF49005)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZROTG))

(COMMON-LISP:EXPORT '%ZROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSCAL))

(CFFI:DEFCFUN ("zscal_" %%ZSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSCAL))

(COMMON-LISP:PUSHNEW '("ZSCAL" "zscal_" %%ZSCAL %ZSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSCAL))

(COMMON-LISP:DEFUN %ZSCAL (N ZA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49006 ':INT32)
                              (ZA-REF49007 'COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF49009 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49006 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF49007 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49009 :INT32) INCX)
    (%%ZSCAL N-REF49006 ZA-REF49007 (FNV-FOREIGN-POINTER ZX) INCX-REF49009)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSCAL))

(COMMON-LISP:EXPORT '%ZSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSWAP))

(CFFI:DEFCFUN ("zswap_" %%ZSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSWAP))

(COMMON-LISP:PUSHNEW '("ZSWAP" "zswap_" %%ZSWAP %ZSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSWAP))

(COMMON-LISP:DEFUN %ZSWAP (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49010 ':INT32) (INCX-REF49012 ':INT32)
                              (INCY-REF49014 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49010 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49012 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49014 :INT32) INCY)
    (%%ZSWAP N-REF49010 (FNV-FOREIGN-POINTER ZX) INCX-REF49012
     (FNV-FOREIGN-POINTER ZY) INCY-REF49014)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSWAP))

(COMMON-LISP:EXPORT '%ZSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYMM))

(CFFI:DEFCFUN ("zsymm_" %%ZSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYMM))

(COMMON-LISP:PUSHNEW '("ZSYMM" "zsymm_" %%ZSYMM %ZSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYMM))

(COMMON-LISP:DEFUN %ZSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49017 ':INT32) (N-REF49018 ':INT32)
                              (ALPHA-REF49019 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49021 ':INT32) (LDB-REF49023 ':INT32)
                              (BETA-REF49024 'COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49026 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49017 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49018 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49019 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49021 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49023 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49024 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49026 :INT32) LDC)
    (%%ZSYMM SIDE UPLO M-REF49017 N-REF49018 ALPHA-REF49019
     (FNV-FOREIGN-POINTER A) LDA-REF49021 (FNV-FOREIGN-POINTER B) LDB-REF49023
     BETA-REF49024 (FNV-FOREIGN-POINTER C) LDC-REF49026)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYMM))

(COMMON-LISP:EXPORT '%ZSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYR2K))

(CFFI:DEFCFUN ("zsyr2k_" %%ZSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYR2K))

(COMMON-LISP:PUSHNEW '("ZSYR2K" "zsyr2k_" %%ZSYR2K %ZSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYR2K))

(COMMON-LISP:DEFUN %ZSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49029 ':INT32) (K-REF49030 ':INT32)
                              (ALPHA-REF49031 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49033 ':INT32) (LDB-REF49035 ':INT32)
                              (BETA-REF49036 'COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49038 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49029 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49030 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49031 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49033 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49035 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49036 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49038 :INT32) LDC)
    (%%ZSYR2K UPLO TRANS N-REF49029 K-REF49030 ALPHA-REF49031
     (FNV-FOREIGN-POINTER A) LDA-REF49033 (FNV-FOREIGN-POINTER B) LDB-REF49035
     BETA-REF49036 (FNV-FOREIGN-POINTER C) LDC-REF49038)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYR2K))

(COMMON-LISP:EXPORT '%ZSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYRK))

(CFFI:DEFCFUN ("zsyrk_" %%ZSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYRK))

(COMMON-LISP:PUSHNEW '("ZSYRK" "zsyrk_" %%ZSYRK %ZSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYRK))

(COMMON-LISP:DEFUN %ZSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49041 ':INT32) (K-REF49042 ':INT32)
                              (ALPHA-REF49043 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49045 ':INT32)
                              (BETA-REF49046 'COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49048 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49041 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49042 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49043 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49045 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49046 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49048 :INT32) LDC)
    (%%ZSYRK UPLO TRANS N-REF49041 K-REF49042 ALPHA-REF49043
     (FNV-FOREIGN-POINTER A) LDA-REF49045 BETA-REF49046 (FNV-FOREIGN-POINTER C)
     LDC-REF49048)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYRK))

(COMMON-LISP:EXPORT '%ZSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTBMV))

(CFFI:DEFCFUN ("ztbmv_" %%ZTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTBMV))

(COMMON-LISP:PUSHNEW '("ZTBMV" "ztbmv_" %%ZTBMV %ZTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTBMV))

(COMMON-LISP:DEFUN %ZTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49052 ':INT32) (K-REF49053 ':INT32)
                              (LDA-REF49055 ':INT32) (INCX-REF49057 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49052 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49053 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49055 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49057 :INT32) INCX)
    (%%ZTBMV UPLO TRANS DIAG N-REF49052 K-REF49053 (FNV-FOREIGN-POINTER A)
     LDA-REF49055 (FNV-FOREIGN-POINTER X) INCX-REF49057)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTBMV))

(COMMON-LISP:EXPORT '%ZTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTBSV))

(CFFI:DEFCFUN ("ztbsv_" %%ZTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTBSV))

(COMMON-LISP:PUSHNEW '("ZTBSV" "ztbsv_" %%ZTBSV %ZTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTBSV))

(COMMON-LISP:DEFUN %ZTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49061 ':INT32) (K-REF49062 ':INT32)
                              (LDA-REF49064 ':INT32) (INCX-REF49066 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49061 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49062 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49064 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49066 :INT32) INCX)
    (%%ZTBSV UPLO TRANS DIAG N-REF49061 K-REF49062 (FNV-FOREIGN-POINTER A)
     LDA-REF49064 (FNV-FOREIGN-POINTER X) INCX-REF49066)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTBSV))

(COMMON-LISP:EXPORT '%ZTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTPMV))

(CFFI:DEFCFUN ("ztpmv_" %%ZTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTPMV))

(COMMON-LISP:PUSHNEW '("ZTPMV" "ztpmv_" %%ZTPMV %ZTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTPMV))

(COMMON-LISP:DEFUN %ZTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49070 ':INT32) (INCX-REF49073 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49070 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49073 :INT32) INCX)
    (%%ZTPMV UPLO TRANS DIAG N-REF49070 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF49073)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTPMV))

(COMMON-LISP:EXPORT '%ZTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTPSV))

(CFFI:DEFCFUN ("ztpsv_" %%ZTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTPSV))

(COMMON-LISP:PUSHNEW '("ZTPSV" "ztpsv_" %%ZTPSV %ZTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTPSV))

(COMMON-LISP:DEFUN %ZTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE AP)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49077 ':INT32) (INCX-REF49080 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49077 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49080 :INT32) INCX)
    (%%ZTPSV UPLO TRANS DIAG N-REF49077 (FNV-FOREIGN-POINTER AP)
     (FNV-FOREIGN-POINTER X) INCX-REF49080)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTPSV))

(COMMON-LISP:EXPORT '%ZTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRMM))

(CFFI:DEFCFUN ("ztrmm_" %%ZTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRMM))

(COMMON-LISP:PUSHNEW '("ZTRMM" "ztrmm_" %%ZTRMM %ZTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRMM))

(COMMON-LISP:DEFUN %ZTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49085 ':INT32) (N-REF49086 ':INT32)
                              (ALPHA-REF49087 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49089 ':INT32) (LDB-REF49091 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49085 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49086 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49087 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49089 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49091 :INT32) LDB)
    (%%ZTRMM SIDE UPLO TRANSA DIAG M-REF49085 N-REF49086 ALPHA-REF49087
     (FNV-FOREIGN-POINTER A) LDA-REF49089 (FNV-FOREIGN-POINTER B)
     LDB-REF49091)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRMM))

(COMMON-LISP:EXPORT '%ZTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRMV))

(CFFI:DEFCFUN ("ztrmv_" %%ZTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRMV))

(COMMON-LISP:PUSHNEW '("ZTRMV" "ztrmv_" %%ZTRMV %ZTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRMV))

(COMMON-LISP:DEFUN %ZTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49095 ':INT32) (LDA-REF49097 ':INT32)
                              (INCX-REF49099 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49095 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49097 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49099 :INT32) INCX)
    (%%ZTRMV UPLO TRANS DIAG N-REF49095 (FNV-FOREIGN-POINTER A) LDA-REF49097
     (FNV-FOREIGN-POINTER X) INCX-REF49099)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRMV))

(COMMON-LISP:EXPORT '%ZTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRSM))

(CFFI:DEFCFUN ("ztrsm_" %%ZTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRSM))

(COMMON-LISP:PUSHNEW '("ZTRSM" "ztrsm_" %%ZTRSM %ZTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRSM))

(COMMON-LISP:DEFUN %ZTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49104 ':INT32) (N-REF49105 ':INT32)
                              (ALPHA-REF49106 'COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49108 ':INT32) (LDB-REF49110 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49104 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49105 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49106 COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49108 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49110 :INT32) LDB)
    (%%ZTRSM SIDE UPLO TRANSA DIAG M-REF49104 N-REF49105 ALPHA-REF49106
     (FNV-FOREIGN-POINTER A) LDA-REF49108 (FNV-FOREIGN-POINTER B)
     LDB-REF49110)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRSM))

(COMMON-LISP:EXPORT '%ZTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRSV))

(CFFI:DEFCFUN ("ztrsv_" %%ZTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRSV))

(COMMON-LISP:PUSHNEW '("ZTRSV" "ztrsv_" %%ZTRSV %ZTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRSV))

(COMMON-LISP:DEFUN %ZTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE FNV-COMPLEX-DOUBLE X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49114 ':INT32) (LDA-REF49116 ':INT32)
                              (INCX-REF49118 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49114 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49116 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49118 :INT32) INCX)
    (%%ZTRSV UPLO TRANS DIAG N-REF49114 (FNV-FOREIGN-POINTER A) LDA-REF49116
     (FNV-FOREIGN-POINTER X) INCX-REF49118)))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRSV))

(COMMON-LISP:EXPORT '%ZTRSV '#:MAGICL.BLAS-CFFI)


;;; End of file.
