;;;; Generated on 9/21/2017 at 11:41:51 (UTC-8).

(COMMON-LISP:IN-PACKAGE #:MAGICL.BLAS-CFFI)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CAXPY))

(CFFI:DEFCFUN ("caxpy_" %%CAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CA :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CAXPY))

(COMMON-LISP:PUSHNEW '("CAXPY" "caxpy_" %%CAXPY %CAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CAXPY))

(COMMON-LISP:DEFUN %CAXPY (N CA CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48033 ':INT32)
                              (CA-REF48034
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48036 ':INT32) (INCY-REF48038 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48033 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF48034
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48036 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48038 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48035 CX) (CY-REF48037 CY))
      (%%CAXPY N-REF48033 CA-REF48034 CX-REF48035 INCX-REF48036 CY-REF48037
       INCY-REF48038))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CAXPY))

(COMMON-LISP:EXPORT '%CAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CCOPY))

(CFFI:DEFCFUN ("ccopy_" %%CCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CCOPY))

(COMMON-LISP:PUSHNEW '("CCOPY" "ccopy_" %%CCOPY %CCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CCOPY))

(COMMON-LISP:DEFUN %CCOPY (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48039 ':INT32) (INCX-REF48041 ':INT32)
                              (INCY-REF48043 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48039 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48041 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48043 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48040 CX) (CY-REF48042 CY))
      (%%CCOPY N-REF48039 CX-REF48040 INCX-REF48041 CY-REF48042
       INCY-REF48043))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CCOPY))

(COMMON-LISP:EXPORT '%CCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CDOTC))

(CFFI:DEFCFUN ("cdotc_" %%CDOTC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CDOTC))

(COMMON-LISP:PUSHNEW '("CDOTC" "cdotc_" %%CDOTC %CDOTC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CDOTC))

(COMMON-LISP:DEFUN %CDOTC (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48044 ':INT32) (INCX-REF48046 ':INT32)
                              (INCY-REF48048 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48044 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48046 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48048 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48045 CX) (CY-REF48047 CY))
      (%%CDOTC N-REF48044 CX-REF48045 INCX-REF48046 CY-REF48047
       INCY-REF48048))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CDOTC))

(COMMON-LISP:EXPORT '%CDOTC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CDOTU))

(CFFI:DEFCFUN ("cdotu_" %%CDOTU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CDOTU))

(COMMON-LISP:PUSHNEW '("CDOTU" "cdotu_" %%CDOTU %CDOTU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CDOTU))

(COMMON-LISP:DEFUN %CDOTU (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CDOTU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48049 ':INT32) (INCX-REF48051 ':INT32)
                              (INCY-REF48053 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48049 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48051 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48053 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48050 CX) (CY-REF48052 CY))
      (%%CDOTU N-REF48049 CX-REF48050 INCX-REF48051 CY-REF48052
       INCY-REF48053))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CDOTU))

(COMMON-LISP:EXPORT '%CDOTU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGBMV))

(CFFI:DEFCFUN ("cgbmv_" %%CGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGBMV))

(COMMON-LISP:PUSHNEW '("CGBMV" "cgbmv_" %%CGBMV %CGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGBMV))

(COMMON-LISP:DEFUN %CGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48055 ':INT32) (N-REF48056 ':INT32)
                              (KL-REF48057 ':INT32) (KU-REF48058 ':INT32)
                              (ALPHA-REF48059
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48061 ':INT32) (INCX-REF48063 ':INT32)
                              (BETA-REF48064
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48066 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48055 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48056 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48057 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48058 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48059
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48061 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48063 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48064
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48066 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48060 A) (X-REF48062 X)
                                            (Y-REF48065 Y))
      (%%CGBMV TRANS M-REF48055 N-REF48056 KL-REF48057 KU-REF48058
       ALPHA-REF48059 A-REF48060 LDA-REF48061 X-REF48062 INCX-REF48063
       BETA-REF48064 Y-REF48065 INCY-REF48066))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGBMV))

(COMMON-LISP:EXPORT '%CGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGEMM))

(CFFI:DEFCFUN ("cgemm_" %%CGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGEMM))

(COMMON-LISP:PUSHNEW '("CGEMM" "cgemm_" %%CGEMM %CGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGEMM))

(COMMON-LISP:DEFUN %CGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48069 ':INT32) (N-REF48070 ':INT32)
                              (K-REF48071 ':INT32)
                              (ALPHA-REF48072
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48074 ':INT32) (LDB-REF48076 ':INT32)
                              (BETA-REF48077
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48079 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48069 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48070 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48071 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48072
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48074 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48076 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48077
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48079 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48073 A) (B-REF48075 B)
                                            (C-REF48078 C))
      (%%CGEMM TRANSA TRANSB M-REF48069 N-REF48070 K-REF48071 ALPHA-REF48072
       A-REF48073 LDA-REF48074 B-REF48075 LDB-REF48076 BETA-REF48077 C-REF48078
       LDC-REF48079))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGEMM))

(COMMON-LISP:EXPORT '%CGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGEMV))

(CFFI:DEFCFUN ("cgemv_" %%CGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGEMV))

(COMMON-LISP:PUSHNEW '("CGEMV" "cgemv_" %%CGEMV %CGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGEMV))

(COMMON-LISP:DEFUN %CGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48081 ':INT32) (N-REF48082 ':INT32)
                              (ALPHA-REF48083
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48085 ':INT32) (INCX-REF48087 ':INT32)
                              (BETA-REF48088
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48090 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48081 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48082 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48083
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48085 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48087 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48088
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48090 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48084 A) (X-REF48086 X)
                                            (Y-REF48089 Y))
      (%%CGEMV TRANS M-REF48081 N-REF48082 ALPHA-REF48083 A-REF48084
       LDA-REF48085 X-REF48086 INCX-REF48087 BETA-REF48088 Y-REF48089
       INCY-REF48090))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGEMV))

(COMMON-LISP:EXPORT '%CGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGERC))

(CFFI:DEFCFUN ("cgerc_" %%CGERC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGERC))

(COMMON-LISP:PUSHNEW '("CGERC" "cgerc_" %%CGERC %CGERC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGERC))

(COMMON-LISP:DEFUN %CGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48091 ':INT32) (N-REF48092 ':INT32)
                              (ALPHA-REF48093
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48095 ':INT32) (INCY-REF48097 ':INT32)
                              (LDA-REF48099 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48091 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48092 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48093
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48095 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48097 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48099 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48094 X) (Y-REF48096 Y)
                                            (A-REF48098 A))
      (%%CGERC M-REF48091 N-REF48092 ALPHA-REF48093 X-REF48094 INCX-REF48095
       Y-REF48096 INCY-REF48097 A-REF48098 LDA-REF48099))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGERC))

(COMMON-LISP:EXPORT '%CGERC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CGERU))

(CFFI:DEFCFUN ("cgeru_" %%CGERU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CGERU))

(COMMON-LISP:PUSHNEW '("CGERU" "cgeru_" %%CGERU %CGERU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CGERU))

(COMMON-LISP:DEFUN %CGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CGERU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48100 ':INT32) (N-REF48101 ':INT32)
                              (ALPHA-REF48102
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48104 ':INT32) (INCY-REF48106 ':INT32)
                              (LDA-REF48108 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48100 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48101 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48102
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48104 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48106 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48108 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48103 X) (Y-REF48105 Y)
                                            (A-REF48107 A))
      (%%CGERU M-REF48100 N-REF48101 ALPHA-REF48102 X-REF48103 INCX-REF48104
       Y-REF48105 INCY-REF48106 A-REF48107 LDA-REF48108))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CGERU))

(COMMON-LISP:EXPORT '%CGERU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHBMV))

(CFFI:DEFCFUN ("chbmv_" %%CHBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHBMV))

(COMMON-LISP:PUSHNEW '("CHBMV" "chbmv_" %%CHBMV %CHBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHBMV))

(COMMON-LISP:DEFUN %CHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48110 ':INT32) (K-REF48111 ':INT32)
                              (ALPHA-REF48112
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48114 ':INT32) (INCX-REF48116 ':INT32)
                              (BETA-REF48117
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48119 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48110 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48111 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48112
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48114 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48116 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48117
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48119 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48113 A) (X-REF48115 X)
                                            (Y-REF48118 Y))
      (%%CHBMV UPLO N-REF48110 K-REF48111 ALPHA-REF48112 A-REF48113
       LDA-REF48114 X-REF48115 INCX-REF48116 BETA-REF48117 Y-REF48118
       INCY-REF48119))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHBMV))

(COMMON-LISP:EXPORT '%CHBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHEMM))

(CFFI:DEFCFUN ("chemm_" %%CHEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHEMM))

(COMMON-LISP:PUSHNEW '("CHEMM" "chemm_" %%CHEMM %CHEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHEMM))

(COMMON-LISP:DEFUN %CHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48122 ':INT32) (N-REF48123 ':INT32)
                              (ALPHA-REF48124
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48126 ':INT32) (LDB-REF48128 ':INT32)
                              (BETA-REF48129
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48131 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48122 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48123 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48124
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48126 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48128 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48129
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48131 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48125 A) (B-REF48127 B)
                                            (C-REF48130 C))
      (%%CHEMM SIDE UPLO M-REF48122 N-REF48123 ALPHA-REF48124 A-REF48125
       LDA-REF48126 B-REF48127 LDB-REF48128 BETA-REF48129 C-REF48130
       LDC-REF48131))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHEMM))

(COMMON-LISP:EXPORT '%CHEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHEMV))

(CFFI:DEFCFUN ("chemv_" %%CHEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHEMV))

(COMMON-LISP:PUSHNEW '("CHEMV" "chemv_" %%CHEMV %CHEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHEMV))

(COMMON-LISP:DEFUN %CHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48133 ':INT32)
                              (ALPHA-REF48134
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48136 ':INT32) (INCX-REF48138 ':INT32)
                              (BETA-REF48139
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48141 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48133 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48134
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48136 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48138 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48139
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48141 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48135 A) (X-REF48137 X)
                                            (Y-REF48140 Y))
      (%%CHEMV UPLO N-REF48133 ALPHA-REF48134 A-REF48135 LDA-REF48136
       X-REF48137 INCX-REF48138 BETA-REF48139 Y-REF48140 INCY-REF48141))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHEMV))

(COMMON-LISP:EXPORT '%CHEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER))

(CFFI:DEFCFUN ("cher_" %%CHER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER))

(COMMON-LISP:PUSHNEW '("CHER" "cher_" %%CHER %CHER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER))

(COMMON-LISP:DEFUN %CHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48143 ':INT32) (ALPHA-REF48144 ':FLOAT)
                              (INCX-REF48146 ':INT32) (LDA-REF48148 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48143 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48144 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48146 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48148 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48145 X) (A-REF48147 A))
      (%%CHER UPLO N-REF48143 ALPHA-REF48144 X-REF48145 INCX-REF48146
       A-REF48147 LDA-REF48148))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER))

(COMMON-LISP:EXPORT '%CHER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER2))

(CFFI:DEFCFUN ("cher2_" %%CHER2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER2))

(COMMON-LISP:PUSHNEW '("CHER2" "cher2_" %%CHER2 %CHER2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER2))

(COMMON-LISP:DEFUN %CHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48150 ':INT32)
                              (ALPHA-REF48151
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48153 ':INT32) (INCY-REF48155 ':INT32)
                              (LDA-REF48157 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48150 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48151
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48153 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48155 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48157 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48152 X) (Y-REF48154 Y)
                                            (A-REF48156 A))
      (%%CHER2 UPLO N-REF48150 ALPHA-REF48151 X-REF48152 INCX-REF48153
       Y-REF48154 INCY-REF48155 A-REF48156 LDA-REF48157))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER2))

(COMMON-LISP:EXPORT '%CHER2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHER2K))

(CFFI:DEFCFUN ("cher2k_" %%CHER2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHER2K))

(COMMON-LISP:PUSHNEW '("CHER2K" "cher2k_" %%CHER2K %CHER2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHER2K))

(COMMON-LISP:DEFUN %CHER2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHER2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48160 ':INT32) (K-REF48161 ':INT32)
                              (ALPHA-REF48162
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48164 ':INT32) (LDB-REF48166 ':INT32)
                              (BETA-REF48167 ':FLOAT) (LDC-REF48169 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48160 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48161 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48162
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48164 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48166 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48167 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48169 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48163 A) (B-REF48165 B)
                                            (C-REF48168 C))
      (%%CHER2K UPLO TRANS N-REF48160 K-REF48161 ALPHA-REF48162 A-REF48163
       LDA-REF48164 B-REF48165 LDB-REF48166 BETA-REF48167 C-REF48168
       LDC-REF48169))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHER2K))

(COMMON-LISP:EXPORT '%CHER2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHERK))

(CFFI:DEFCFUN ("cherk_" %%CHERK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHERK))

(COMMON-LISP:PUSHNEW '("CHERK" "cherk_" %%CHERK %CHERK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHERK))

(COMMON-LISP:DEFUN %CHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHERK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48172 ':INT32) (K-REF48173 ':INT32)
                              (ALPHA-REF48174 ':FLOAT) (LDA-REF48176 ':INT32)
                              (BETA-REF48177 ':FLOAT) (LDC-REF48179 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48172 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48173 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48174 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48176 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48177 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48179 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48175 A) (C-REF48178 C))
      (%%CHERK UPLO TRANS N-REF48172 K-REF48173 ALPHA-REF48174 A-REF48175
       LDA-REF48176 BETA-REF48177 C-REF48178 LDC-REF48179))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHERK))

(COMMON-LISP:EXPORT '%CHERK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPMV))

(CFFI:DEFCFUN ("chpmv_" %%CHPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPMV))

(COMMON-LISP:PUSHNEW '("CHPMV" "chpmv_" %%CHPMV %CHPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPMV))

(COMMON-LISP:DEFUN %CHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48181 ':INT32)
                              (ALPHA-REF48182
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48185 ':INT32)
                              (BETA-REF48186
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCY-REF48188 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48181 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48182
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48185 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48186
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48188 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48183 AP) (X-REF48184 X)
                                            (Y-REF48187 Y))
      (%%CHPMV UPLO N-REF48181 ALPHA-REF48182 AP-REF48183 X-REF48184
       INCX-REF48185 BETA-REF48186 Y-REF48187 INCY-REF48188))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPMV))

(COMMON-LISP:EXPORT '%CHPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPR))

(CFFI:DEFCFUN ("chpr_" %%CHPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPR))

(COMMON-LISP:PUSHNEW '("CHPR" "chpr_" %%CHPR %CHPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPR))

(COMMON-LISP:DEFUN %CHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48190 ':INT32) (ALPHA-REF48191 ':FLOAT)
                              (INCX-REF48193 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48190 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48191 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48193 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48192 X) (AP-REF48194 AP))
      (%%CHPR UPLO N-REF48190 ALPHA-REF48191 X-REF48192 INCX-REF48193
       AP-REF48194))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPR))

(COMMON-LISP:EXPORT '%CHPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CHPR2))

(CFFI:DEFCFUN ("chpr2_" %%CHPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CHPR2))

(COMMON-LISP:PUSHNEW '("CHPR2" "chpr2_" %%CHPR2 %CHPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CHPR2))

(COMMON-LISP:DEFUN %CHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CHPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48196 ':INT32)
                              (ALPHA-REF48197
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48199 ':INT32) (INCY-REF48201 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48196 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48197
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48199 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48201 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48198 X) (Y-REF48200 Y)
                                            (AP-REF48202 AP))
      (%%CHPR2 UPLO N-REF48196 ALPHA-REF48197 X-REF48198 INCX-REF48199
       Y-REF48200 INCY-REF48201 AP-REF48202))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CHPR2))

(COMMON-LISP:EXPORT '%CHPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CROTG))

(CFFI:DEFCFUN ("crotg_" %%CROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (CA :POINTER)
  (CB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CROTG))

(COMMON-LISP:PUSHNEW '("CROTG" "crotg_" %%CROTG %CROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CROTG))

(COMMON-LISP:DEFUN %CROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CROTG)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF48203
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (CB-REF48204
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (C-REF48205 ':FLOAT)
                              (S-REF48206
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF48203
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CB-REF48204
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48205 :FLOAT) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              S-REF48206 MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART S)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%CROTG CA-REF48203 CB-REF48204 C-REF48205 S-REF48206))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CROTG))

(COMMON-LISP:EXPORT '%CROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSCAL))

(CFFI:DEFCFUN ("cscal_" %%CSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CA :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSCAL))

(COMMON-LISP:PUSHNEW '("CSCAL" "cscal_" %%CSCAL %CSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSCAL))

(COMMON-LISP:DEFUN %CSCAL (N CA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48207 ':INT32)
                              (CA-REF48208
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (INCX-REF48210 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48207 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF48208
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48210 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48209 CX))
      (%%CSCAL N-REF48207 CA-REF48208 CX-REF48209 INCX-REF48210))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSCAL))

(COMMON-LISP:EXPORT '%CSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSROT))

(CFFI:DEFCFUN ("csrot_" %%CSROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSROT))

(COMMON-LISP:PUSHNEW '("CSROT" "csrot_" %%CSROT %CSROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSROT))

(COMMON-LISP:DEFUN %CSROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48211 ':INT32) (INCX-REF48213 ':INT32)
                              (INCY-REF48215 ':INT32) (C-REF48216 ':FLOAT)
                              (S-REF48217 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48211 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48213 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48215 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48216 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48217 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48212 CX) (CY-REF48214 CY))
      (%%CSROT N-REF48211 CX-REF48212 INCX-REF48213 CY-REF48214 INCY-REF48215
       C-REF48216 S-REF48217))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSROT))

(COMMON-LISP:EXPORT '%CSROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSSCAL))

(CFFI:DEFCFUN ("csscal_" %%CSSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSSCAL))

(COMMON-LISP:PUSHNEW '("CSSCAL" "csscal_" %%CSSCAL %CSSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSSCAL))

(COMMON-LISP:DEFUN %CSSCAL (N SA CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48218 ':INT32) (SA-REF48219 ':FLOAT)
                              (INCX-REF48221 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48218 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48219 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48221 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48220 CX))
      (%%CSSCAL N-REF48218 SA-REF48219 CX-REF48220 INCX-REF48221))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSSCAL))

(COMMON-LISP:EXPORT '%CSSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSWAP))

(CFFI:DEFCFUN ("cswap_" %%CSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSWAP))

(COMMON-LISP:PUSHNEW '("CSWAP" "cswap_" %%CSWAP %CSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSWAP))

(COMMON-LISP:DEFUN %CSWAP (N CX INCX CY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48222 ':INT32) (INCX-REF48224 ':INT32)
                              (INCY-REF48226 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48222 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48224 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48226 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48223 CX) (CY-REF48225 CY))
      (%%CSWAP N-REF48222 CX-REF48223 INCX-REF48224 CY-REF48225
       INCY-REF48226))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSWAP))

(COMMON-LISP:EXPORT '%CSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYMM))

(CFFI:DEFCFUN ("csymm_" %%CSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYMM))

(COMMON-LISP:PUSHNEW '("CSYMM" "csymm_" %%CSYMM %CSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYMM))

(COMMON-LISP:DEFUN %CSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48229 ':INT32) (N-REF48230 ':INT32)
                              (ALPHA-REF48231
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48233 ':INT32) (LDB-REF48235 ':INT32)
                              (BETA-REF48236
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48238 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48229 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48230 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48231
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48233 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48235 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48236
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48238 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48232 A) (B-REF48234 B)
                                            (C-REF48237 C))
      (%%CSYMM SIDE UPLO M-REF48229 N-REF48230 ALPHA-REF48231 A-REF48232
       LDA-REF48233 B-REF48234 LDB-REF48235 BETA-REF48236 C-REF48237
       LDC-REF48238))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYMM))

(COMMON-LISP:EXPORT '%CSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYR2K))

(CFFI:DEFCFUN ("csyr2k_" %%CSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYR2K))

(COMMON-LISP:PUSHNEW '("CSYR2K" "csyr2k_" %%CSYR2K %CSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYR2K))

(COMMON-LISP:DEFUN %CSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48241 ':INT32) (K-REF48242 ':INT32)
                              (ALPHA-REF48243
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48245 ':INT32) (LDB-REF48247 ':INT32)
                              (BETA-REF48248
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48250 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48241 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48242 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48243
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48245 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48247 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48248
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48250 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48244 A) (B-REF48246 B)
                                            (C-REF48249 C))
      (%%CSYR2K UPLO TRANS N-REF48241 K-REF48242 ALPHA-REF48243 A-REF48244
       LDA-REF48245 B-REF48246 LDB-REF48247 BETA-REF48248 C-REF48249
       LDC-REF48250))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYR2K))

(COMMON-LISP:EXPORT '%CSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CSYRK))

(CFFI:DEFCFUN ("csyrk_" %%CSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CSYRK))

(COMMON-LISP:PUSHNEW '("CSYRK" "csyrk_" %%CSYRK %CSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CSYRK))

(COMMON-LISP:DEFUN %CSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48253 ':INT32) (K-REF48254 ':INT32)
                              (ALPHA-REF48255
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48257 ':INT32)
                              (BETA-REF48258
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDC-REF48260 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48253 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48254 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48255
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48257 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48258
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48260 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48256 A) (C-REF48259 C))
      (%%CSYRK UPLO TRANS N-REF48253 K-REF48254 ALPHA-REF48255 A-REF48256
       LDA-REF48257 BETA-REF48258 C-REF48259 LDC-REF48260))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CSYRK))

(COMMON-LISP:EXPORT '%CSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTBMV))

(CFFI:DEFCFUN ("ctbmv_" %%CTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTBMV))

(COMMON-LISP:PUSHNEW '("CTBMV" "ctbmv_" %%CTBMV %CTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTBMV))

(COMMON-LISP:DEFUN %CTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48264 ':INT32) (K-REF48265 ':INT32)
                              (LDA-REF48267 ':INT32) (INCX-REF48269 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48264 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48265 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48267 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48269 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48266 A) (X-REF48268 X))
      (%%CTBMV UPLO TRANS DIAG N-REF48264 K-REF48265 A-REF48266 LDA-REF48267
       X-REF48268 INCX-REF48269))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTBMV))

(COMMON-LISP:EXPORT '%CTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTBSV))

(CFFI:DEFCFUN ("ctbsv_" %%CTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTBSV))

(COMMON-LISP:PUSHNEW '("CTBSV" "ctbsv_" %%CTBSV %CTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTBSV))

(COMMON-LISP:DEFUN %CTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48273 ':INT32) (K-REF48274 ':INT32)
                              (LDA-REF48276 ':INT32) (INCX-REF48278 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48273 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48274 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48276 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48278 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48275 A) (X-REF48277 X))
      (%%CTBSV UPLO TRANS DIAG N-REF48273 K-REF48274 A-REF48275 LDA-REF48276
       X-REF48277 INCX-REF48278))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTBSV))

(COMMON-LISP:EXPORT '%CTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTPMV))

(CFFI:DEFCFUN ("ctpmv_" %%CTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTPMV))

(COMMON-LISP:PUSHNEW '("CTPMV" "ctpmv_" %%CTPMV %CTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTPMV))

(COMMON-LISP:DEFUN %CTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48282 ':INT32) (INCX-REF48285 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48282 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48285 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48283 AP) (X-REF48284 X))
      (%%CTPMV UPLO TRANS DIAG N-REF48282 AP-REF48283 X-REF48284
       INCX-REF48285))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTPMV))

(COMMON-LISP:EXPORT '%CTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTPSV))

(CFFI:DEFCFUN ("ctpsv_" %%CTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTPSV))

(COMMON-LISP:PUSHNEW '("CTPSV" "ctpsv_" %%CTPSV %CTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTPSV))

(COMMON-LISP:DEFUN %CTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48289 ':INT32) (INCX-REF48292 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48289 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48292 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48290 AP) (X-REF48291 X))
      (%%CTPSV UPLO TRANS DIAG N-REF48289 AP-REF48290 X-REF48291
       INCX-REF48292))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTPSV))

(COMMON-LISP:EXPORT '%CTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRMM))

(CFFI:DEFCFUN ("ctrmm_" %%CTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRMM))

(COMMON-LISP:PUSHNEW '("CTRMM" "ctrmm_" %%CTRMM %CTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRMM))

(COMMON-LISP:DEFUN %CTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48297 ':INT32) (N-REF48298 ':INT32)
                              (ALPHA-REF48299
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48301 ':INT32) (LDB-REF48303 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48297 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48298 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48299
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48301 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48303 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48300 A) (B-REF48302 B))
      (%%CTRMM SIDE UPLO TRANSA DIAG M-REF48297 N-REF48298 ALPHA-REF48299
       A-REF48300 LDA-REF48301 B-REF48302 LDB-REF48303))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRMM))

(COMMON-LISP:EXPORT '%CTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRMV))

(CFFI:DEFCFUN ("ctrmv_" %%CTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRMV))

(COMMON-LISP:PUSHNEW '("CTRMV" "ctrmv_" %%CTRMV %CTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRMV))

(COMMON-LISP:DEFUN %CTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48307 ':INT32) (LDA-REF48309 ':INT32)
                              (INCX-REF48311 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48307 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48309 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48311 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48308 A) (X-REF48310 X))
      (%%CTRMV UPLO TRANS DIAG N-REF48307 A-REF48308 LDA-REF48309 X-REF48310
       INCX-REF48311))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRMV))

(COMMON-LISP:EXPORT '%CTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRSM))

(CFFI:DEFCFUN ("ctrsm_" %%CTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRSM))

(COMMON-LISP:PUSHNEW '("CTRSM" "ctrsm_" %%CTRSM %CTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRSM))

(COMMON-LISP:DEFUN %CTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48316 ':INT32) (N-REF48317 ':INT32)
                              (ALPHA-REF48318
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
                              (LDA-REF48320 ':INT32) (LDB-REF48322 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48316 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48317 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48318
                              MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48320 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48322 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48319 A) (B-REF48321 B))
      (%%CTRSM SIDE UPLO TRANSA DIAG M-REF48316 N-REF48317 ALPHA-REF48318
       A-REF48319 LDA-REF48320 B-REF48321 LDB-REF48322))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRSM))

(COMMON-LISP:EXPORT '%CTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%CTRSV))

(CFFI:DEFCFUN ("ctrsv_" %%CTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%CTRSV))

(COMMON-LISP:PUSHNEW '("CTRSV" "ctrsv_" %%CTRSV %CTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %CTRSV))

(COMMON-LISP:DEFUN %CTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%CTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48326 ':INT32) (LDA-REF48328 ':INT32)
                              (INCX-REF48330 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48326 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48328 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48330 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48327 A) (X-REF48329 X))
      (%%CTRSV UPLO TRANS DIAG N-REF48326 A-REF48327 LDA-REF48328 X-REF48329
       INCX-REF48330))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %CTRSV))

(COMMON-LISP:EXPORT '%CTRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DASUM))

(CFFI:DEFCFUN ("dasum_" %%DASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DASUM))

(COMMON-LISP:PUSHNEW '("DASUM" "dasum_" %%DASUM %DASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DASUM))

(COMMON-LISP:DEFUN %DASUM (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48331 ':INT32) (INCX-REF48333 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48331 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48333 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48332 DX))
      (%%DASUM N-REF48331 DX-REF48332 INCX-REF48333))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DASUM))

(COMMON-LISP:EXPORT '%DASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DAXPY))

(CFFI:DEFCFUN ("daxpy_" %%DAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DAXPY))

(COMMON-LISP:PUSHNEW '("DAXPY" "daxpy_" %%DAXPY %DAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DAXPY))

(COMMON-LISP:DEFUN %DAXPY (N DA DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48334 ':INT32) (DA-REF48335 ':DOUBLE)
                              (INCX-REF48337 ':INT32) (INCY-REF48339 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48334 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48335 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48337 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48339 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48336 DX) (DY-REF48338 DY))
      (%%DAXPY N-REF48334 DA-REF48335 DX-REF48336 INCX-REF48337 DY-REF48338
       INCY-REF48339))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DAXPY))

(COMMON-LISP:EXPORT '%DAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DCABS1))

(CFFI:DEFCFUN ("dcabs1_" %%DCABS1 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (Z :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DCABS1))

(COMMON-LISP:PUSHNEW '("DCABS1" "dcabs1_" %%DCABS1 %DCABS1)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DCABS1))

(COMMON-LISP:DEFUN %DCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCABS1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF48340
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              Z-REF48340 MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART Z)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DCABS1 Z-REF48340))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DCABS1))

(COMMON-LISP:EXPORT '%DCABS1 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DCOPY))

(CFFI:DEFCFUN ("dcopy_" %%DCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DCOPY))

(COMMON-LISP:PUSHNEW '("DCOPY" "dcopy_" %%DCOPY %DCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DCOPY))

(COMMON-LISP:DEFUN %DCOPY (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48341 ':INT32) (INCX-REF48343 ':INT32)
                              (INCY-REF48345 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48341 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48343 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48345 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48342 DX) (DY-REF48344 DY))
      (%%DCOPY N-REF48341 DX-REF48342 INCX-REF48343 DY-REF48344
       INCY-REF48345))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DCOPY))

(COMMON-LISP:EXPORT '%DCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DDOT))

(CFFI:DEFCFUN ("ddot_" %%DDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DDOT))

(COMMON-LISP:PUSHNEW '("DDOT" "ddot_" %%DDOT %DDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DDOT))

(COMMON-LISP:DEFUN %DDOT (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48346 ':INT32) (INCX-REF48348 ':INT32)
                              (INCY-REF48350 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48346 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48348 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48350 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48347 DX) (DY-REF48349 DY))
      (%%DDOT N-REF48346 DX-REF48347 INCX-REF48348 DY-REF48349 INCY-REF48350))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DDOT))

(COMMON-LISP:EXPORT '%DDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGBMV))

(CFFI:DEFCFUN ("dgbmv_" %%DGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGBMV))

(COMMON-LISP:PUSHNEW '("DGBMV" "dgbmv_" %%DGBMV %DGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGBMV))

(COMMON-LISP:DEFUN %DGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48352 ':INT32) (N-REF48353 ':INT32)
                              (KL-REF48354 ':INT32) (KU-REF48355 ':INT32)
                              (ALPHA-REF48356 ':DOUBLE) (LDA-REF48358 ':INT32)
                              (INCX-REF48360 ':INT32) (BETA-REF48361 ':DOUBLE)
                              (INCY-REF48363 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48352 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48353 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48354 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48355 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48356 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48358 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48360 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48361 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48363 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48357 A) (X-REF48359 X)
                                            (Y-REF48362 Y))
      (%%DGBMV TRANS M-REF48352 N-REF48353 KL-REF48354 KU-REF48355
       ALPHA-REF48356 A-REF48357 LDA-REF48358 X-REF48359 INCX-REF48360
       BETA-REF48361 Y-REF48362 INCY-REF48363))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGBMV))

(COMMON-LISP:EXPORT '%DGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGEMM))

(CFFI:DEFCFUN ("dgemm_" %%DGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGEMM))

(COMMON-LISP:PUSHNEW '("DGEMM" "dgemm_" %%DGEMM %DGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGEMM))

(COMMON-LISP:DEFUN %DGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48366 ':INT32) (N-REF48367 ':INT32)
                              (K-REF48368 ':INT32) (ALPHA-REF48369 ':DOUBLE)
                              (LDA-REF48371 ':INT32) (LDB-REF48373 ':INT32)
                              (BETA-REF48374 ':DOUBLE) (LDC-REF48376 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48366 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48367 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48368 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48369 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48371 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48373 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48374 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48376 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48370 A) (B-REF48372 B)
                                            (C-REF48375 C))
      (%%DGEMM TRANSA TRANSB M-REF48366 N-REF48367 K-REF48368 ALPHA-REF48369
       A-REF48370 LDA-REF48371 B-REF48372 LDB-REF48373 BETA-REF48374 C-REF48375
       LDC-REF48376))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGEMM))

(COMMON-LISP:EXPORT '%DGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGEMV))

(CFFI:DEFCFUN ("dgemv_" %%DGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGEMV))

(COMMON-LISP:PUSHNEW '("DGEMV" "dgemv_" %%DGEMV %DGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGEMV))

(COMMON-LISP:DEFUN %DGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48378 ':INT32) (N-REF48379 ':INT32)
                              (ALPHA-REF48380 ':DOUBLE) (LDA-REF48382 ':INT32)
                              (INCX-REF48384 ':INT32) (BETA-REF48385 ':DOUBLE)
                              (INCY-REF48387 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48378 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48379 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48380 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48382 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48384 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48385 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48387 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48381 A) (X-REF48383 X)
                                            (Y-REF48386 Y))
      (%%DGEMV TRANS M-REF48378 N-REF48379 ALPHA-REF48380 A-REF48381
       LDA-REF48382 X-REF48383 INCX-REF48384 BETA-REF48385 Y-REF48386
       INCY-REF48387))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGEMV))

(COMMON-LISP:EXPORT '%DGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DGER))

(CFFI:DEFCFUN ("dger_" %%DGER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DGER))

(COMMON-LISP:PUSHNEW '("DGER" "dger_" %%DGER %DGER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DGER))

(COMMON-LISP:DEFUN %DGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DGER)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48388 ':INT32) (N-REF48389 ':INT32)
                              (ALPHA-REF48390 ':DOUBLE) (INCX-REF48392 ':INT32)
                              (INCY-REF48394 ':INT32) (LDA-REF48396 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48388 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48389 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48390 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48392 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48394 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48396 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48391 X) (Y-REF48393 Y)
                                            (A-REF48395 A))
      (%%DGER M-REF48388 N-REF48389 ALPHA-REF48390 X-REF48391 INCX-REF48392
       Y-REF48393 INCY-REF48394 A-REF48395 LDA-REF48396))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DGER))

(COMMON-LISP:EXPORT '%DGER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DNRM2))

(CFFI:DEFCFUN ("dnrm2_" %%DNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DNRM2))

(COMMON-LISP:PUSHNEW '("DNRM2" "dnrm2_" %%DNRM2 %DNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DNRM2))

(COMMON-LISP:DEFUN %DNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48397 ':INT32) (INCX-REF48399 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48397 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48399 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48398 X))
      (%%DNRM2 N-REF48397 X-REF48398 INCX-REF48399))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DNRM2))

(COMMON-LISP:EXPORT '%DNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROT))

(CFFI:DEFCFUN ("drot_" %%DROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROT))

(COMMON-LISP:PUSHNEW '("DROT" "drot_" %%DROT %DROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROT))

(COMMON-LISP:DEFUN %DROT (N DX INCX DY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48400 ':INT32) (INCX-REF48402 ':INT32)
                              (INCY-REF48404 ':INT32) (C-REF48405 ':DOUBLE)
                              (S-REF48406 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48400 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48402 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48404 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48405 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48406 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48401 DX) (DY-REF48403 DY))
      (%%DROT N-REF48400 DX-REF48401 INCX-REF48402 DY-REF48403 INCY-REF48404
       C-REF48405 S-REF48406))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROT))

(COMMON-LISP:EXPORT '%DROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTG))

(CFFI:DEFCFUN ("drotg_" %%DROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (DA :POINTER)
  (DB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTG))

(COMMON-LISP:PUSHNEW '("DROTG" "drotg_" %%DROTG %DROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTG))

(COMMON-LISP:DEFUN %DROTG (DA DB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTG)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((DA-REF48407 ':DOUBLE) (DB-REF48408 ':DOUBLE)
                              (C-REF48409 ':DOUBLE) (S-REF48410 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48407 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF DB-REF48408 :DOUBLE) DB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48409 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48410 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%DROTG DA-REF48407 DB-REF48408 C-REF48409 S-REF48410))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTG))

(COMMON-LISP:EXPORT '%DROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTM))

(CFFI:DEFCFUN ("drotm_" %%DROTM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER)
  (DPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTM))

(COMMON-LISP:PUSHNEW '("DROTM" "drotm_" %%DROTM %DROTM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTM))

(COMMON-LISP:DEFUN %DROTM (N DX INCX DY INCY DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT)
                        DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48411 ':INT32) (INCX-REF48413 ':INT32)
                              (INCY-REF48415 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48411 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48413 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48415 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48412 DX) (DY-REF48414 DY)
                                            (DPARAM-REF48416 DPARAM))
      (%%DROTM N-REF48411 DX-REF48412 INCX-REF48413 DY-REF48414 INCY-REF48415
       DPARAM-REF48416))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTM))

(COMMON-LISP:EXPORT '%DROTM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DROTMG))

(CFFI:DEFCFUN ("drotmg_" %%DROTMG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (DD1 :POINTER)
  (DD2 :POINTER)
  (DX1 :POINTER)
  (DY1 :POINTER)
  (DPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DROTMG))

(COMMON-LISP:PUSHNEW '("DROTMG" "drotmg_" %%DROTMG %DROTMG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DROTMG))

(COMMON-LISP:DEFUN %DROTMG (DD1 DD2 DX1 DY1 DPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DROTMG)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD1)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DD2)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DX1)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DY1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT)
                        DPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((DD1-REF48417 ':DOUBLE) (DD2-REF48418 ':DOUBLE)
                              (DX1-REF48419 ':DOUBLE) (DY1-REF48420 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF DD1-REF48417 :DOUBLE) DD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DD2-REF48418 :DOUBLE) DD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF DX1-REF48419 :DOUBLE) DX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF DY1-REF48420 :DOUBLE) DY1)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DPARAM-REF48421 DPARAM))
      (%%DROTMG DD1-REF48417 DD2-REF48418 DX1-REF48419 DY1-REF48420
       DPARAM-REF48421))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DROTMG))

(COMMON-LISP:EXPORT '%DROTMG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSBMV))

(CFFI:DEFCFUN ("dsbmv_" %%DSBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSBMV))

(COMMON-LISP:PUSHNEW '("DSBMV" "dsbmv_" %%DSBMV %DSBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSBMV))

(COMMON-LISP:DEFUN %DSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48423 ':INT32) (K-REF48424 ':INT32)
                              (ALPHA-REF48425 ':DOUBLE) (LDA-REF48427 ':INT32)
                              (INCX-REF48429 ':INT32) (BETA-REF48430 ':DOUBLE)
                              (INCY-REF48432 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48423 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48424 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48425 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48427 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48429 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48430 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48432 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48426 A) (X-REF48428 X)
                                            (Y-REF48431 Y))
      (%%DSBMV UPLO N-REF48423 K-REF48424 ALPHA-REF48425 A-REF48426
       LDA-REF48427 X-REF48428 INCX-REF48429 BETA-REF48430 Y-REF48431
       INCY-REF48432))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSBMV))

(COMMON-LISP:EXPORT '%DSBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSCAL))

(CFFI:DEFCFUN ("dscal_" %%DSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSCAL))

(COMMON-LISP:PUSHNEW '("DSCAL" "dscal_" %%DSCAL %DSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSCAL))

(COMMON-LISP:DEFUN %DSCAL (N DA DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48433 ':INT32) (DA-REF48434 ':DOUBLE)
                              (INCX-REF48436 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48433 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48434 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48436 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48435 DX))
      (%%DSCAL N-REF48433 DA-REF48434 DX-REF48435 INCX-REF48436))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSCAL))

(COMMON-LISP:EXPORT '%DSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSDOT))

(CFFI:DEFCFUN ("dsdot_" %%DSDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSDOT))

(COMMON-LISP:PUSHNEW '("DSDOT" "dsdot_" %%DSDOT %DSDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSDOT))

(COMMON-LISP:DEFUN %DSDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48437 ':INT32) (INCX-REF48439 ':INT32)
                              (INCY-REF48441 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48437 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48439 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48441 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48438 SX) (SY-REF48440 SY))
      (%%DSDOT N-REF48437 SX-REF48438 INCX-REF48439 SY-REF48440
       INCY-REF48441))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSDOT))

(COMMON-LISP:EXPORT '%DSDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPMV))

(CFFI:DEFCFUN ("dspmv_" %%DSPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPMV))

(COMMON-LISP:PUSHNEW '("DSPMV" "dspmv_" %%DSPMV %DSPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPMV))

(COMMON-LISP:DEFUN %DSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48443 ':INT32) (ALPHA-REF48444 ':DOUBLE)
                              (INCX-REF48447 ':INT32) (BETA-REF48448 ':DOUBLE)
                              (INCY-REF48450 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48443 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48444 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48447 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48448 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48450 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48445 AP) (X-REF48446 X)
                                            (Y-REF48449 Y))
      (%%DSPMV UPLO N-REF48443 ALPHA-REF48444 AP-REF48445 X-REF48446
       INCX-REF48447 BETA-REF48448 Y-REF48449 INCY-REF48450))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPMV))

(COMMON-LISP:EXPORT '%DSPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPR))

(CFFI:DEFCFUN ("dspr_" %%DSPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPR))

(COMMON-LISP:PUSHNEW '("DSPR" "dspr_" %%DSPR %DSPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPR))

(COMMON-LISP:DEFUN %DSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT)
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48452 ':INT32) (ALPHA-REF48453 ':DOUBLE)
                              (INCX-REF48455 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48452 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48453 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48455 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48454 X) (AP-REF48456 AP))
      (%%DSPR UPLO N-REF48452 ALPHA-REF48453 X-REF48454 INCX-REF48455
       AP-REF48456))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPR))

(COMMON-LISP:EXPORT '%DSPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSPR2))

(CFFI:DEFCFUN ("dspr2_" %%DSPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSPR2))

(COMMON-LISP:PUSHNEW '("DSPR2" "dspr2_" %%DSPR2 %DSPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSPR2))

(COMMON-LISP:DEFUN %DSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT)
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48458 ':INT32) (ALPHA-REF48459 ':DOUBLE)
                              (INCX-REF48461 ':INT32) (INCY-REF48463 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48458 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48459 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48461 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48463 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48460 X) (Y-REF48462 Y)
                                            (AP-REF48464 AP))
      (%%DSPR2 UPLO N-REF48458 ALPHA-REF48459 X-REF48460 INCX-REF48461
       Y-REF48462 INCY-REF48463 AP-REF48464))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSPR2))

(COMMON-LISP:EXPORT '%DSPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSWAP))

(CFFI:DEFCFUN ("dswap_" %%DSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER)
  (DY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSWAP))

(COMMON-LISP:PUSHNEW '("DSWAP" "dswap_" %%DSWAP %DSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSWAP))

(COMMON-LISP:DEFUN %DSWAP (N DX INCX DY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48465 ':INT32) (INCX-REF48467 ':INT32)
                              (INCY-REF48469 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48465 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48467 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48469 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48466 DX) (DY-REF48468 DY))
      (%%DSWAP N-REF48465 DX-REF48466 INCX-REF48467 DY-REF48468
       INCY-REF48469))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSWAP))

(COMMON-LISP:EXPORT '%DSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYMM))

(CFFI:DEFCFUN ("dsymm_" %%DSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYMM))

(COMMON-LISP:PUSHNEW '("DSYMM" "dsymm_" %%DSYMM %DSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYMM))

(COMMON-LISP:DEFUN %DSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48472 ':INT32) (N-REF48473 ':INT32)
                              (ALPHA-REF48474 ':DOUBLE) (LDA-REF48476 ':INT32)
                              (LDB-REF48478 ':INT32) (BETA-REF48479 ':DOUBLE)
                              (LDC-REF48481 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48472 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48473 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48474 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48476 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48478 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48479 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48481 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48475 A) (B-REF48477 B)
                                            (C-REF48480 C))
      (%%DSYMM SIDE UPLO M-REF48472 N-REF48473 ALPHA-REF48474 A-REF48475
       LDA-REF48476 B-REF48477 LDB-REF48478 BETA-REF48479 C-REF48480
       LDC-REF48481))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYMM))

(COMMON-LISP:EXPORT '%DSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYMV))

(CFFI:DEFCFUN ("dsymv_" %%DSYMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYMV))

(COMMON-LISP:PUSHNEW '("DSYMV" "dsymv_" %%DSYMV %DSYMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYMV))

(COMMON-LISP:DEFUN %DSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48483 ':INT32) (ALPHA-REF48484 ':DOUBLE)
                              (LDA-REF48486 ':INT32) (INCX-REF48488 ':INT32)
                              (BETA-REF48489 ':DOUBLE) (INCY-REF48491 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48483 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48484 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48486 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48488 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48489 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48491 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48485 A) (X-REF48487 X)
                                            (Y-REF48490 Y))
      (%%DSYMV UPLO N-REF48483 ALPHA-REF48484 A-REF48485 LDA-REF48486
       X-REF48487 INCX-REF48488 BETA-REF48489 Y-REF48490 INCY-REF48491))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYMV))

(COMMON-LISP:EXPORT '%DSYMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR))

(CFFI:DEFCFUN ("dsyr_" %%DSYR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR))

(COMMON-LISP:PUSHNEW '("DSYR" "dsyr_" %%DSYR %DSYR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR))

(COMMON-LISP:DEFUN %DSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48493 ':INT32) (ALPHA-REF48494 ':DOUBLE)
                              (INCX-REF48496 ':INT32) (LDA-REF48498 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48493 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48494 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48496 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48498 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48495 X) (A-REF48497 A))
      (%%DSYR UPLO N-REF48493 ALPHA-REF48494 X-REF48495 INCX-REF48496
       A-REF48497 LDA-REF48498))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR))

(COMMON-LISP:EXPORT '%DSYR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR2))

(CFFI:DEFCFUN ("dsyr2_" %%DSYR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR2))

(COMMON-LISP:PUSHNEW '("DSYR2" "dsyr2_" %%DSYR2 %DSYR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR2))

(COMMON-LISP:DEFUN %DSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48500 ':INT32) (ALPHA-REF48501 ':DOUBLE)
                              (INCX-REF48503 ':INT32) (INCY-REF48505 ':INT32)
                              (LDA-REF48507 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48500 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48501 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48503 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48505 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48507 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48502 X) (Y-REF48504 Y)
                                            (A-REF48506 A))
      (%%DSYR2 UPLO N-REF48500 ALPHA-REF48501 X-REF48502 INCX-REF48503
       Y-REF48504 INCY-REF48505 A-REF48506 LDA-REF48507))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR2))

(COMMON-LISP:EXPORT '%DSYR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYR2K))

(CFFI:DEFCFUN ("dsyr2k_" %%DSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYR2K))

(COMMON-LISP:PUSHNEW '("DSYR2K" "dsyr2k_" %%DSYR2K %DSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYR2K))

(COMMON-LISP:DEFUN %DSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48510 ':INT32) (K-REF48511 ':INT32)
                              (ALPHA-REF48512 ':DOUBLE) (LDA-REF48514 ':INT32)
                              (LDB-REF48516 ':INT32) (BETA-REF48517 ':DOUBLE)
                              (LDC-REF48519 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48510 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48511 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48512 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48514 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48516 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48517 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48519 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48513 A) (B-REF48515 B)
                                            (C-REF48518 C))
      (%%DSYR2K UPLO TRANS N-REF48510 K-REF48511 ALPHA-REF48512 A-REF48513
       LDA-REF48514 B-REF48515 LDB-REF48516 BETA-REF48517 C-REF48518
       LDC-REF48519))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYR2K))

(COMMON-LISP:EXPORT '%DSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DSYRK))

(CFFI:DEFCFUN ("dsyrk_" %%DSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DSYRK))

(COMMON-LISP:PUSHNEW '("DSYRK" "dsyrk_" %%DSYRK %DSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DSYRK))

(COMMON-LISP:DEFUN %DSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48522 ':INT32) (K-REF48523 ':INT32)
                              (ALPHA-REF48524 ':DOUBLE) (LDA-REF48526 ':INT32)
                              (BETA-REF48527 ':DOUBLE) (LDC-REF48529 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48522 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48523 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48524 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48526 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48527 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48529 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48525 A) (C-REF48528 C))
      (%%DSYRK UPLO TRANS N-REF48522 K-REF48523 ALPHA-REF48524 A-REF48525
       LDA-REF48526 BETA-REF48527 C-REF48528 LDC-REF48529))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DSYRK))

(COMMON-LISP:EXPORT '%DSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTBMV))

(CFFI:DEFCFUN ("dtbmv_" %%DTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTBMV))

(COMMON-LISP:PUSHNEW '("DTBMV" "dtbmv_" %%DTBMV %DTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTBMV))

(COMMON-LISP:DEFUN %DTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48533 ':INT32) (K-REF48534 ':INT32)
                              (LDA-REF48536 ':INT32) (INCX-REF48538 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48533 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48534 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48536 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48538 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48535 A) (X-REF48537 X))
      (%%DTBMV UPLO TRANS DIAG N-REF48533 K-REF48534 A-REF48535 LDA-REF48536
       X-REF48537 INCX-REF48538))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTBMV))

(COMMON-LISP:EXPORT '%DTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTBSV))

(CFFI:DEFCFUN ("dtbsv_" %%DTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTBSV))

(COMMON-LISP:PUSHNEW '("DTBSV" "dtbsv_" %%DTBSV %DTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTBSV))

(COMMON-LISP:DEFUN %DTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48542 ':INT32) (K-REF48543 ':INT32)
                              (LDA-REF48545 ':INT32) (INCX-REF48547 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48542 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48543 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48545 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48547 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48544 A) (X-REF48546 X))
      (%%DTBSV UPLO TRANS DIAG N-REF48542 K-REF48543 A-REF48544 LDA-REF48545
       X-REF48546 INCX-REF48547))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTBSV))

(COMMON-LISP:EXPORT '%DTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTPMV))

(CFFI:DEFCFUN ("dtpmv_" %%DTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTPMV))

(COMMON-LISP:PUSHNEW '("DTPMV" "dtpmv_" %%DTPMV %DTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTPMV))

(COMMON-LISP:DEFUN %DTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48551 ':INT32) (INCX-REF48554 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48551 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48554 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48552 AP) (X-REF48553 X))
      (%%DTPMV UPLO TRANS DIAG N-REF48551 AP-REF48552 X-REF48553
       INCX-REF48554))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTPMV))

(COMMON-LISP:EXPORT '%DTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTPSV))

(CFFI:DEFCFUN ("dtpsv_" %%DTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTPSV))

(COMMON-LISP:PUSHNEW '("DTPSV" "dtpsv_" %%DTPSV %DTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTPSV))

(COMMON-LISP:DEFUN %DTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48558 ':INT32) (INCX-REF48561 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48558 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48561 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48559 AP) (X-REF48560 X))
      (%%DTPSV UPLO TRANS DIAG N-REF48558 AP-REF48559 X-REF48560
       INCX-REF48561))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTPSV))

(COMMON-LISP:EXPORT '%DTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRMM))

(CFFI:DEFCFUN ("dtrmm_" %%DTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRMM))

(COMMON-LISP:PUSHNEW '("DTRMM" "dtrmm_" %%DTRMM %DTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRMM))

(COMMON-LISP:DEFUN %DTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48566 ':INT32) (N-REF48567 ':INT32)
                              (ALPHA-REF48568 ':DOUBLE) (LDA-REF48570 ':INT32)
                              (LDB-REF48572 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48566 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48567 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48568 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48570 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48572 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48569 A) (B-REF48571 B))
      (%%DTRMM SIDE UPLO TRANSA DIAG M-REF48566 N-REF48567 ALPHA-REF48568
       A-REF48569 LDA-REF48570 B-REF48571 LDB-REF48572))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRMM))

(COMMON-LISP:EXPORT '%DTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRMV))

(CFFI:DEFCFUN ("dtrmv_" %%DTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRMV))

(COMMON-LISP:PUSHNEW '("DTRMV" "dtrmv_" %%DTRMV %DTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRMV))

(COMMON-LISP:DEFUN %DTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48576 ':INT32) (LDA-REF48578 ':INT32)
                              (INCX-REF48580 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48576 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48578 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48580 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48577 A) (X-REF48579 X))
      (%%DTRMV UPLO TRANS DIAG N-REF48576 A-REF48577 LDA-REF48578 X-REF48579
       INCX-REF48580))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRMV))

(COMMON-LISP:EXPORT '%DTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRSM))

(CFFI:DEFCFUN ("dtrsm_" %%DTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRSM))

(COMMON-LISP:PUSHNEW '("DTRSM" "dtrsm_" %%DTRSM %DTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRSM))

(COMMON-LISP:DEFUN %DTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48585 ':INT32) (N-REF48586 ':INT32)
                              (ALPHA-REF48587 ':DOUBLE) (LDA-REF48589 ':INT32)
                              (LDB-REF48591 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48585 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48586 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48587 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48589 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48591 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48588 A) (B-REF48590 B))
      (%%DTRSM SIDE UPLO TRANSA DIAG M-REF48585 N-REF48586 ALPHA-REF48587
       A-REF48588 LDA-REF48589 B-REF48590 LDB-REF48591))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRSM))

(COMMON-LISP:EXPORT '%DTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DTRSV))

(CFFI:DEFCFUN ("dtrsv_" %%DTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DTRSV))

(COMMON-LISP:PUSHNEW '("DTRSV" "dtrsv_" %%DTRSV %DTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DTRSV))

(COMMON-LISP:DEFUN %DTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48595 ':INT32) (LDA-REF48597 ':INT32)
                              (INCX-REF48599 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48595 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48597 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48599 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48596 A) (X-REF48598 X))
      (%%DTRSV UPLO TRANS DIAG N-REF48595 A-REF48596 LDA-REF48597 X-REF48598
       INCX-REF48599))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DTRSV))

(COMMON-LISP:EXPORT '%DTRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DZASUM))

(CFFI:DEFCFUN ("dzasum_" %%DZASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DZASUM))

(COMMON-LISP:PUSHNEW '("DZASUM" "dzasum_" %%DZASUM %DZASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DZASUM))

(COMMON-LISP:DEFUN %DZASUM (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48600 ':INT32) (INCX-REF48602 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48600 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48602 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48601 ZX))
      (%%DZASUM N-REF48600 ZX-REF48601 INCX-REF48602))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DZASUM))

(COMMON-LISP:EXPORT '%DZASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%DZNRM2))

(CFFI:DEFCFUN ("dznrm2_" %%DZNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :DOUBLE
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%DZNRM2))

(COMMON-LISP:PUSHNEW '("DZNRM2" "dznrm2_" %%DZNRM2 %DZNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %DZNRM2))

(COMMON-LISP:DEFUN %DZNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%DZNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48603 ':INT32) (INCX-REF48605 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48603 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48605 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48604 X))
      (%%DZNRM2 N-REF48603 X-REF48604 INCX-REF48605))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %DZNRM2))

(COMMON-LISP:EXPORT '%DZNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ICAMAX))

(CFFI:DEFCFUN ("icamax_" %%ICAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ICAMAX))

(COMMON-LISP:PUSHNEW '("ICAMAX" "icamax_" %%ICAMAX %ICAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ICAMAX))

(COMMON-LISP:DEFUN %ICAMAX (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ICAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48606 ':INT32) (INCX-REF48608 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48606 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48608 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48607 CX))
      (%%ICAMAX N-REF48606 CX-REF48607 INCX-REF48608))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ICAMAX))

(COMMON-LISP:EXPORT '%ICAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%IDAMAX))

(CFFI:DEFCFUN ("idamax_" %%IDAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (DX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%IDAMAX))

(COMMON-LISP:PUSHNEW '("IDAMAX" "idamax_" %%IDAMAX %IDAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %IDAMAX))

(COMMON-LISP:DEFUN %IDAMAX (N DX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IDAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:DOUBLE-FLOAT) DX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48609 ':INT32) (INCX-REF48611 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48609 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48611 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((DX-REF48610 DX))
      (%%IDAMAX N-REF48609 DX-REF48610 INCX-REF48611))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %IDAMAX))

(COMMON-LISP:EXPORT '%IDAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ISAMAX))

(CFFI:DEFCFUN ("isamax_" %%ISAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ISAMAX))

(COMMON-LISP:PUSHNEW '("ISAMAX" "isamax_" %%ISAMAX %ISAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ISAMAX))

(COMMON-LISP:DEFUN %ISAMAX (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ISAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48612 ':INT32) (INCX-REF48614 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48612 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48614 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48613 SX))
      (%%ISAMAX N-REF48612 SX-REF48613 INCX-REF48614))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ISAMAX))

(COMMON-LISP:EXPORT '%ISAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%IZAMAX))

(CFFI:DEFCFUN ("izamax_" %%IZAMAX :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%IZAMAX))

(COMMON-LISP:PUSHNEW '("IZAMAX" "izamax_" %%IZAMAX %IZAMAX)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %IZAMAX))

(COMMON-LISP:DEFUN %IZAMAX (N ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%IZAMAX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48615 ':INT32) (INCX-REF48617 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48615 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48617 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48616 ZX))
      (%%IZAMAX N-REF48615 ZX-REF48616 INCX-REF48617))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %IZAMAX))

(COMMON-LISP:EXPORT '%IZAMAX '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%LSAME))

(CFFI:DEFCFUN ("lsame_" %%LSAME :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :INT32
  (CA :STRING)
  (CB :STRING))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%LSAME))

(COMMON-LISP:PUSHNEW '("LSAME" "lsame_" %%LSAME %LSAME)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %LSAME))

(COMMON-LISP:DEFUN %LSAME (CA CB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%LSAME)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING CA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING CB))
  (CFFI:WITH-FOREIGN-OBJECTS COMMON-LISP:NIL
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%LSAME CA CB))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %LSAME))

(COMMON-LISP:EXPORT '%LSAME '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SASUM))

(CFFI:DEFCFUN ("sasum_" %%SASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SASUM))

(COMMON-LISP:PUSHNEW '("SASUM" "sasum_" %%SASUM %SASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SASUM))

(COMMON-LISP:DEFUN %SASUM (N SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48620 ':INT32) (INCX-REF48622 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48620 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48622 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48621 SX))
      (%%SASUM N-REF48620 SX-REF48621 INCX-REF48622))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SASUM))

(COMMON-LISP:EXPORT '%SASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SAXPY))

(CFFI:DEFCFUN ("saxpy_" %%SAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SAXPY))

(COMMON-LISP:PUSHNEW '("SAXPY" "saxpy_" %%SAXPY %SAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SAXPY))

(COMMON-LISP:DEFUN %SAXPY (N SA SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48623 ':INT32) (SA-REF48624 ':FLOAT)
                              (INCX-REF48626 ':INT32) (INCY-REF48628 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48623 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48624 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48626 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48628 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48625 SX) (SY-REF48627 SY))
      (%%SAXPY N-REF48623 SA-REF48624 SX-REF48625 INCX-REF48626 SY-REF48627
       INCY-REF48628))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SAXPY))

(COMMON-LISP:EXPORT '%SAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCABS1))

(CFFI:DEFCFUN ("scabs1_" %%SCABS1 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (Z :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCABS1))

(COMMON-LISP:PUSHNEW '("SCABS1" "scabs1_" %%SCABS1 %SCABS1)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCABS1))

(COMMON-LISP:DEFUN %SCABS1 (Z)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCABS1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT) Z))
  (CFFI:WITH-FOREIGN-OBJECTS ((Z-REF48629
                               'MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              Z-REF48629 MAGICL.CFFI-TYPES:COMPLEX-SINGLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART Z)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART Z)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%SCABS1 Z-REF48629))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCABS1))

(COMMON-LISP:EXPORT '%SCABS1 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCASUM))

(CFFI:DEFCFUN ("scasum_" %%SCASUM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCASUM))

(COMMON-LISP:PUSHNEW '("SCASUM" "scasum_" %%SCASUM %SCASUM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCASUM))

(COMMON-LISP:DEFUN %SCASUM (N CX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCASUM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48630 ':INT32) (INCX-REF48632 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48630 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48632 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48631 CX))
      (%%SCASUM N-REF48630 CX-REF48631 INCX-REF48632))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCASUM))

(COMMON-LISP:EXPORT '%SCASUM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCNRM2))

(CFFI:DEFCFUN ("scnrm2_" %%SCNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCNRM2))

(COMMON-LISP:PUSHNEW '("SCNRM2" "scnrm2_" %%SCNRM2 %SCNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCNRM2))

(COMMON-LISP:DEFUN %SCNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:SINGLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48633 ':INT32) (INCX-REF48635 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48633 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48635 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48634 X))
      (%%SCNRM2 N-REF48633 X-REF48634 INCX-REF48635))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCNRM2))

(COMMON-LISP:EXPORT '%SCNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SCOPY))

(CFFI:DEFCFUN ("scopy_" %%SCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SCOPY))

(COMMON-LISP:PUSHNEW '("SCOPY" "scopy_" %%SCOPY %SCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SCOPY))

(COMMON-LISP:DEFUN %SCOPY (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48636 ':INT32) (INCX-REF48638 ':INT32)
                              (INCY-REF48640 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48636 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48638 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48640 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48637 SX) (SY-REF48639 SY))
      (%%SCOPY N-REF48636 SX-REF48637 INCX-REF48638 SY-REF48639
       INCY-REF48640))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SCOPY))

(COMMON-LISP:EXPORT '%SCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SDOT))

(CFFI:DEFCFUN ("sdot_" %%SDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SDOT))

(COMMON-LISP:PUSHNEW '("SDOT" "sdot_" %%SDOT %SDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SDOT))

(COMMON-LISP:DEFUN %SDOT (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48641 ':INT32) (INCX-REF48643 ':INT32)
                              (INCY-REF48645 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48641 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48643 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48645 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48642 SX) (SY-REF48644 SY))
      (%%SDOT N-REF48641 SX-REF48642 INCX-REF48643 SY-REF48644 INCY-REF48645))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SDOT))

(COMMON-LISP:EXPORT '%SDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SDSDOT))

(CFFI:DEFCFUN ("sdsdot_" %%SDSDOT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (SB :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SDSDOT))

(COMMON-LISP:PUSHNEW '("SDSDOT" "sdsdot_" %%SDSDOT %SDSDOT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SDSDOT))

(COMMON-LISP:DEFUN %SDSDOT (N SB SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SDSDOT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48646 ':INT32) (SB-REF48647 ':FLOAT)
                              (INCX-REF48649 ':INT32) (INCY-REF48651 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48646 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF48647 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48649 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48651 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48648 SX) (SY-REF48650 SY))
      (%%SDSDOT N-REF48646 SB-REF48647 SX-REF48648 INCX-REF48649 SY-REF48650
       INCY-REF48651))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SDSDOT))

(COMMON-LISP:EXPORT '%SDSDOT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGBMV))

(CFFI:DEFCFUN ("sgbmv_" %%SGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGBMV))

(COMMON-LISP:PUSHNEW '("SGBMV" "sgbmv_" %%SGBMV %SGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGBMV))

(COMMON-LISP:DEFUN %SGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48653 ':INT32) (N-REF48654 ':INT32)
                              (KL-REF48655 ':INT32) (KU-REF48656 ':INT32)
                              (ALPHA-REF48657 ':FLOAT) (LDA-REF48659 ':INT32)
                              (INCX-REF48661 ':INT32) (BETA-REF48662 ':FLOAT)
                              (INCY-REF48664 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48653 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48654 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48655 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48656 :INT32) KU)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48657 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48659 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48661 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48662 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48664 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48658 A) (X-REF48660 X)
                                            (Y-REF48663 Y))
      (%%SGBMV TRANS M-REF48653 N-REF48654 KL-REF48655 KU-REF48656
       ALPHA-REF48657 A-REF48658 LDA-REF48659 X-REF48660 INCX-REF48661
       BETA-REF48662 Y-REF48663 INCY-REF48664))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGBMV))

(COMMON-LISP:EXPORT '%SGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGEMM))

(CFFI:DEFCFUN ("sgemm_" %%SGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGEMM))

(COMMON-LISP:PUSHNEW '("SGEMM" "sgemm_" %%SGEMM %SGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGEMM))

(COMMON-LISP:DEFUN %SGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48667 ':INT32) (N-REF48668 ':INT32)
                              (K-REF48669 ':INT32) (ALPHA-REF48670 ':FLOAT)
                              (LDA-REF48672 ':INT32) (LDB-REF48674 ':INT32)
                              (BETA-REF48675 ':FLOAT) (LDC-REF48677 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48667 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48668 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48669 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48670 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48672 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48674 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48675 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48677 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48671 A) (B-REF48673 B)
                                            (C-REF48676 C))
      (%%SGEMM TRANSA TRANSB M-REF48667 N-REF48668 K-REF48669 ALPHA-REF48670
       A-REF48671 LDA-REF48672 B-REF48673 LDB-REF48674 BETA-REF48675 C-REF48676
       LDC-REF48677))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGEMM))

(COMMON-LISP:EXPORT '%SGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGEMV))

(CFFI:DEFCFUN ("sgemv_" %%SGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGEMV))

(COMMON-LISP:PUSHNEW '("SGEMV" "sgemv_" %%SGEMV %SGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGEMV))

(COMMON-LISP:DEFUN %SGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48679 ':INT32) (N-REF48680 ':INT32)
                              (ALPHA-REF48681 ':FLOAT) (LDA-REF48683 ':INT32)
                              (INCX-REF48685 ':INT32) (BETA-REF48686 ':FLOAT)
                              (INCY-REF48688 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48679 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48680 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48681 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48683 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48685 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48686 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48688 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48682 A) (X-REF48684 X)
                                            (Y-REF48687 Y))
      (%%SGEMV TRANS M-REF48679 N-REF48680 ALPHA-REF48681 A-REF48682
       LDA-REF48683 X-REF48684 INCX-REF48685 BETA-REF48686 Y-REF48687
       INCY-REF48688))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGEMV))

(COMMON-LISP:EXPORT '%SGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SGER))

(CFFI:DEFCFUN ("sger_" %%SGER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SGER))

(COMMON-LISP:PUSHNEW '("SGER" "sger_" %%SGER %SGER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SGER))

(COMMON-LISP:DEFUN %SGER (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SGER)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48689 ':INT32) (N-REF48690 ':INT32)
                              (ALPHA-REF48691 ':FLOAT) (INCX-REF48693 ':INT32)
                              (INCY-REF48695 ':INT32) (LDA-REF48697 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48689 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48690 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48691 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48693 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48695 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48697 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48692 X) (Y-REF48694 Y)
                                            (A-REF48696 A))
      (%%SGER M-REF48689 N-REF48690 ALPHA-REF48691 X-REF48692 INCX-REF48693
       Y-REF48694 INCY-REF48695 A-REF48696 LDA-REF48697))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SGER))

(COMMON-LISP:EXPORT '%SGER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SNRM2))

(CFFI:DEFCFUN ("snrm2_" %%SNRM2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :FLOAT
  (N :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SNRM2))

(COMMON-LISP:PUSHNEW '("SNRM2" "snrm2_" %%SNRM2 %SNRM2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SNRM2))

(COMMON-LISP:DEFUN %SNRM2 (N X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SNRM2)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48698 ':INT32) (INCX-REF48700 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48698 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48700 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48699 X))
      (%%SNRM2 N-REF48698 X-REF48699 INCX-REF48700))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SNRM2))

(COMMON-LISP:EXPORT '%SNRM2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROT))

(CFFI:DEFCFUN ("srot_" %%SROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROT))

(COMMON-LISP:PUSHNEW '("SROT" "srot_" %%SROT %SROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROT))

(COMMON-LISP:DEFUN %SROT (N SX INCX SY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48701 ':INT32) (INCX-REF48703 ':INT32)
                              (INCY-REF48705 ':INT32) (C-REF48706 ':FLOAT)
                              (S-REF48707 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48701 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48703 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48705 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48706 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48707 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48702 SX) (SY-REF48704 SY))
      (%%SROT N-REF48701 SX-REF48702 INCX-REF48703 SY-REF48704 INCY-REF48705
       C-REF48706 S-REF48707))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROT))

(COMMON-LISP:EXPORT '%SROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTG))

(CFFI:DEFCFUN ("srotg_" %%SROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SA :POINTER)
  (SB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTG))

(COMMON-LISP:PUSHNEW '("SROTG" "srotg_" %%SROTG %SROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTG))

(COMMON-LISP:DEFUN %SROTG (SA SB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTG)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((SA-REF48708 ':FLOAT) (SB-REF48709 ':FLOAT)
                              (C-REF48710 ':FLOAT) (S-REF48711 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48708 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF SB-REF48709 :FLOAT) SB)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48710 :FLOAT) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48711 :FLOAT) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%SROTG SA-REF48708 SB-REF48709 C-REF48710 S-REF48711))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTG))

(COMMON-LISP:EXPORT '%SROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTM))

(CFFI:DEFCFUN ("srotm_" %%SROTM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER)
  (SPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTM))

(COMMON-LISP:PUSHNEW '("SROTM" "srotm_" %%SROTM %SROTM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTM))

(COMMON-LISP:DEFUN %SROTM (N SX INCX SY INCY SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTM)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT)
                        SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48712 ':INT32) (INCX-REF48714 ':INT32)
                              (INCY-REF48716 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48712 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48714 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48716 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48713 SX) (SY-REF48715 SY)
                                            (SPARAM-REF48717 SPARAM))
      (%%SROTM N-REF48712 SX-REF48713 INCX-REF48714 SY-REF48715 INCY-REF48716
       SPARAM-REF48717))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTM))

(COMMON-LISP:EXPORT '%SROTM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SROTMG))

(CFFI:DEFCFUN ("srotmg_" %%SROTMG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SD1 :POINTER)
  (SD2 :POINTER)
  (SX1 :POINTER)
  (SY1 :POINTER)
  (SPARAM :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SROTMG))

(COMMON-LISP:PUSHNEW '("SROTMG" "srotmg_" %%SROTMG %SROTMG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SROTMG))

(COMMON-LISP:DEFUN %SROTMG (SD1 SD2 SX1 SY1 SPARAM)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SROTMG)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD1)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SD2)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SX1)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SY1)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT)
                        SPARAM))
  (CFFI:WITH-FOREIGN-OBJECTS ((SD1-REF48718 ':FLOAT) (SD2-REF48719 ':FLOAT)
                              (SX1-REF48720 ':FLOAT) (SY1-REF48721 ':FLOAT))
    (COMMON-LISP:SETF (CFFI:MEM-REF SD1-REF48718 :FLOAT) SD1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SD2-REF48719 :FLOAT) SD2)
    (COMMON-LISP:SETF (CFFI:MEM-REF SX1-REF48720 :FLOAT) SX1)
    (COMMON-LISP:SETF (CFFI:MEM-REF SY1-REF48721 :FLOAT) SY1)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SPARAM-REF48722 SPARAM))
      (%%SROTMG SD1-REF48718 SD2-REF48719 SX1-REF48720 SY1-REF48721
       SPARAM-REF48722))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SROTMG))

(COMMON-LISP:EXPORT '%SROTMG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSBMV))

(CFFI:DEFCFUN ("ssbmv_" %%SSBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSBMV))

(COMMON-LISP:PUSHNEW '("SSBMV" "ssbmv_" %%SSBMV %SSBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSBMV))

(COMMON-LISP:DEFUN %SSBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48724 ':INT32) (K-REF48725 ':INT32)
                              (ALPHA-REF48726 ':FLOAT) (LDA-REF48728 ':INT32)
                              (INCX-REF48730 ':INT32) (BETA-REF48731 ':FLOAT)
                              (INCY-REF48733 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48724 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48725 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48726 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48728 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48730 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48731 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48733 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48727 A) (X-REF48729 X)
                                            (Y-REF48732 Y))
      (%%SSBMV UPLO N-REF48724 K-REF48725 ALPHA-REF48726 A-REF48727
       LDA-REF48728 X-REF48729 INCX-REF48730 BETA-REF48731 Y-REF48732
       INCY-REF48733))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSBMV))

(COMMON-LISP:EXPORT '%SSBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSCAL))

(CFFI:DEFCFUN ("sscal_" %%SSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SA :POINTER)
  (SX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSCAL))

(COMMON-LISP:PUSHNEW '("SSCAL" "sscal_" %%SSCAL %SSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSCAL))

(COMMON-LISP:DEFUN %SSCAL (N SA SX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT SA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48734 ':INT32) (SA-REF48735 ':FLOAT)
                              (INCX-REF48737 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48734 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF SA-REF48735 :FLOAT) SA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48737 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48736 SX))
      (%%SSCAL N-REF48734 SA-REF48735 SX-REF48736 INCX-REF48737))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSCAL))

(COMMON-LISP:EXPORT '%SSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPMV))

(CFFI:DEFCFUN ("sspmv_" %%SSPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPMV))

(COMMON-LISP:PUSHNEW '("SSPMV" "sspmv_" %%SSPMV %SSPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPMV))

(COMMON-LISP:DEFUN %SSPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48739 ':INT32) (ALPHA-REF48740 ':FLOAT)
                              (INCX-REF48743 ':INT32) (BETA-REF48744 ':FLOAT)
                              (INCY-REF48746 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48739 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48740 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48743 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48744 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48746 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48741 AP) (X-REF48742 X)
                                            (Y-REF48745 Y))
      (%%SSPMV UPLO N-REF48739 ALPHA-REF48740 AP-REF48741 X-REF48742
       INCX-REF48743 BETA-REF48744 Y-REF48745 INCY-REF48746))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPMV))

(COMMON-LISP:EXPORT '%SSPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPR))

(CFFI:DEFCFUN ("sspr_" %%SSPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPR))

(COMMON-LISP:PUSHNEW '("SSPR" "sspr_" %%SSPR %SSPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPR))

(COMMON-LISP:DEFUN %SSPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT)
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48748 ':INT32) (ALPHA-REF48749 ':FLOAT)
                              (INCX-REF48751 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48748 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48749 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48751 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48750 X) (AP-REF48752 AP))
      (%%SSPR UPLO N-REF48748 ALPHA-REF48749 X-REF48750 INCX-REF48751
       AP-REF48752))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPR))

(COMMON-LISP:EXPORT '%SSPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSPR2))

(CFFI:DEFCFUN ("sspr2_" %%SSPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSPR2))

(COMMON-LISP:PUSHNEW '("SSPR2" "sspr2_" %%SSPR2 %SSPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSPR2))

(COMMON-LISP:DEFUN %SSPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT)
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48754 ':INT32) (ALPHA-REF48755 ':FLOAT)
                              (INCX-REF48757 ':INT32) (INCY-REF48759 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48754 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48755 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48757 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48759 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48756 X) (Y-REF48758 Y)
                                            (AP-REF48760 AP))
      (%%SSPR2 UPLO N-REF48754 ALPHA-REF48755 X-REF48756 INCX-REF48757
       Y-REF48758 INCY-REF48759 AP-REF48760))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSPR2))

(COMMON-LISP:EXPORT '%SSPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSWAP))

(CFFI:DEFCFUN ("sswap_" %%SSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (SX :POINTER)
  (INCX :POINTER)
  (SY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSWAP))

(COMMON-LISP:PUSHNEW '("SSWAP" "sswap_" %%SSWAP %SSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSWAP))

(COMMON-LISP:DEFUN %SSWAP (N SX INCX SY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) SY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48761 ':INT32) (INCX-REF48763 ':INT32)
                              (INCY-REF48765 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48761 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48763 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48765 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SX-REF48762 SX) (SY-REF48764 SY))
      (%%SSWAP N-REF48761 SX-REF48762 INCX-REF48763 SY-REF48764
       INCY-REF48765))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSWAP))

(COMMON-LISP:EXPORT '%SSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYMM))

(CFFI:DEFCFUN ("ssymm_" %%SSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYMM))

(COMMON-LISP:PUSHNEW '("SSYMM" "ssymm_" %%SSYMM %SSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYMM))

(COMMON-LISP:DEFUN %SSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48768 ':INT32) (N-REF48769 ':INT32)
                              (ALPHA-REF48770 ':FLOAT) (LDA-REF48772 ':INT32)
                              (LDB-REF48774 ':INT32) (BETA-REF48775 ':FLOAT)
                              (LDC-REF48777 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48768 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48769 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48770 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48772 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48774 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48775 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48777 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48771 A) (B-REF48773 B)
                                            (C-REF48776 C))
      (%%SSYMM SIDE UPLO M-REF48768 N-REF48769 ALPHA-REF48770 A-REF48771
       LDA-REF48772 B-REF48773 LDB-REF48774 BETA-REF48775 C-REF48776
       LDC-REF48777))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYMM))

(COMMON-LISP:EXPORT '%SSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYMV))

(CFFI:DEFCFUN ("ssymv_" %%SSYMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYMV))

(COMMON-LISP:PUSHNEW '("SSYMV" "ssymv_" %%SSYMV %SSYMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYMV))

(COMMON-LISP:DEFUN %SSYMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48779 ':INT32) (ALPHA-REF48780 ':FLOAT)
                              (LDA-REF48782 ':INT32) (INCX-REF48784 ':INT32)
                              (BETA-REF48785 ':FLOAT) (INCY-REF48787 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48779 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48780 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48782 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48784 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48785 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48787 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48781 A) (X-REF48783 X)
                                            (Y-REF48786 Y))
      (%%SSYMV UPLO N-REF48779 ALPHA-REF48780 A-REF48781 LDA-REF48782
       X-REF48783 INCX-REF48784 BETA-REF48785 Y-REF48786 INCY-REF48787))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYMV))

(COMMON-LISP:EXPORT '%SSYMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR))

(CFFI:DEFCFUN ("ssyr_" %%SSYR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR))

(COMMON-LISP:PUSHNEW '("SSYR" "ssyr_" %%SSYR %SSYR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR))

(COMMON-LISP:DEFUN %SSYR (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48789 ':INT32) (ALPHA-REF48790 ':FLOAT)
                              (INCX-REF48792 ':INT32) (LDA-REF48794 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48789 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48790 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48792 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48794 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48791 X) (A-REF48793 A))
      (%%SSYR UPLO N-REF48789 ALPHA-REF48790 X-REF48791 INCX-REF48792
       A-REF48793 LDA-REF48794))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR))

(COMMON-LISP:EXPORT '%SSYR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR2))

(CFFI:DEFCFUN ("ssyr2_" %%SSYR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR2))

(COMMON-LISP:PUSHNEW '("SSYR2" "ssyr2_" %%SSYR2 %SSYR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR2))

(COMMON-LISP:DEFUN %SSYR2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48796 ':INT32) (ALPHA-REF48797 ':FLOAT)
                              (INCX-REF48799 ':INT32) (INCY-REF48801 ':INT32)
                              (LDA-REF48803 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48796 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48797 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48799 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48801 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48803 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48798 X) (Y-REF48800 Y)
                                            (A-REF48802 A))
      (%%SSYR2 UPLO N-REF48796 ALPHA-REF48797 X-REF48798 INCX-REF48799
       Y-REF48800 INCY-REF48801 A-REF48802 LDA-REF48803))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR2))

(COMMON-LISP:EXPORT '%SSYR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYR2K))

(CFFI:DEFCFUN ("ssyr2k_" %%SSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYR2K))

(COMMON-LISP:PUSHNEW '("SSYR2K" "ssyr2k_" %%SSYR2K %SSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYR2K))

(COMMON-LISP:DEFUN %SSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48806 ':INT32) (K-REF48807 ':INT32)
                              (ALPHA-REF48808 ':FLOAT) (LDA-REF48810 ':INT32)
                              (LDB-REF48812 ':INT32) (BETA-REF48813 ':FLOAT)
                              (LDC-REF48815 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48806 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48807 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48808 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48810 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48812 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48813 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48815 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48809 A) (B-REF48811 B)
                                            (C-REF48814 C))
      (%%SSYR2K UPLO TRANS N-REF48806 K-REF48807 ALPHA-REF48808 A-REF48809
       LDA-REF48810 B-REF48811 LDB-REF48812 BETA-REF48813 C-REF48814
       LDC-REF48815))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYR2K))

(COMMON-LISP:EXPORT '%SSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%SSYRK))

(CFFI:DEFCFUN ("ssyrk_" %%SSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%SSYRK))

(COMMON-LISP:PUSHNEW '("SSYRK" "ssyrk_" %%SSYRK %SSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %SSYRK))

(COMMON-LISP:DEFUN %SSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%SSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48818 ':INT32) (K-REF48819 ':INT32)
                              (ALPHA-REF48820 ':FLOAT) (LDA-REF48822 ':INT32)
                              (BETA-REF48823 ':FLOAT) (LDC-REF48825 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48818 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48819 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48820 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48822 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF48823 :FLOAT) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48825 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48821 A) (C-REF48824 C))
      (%%SSYRK UPLO TRANS N-REF48818 K-REF48819 ALPHA-REF48820 A-REF48821
       LDA-REF48822 BETA-REF48823 C-REF48824 LDC-REF48825))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %SSYRK))

(COMMON-LISP:EXPORT '%SSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STBMV))

(CFFI:DEFCFUN ("stbmv_" %%STBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STBMV))

(COMMON-LISP:PUSHNEW '("STBMV" "stbmv_" %%STBMV %STBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STBMV))

(COMMON-LISP:DEFUN %STBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48829 ':INT32) (K-REF48830 ':INT32)
                              (LDA-REF48832 ':INT32) (INCX-REF48834 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48829 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48830 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48832 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48834 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48831 A) (X-REF48833 X))
      (%%STBMV UPLO TRANS DIAG N-REF48829 K-REF48830 A-REF48831 LDA-REF48832
       X-REF48833 INCX-REF48834))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STBMV))

(COMMON-LISP:EXPORT '%STBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STBSV))

(CFFI:DEFCFUN ("stbsv_" %%STBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STBSV))

(COMMON-LISP:PUSHNEW '("STBSV" "stbsv_" %%STBSV %STBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STBSV))

(COMMON-LISP:DEFUN %STBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48838 ':INT32) (K-REF48839 ':INT32)
                              (LDA-REF48841 ':INT32) (INCX-REF48843 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48838 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48839 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48841 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48843 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48840 A) (X-REF48842 X))
      (%%STBSV UPLO TRANS DIAG N-REF48838 K-REF48839 A-REF48840 LDA-REF48841
       X-REF48842 INCX-REF48843))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STBSV))

(COMMON-LISP:EXPORT '%STBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STPMV))

(CFFI:DEFCFUN ("stpmv_" %%STPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STPMV))

(COMMON-LISP:PUSHNEW '("STPMV" "stpmv_" %%STPMV %STPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STPMV))

(COMMON-LISP:DEFUN %STPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48847 ':INT32) (INCX-REF48850 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48847 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48850 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48848 AP) (X-REF48849 X))
      (%%STPMV UPLO TRANS DIAG N-REF48847 AP-REF48848 X-REF48849
       INCX-REF48850))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STPMV))

(COMMON-LISP:EXPORT '%STPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STPSV))

(CFFI:DEFCFUN ("stpsv_" %%STPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STPSV))

(COMMON-LISP:PUSHNEW '("STPSV" "stpsv_" %%STPSV %STPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STPSV))

(COMMON-LISP:DEFUN %STPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48854 ':INT32) (INCX-REF48857 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48854 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48857 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF48855 AP) (X-REF48856 X))
      (%%STPSV UPLO TRANS DIAG N-REF48854 AP-REF48855 X-REF48856
       INCX-REF48857))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STPSV))

(COMMON-LISP:EXPORT '%STPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRMM))

(CFFI:DEFCFUN ("strmm_" %%STRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRMM))

(COMMON-LISP:PUSHNEW '("STRMM" "strmm_" %%STRMM %STRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRMM))

(COMMON-LISP:DEFUN %STRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48862 ':INT32) (N-REF48863 ':INT32)
                              (ALPHA-REF48864 ':FLOAT) (LDA-REF48866 ':INT32)
                              (LDB-REF48868 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48862 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48863 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48864 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48866 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48868 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48865 A) (B-REF48867 B))
      (%%STRMM SIDE UPLO TRANSA DIAG M-REF48862 N-REF48863 ALPHA-REF48864
       A-REF48865 LDA-REF48866 B-REF48867 LDB-REF48868))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRMM))

(COMMON-LISP:EXPORT '%STRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRMV))

(CFFI:DEFCFUN ("strmv_" %%STRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRMV))

(COMMON-LISP:PUSHNEW '("STRMV" "strmv_" %%STRMV %STRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRMV))

(COMMON-LISP:DEFUN %STRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48872 ':INT32) (LDA-REF48874 ':INT32)
                              (INCX-REF48876 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48872 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48874 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48876 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48873 A) (X-REF48875 X))
      (%%STRMV UPLO TRANS DIAG N-REF48872 A-REF48873 LDA-REF48874 X-REF48875
       INCX-REF48876))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRMV))

(COMMON-LISP:EXPORT '%STRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRSM))

(CFFI:DEFCFUN ("strsm_" %%STRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRSM))

(COMMON-LISP:PUSHNEW '("STRSM" "strsm_" %%STRSM %STRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRSM))

(COMMON-LISP:DEFUN %STRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:SINGLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48881 ':INT32) (N-REF48882 ':INT32)
                              (ALPHA-REF48883 ':FLOAT) (LDA-REF48885 ':INT32)
                              (LDB-REF48887 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48881 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48882 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF48883 :FLOAT) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48885 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48887 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48884 A) (B-REF48886 B))
      (%%STRSM SIDE UPLO TRANSA DIAG M-REF48881 N-REF48882 ALPHA-REF48883
       A-REF48884 LDA-REF48885 B-REF48886 LDB-REF48887))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRSM))

(COMMON-LISP:EXPORT '%STRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%STRSV))

(CFFI:DEFCFUN ("strsv_" %%STRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%STRSV))

(COMMON-LISP:PUSHNEW '("STRSV" "strsv_" %%STRSV %STRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %STRSV))

(COMMON-LISP:DEFUN %STRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%STRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY COMMON-LISP:SINGLE-FLOAT) X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48891 ':INT32) (LDA-REF48893 ':INT32)
                              (INCX-REF48895 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48891 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48893 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48895 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48892 A) (X-REF48894 X))
      (%%STRSV UPLO TRANS DIAG N-REF48891 A-REF48892 LDA-REF48893 X-REF48894
       INCX-REF48895))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %STRSV))

(COMMON-LISP:EXPORT '%STRSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%XERBLA))

(CFFI:DEFCFUN ("xerbla_" %%XERBLA :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SRNAME :STRING)
  (INFO :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%XERBLA))

(COMMON-LISP:PUSHNEW '("XERBLA" "xerbla_" %%XERBLA %XERBLA)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %XERBLA))

(COMMON-LISP:DEFUN %XERBLA (SRNAME INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SRNAME)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((INFO-REF48897 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF48897 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%XERBLA SRNAME INFO-REF48897))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %XERBLA))

(COMMON-LISP:EXPORT '%XERBLA '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%XERBLA_ARRAY))

(CFFI:DEFCFUN ("xerbla_array_" %%XERBLA_ARRAY :LIBRARY
               MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SRNAME_ARRAY :POINTER)
  (SRNAME_LEN :POINTER)
  (INFO :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%XERBLA_ARRAY))

(COMMON-LISP:PUSHNEW
 '("XERBLA_ARRAY" "xerbla_array_" %%XERBLA_ARRAY %XERBLA_ARRAY)
 (COMMON-LISP:GETF (COMMON-LISP:SYMBOL-PLIST 'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                   ':MAGICL)
 :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %XERBLA_ARRAY))

(COMMON-LISP:DEFUN %XERBLA_ARRAY (SRNAME_ARRAY SRNAME_LEN INFO)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%XERBLA_ARRAY)
                       (COMMON-LISP:TYPE COMMON-LISP:ARRAY SRNAME_ARRAY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32)
                        SRNAME_LEN)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INFO))
  (CFFI:WITH-FOREIGN-OBJECTS ((SRNAME_LEN-REF48899 ':INT32)
                              (INFO-REF48900 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF SRNAME_LEN-REF48899 :INT32) SRNAME_LEN)
    (COMMON-LISP:SETF (CFFI:MEM-REF INFO-REF48900 :INT32) INFO)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((SRNAME_ARRAY-REF48898
                                             SRNAME_ARRAY))
      (%%XERBLA_ARRAY SRNAME_ARRAY-REF48898 SRNAME_LEN-REF48899
       INFO-REF48900))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %XERBLA_ARRAY))

(COMMON-LISP:EXPORT '%XERBLA_ARRAY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZAXPY))

(CFFI:DEFCFUN ("zaxpy_" %%ZAXPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZAXPY))

(COMMON-LISP:PUSHNEW '("ZAXPY" "zaxpy_" %%ZAXPY %ZAXPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZAXPY))

(COMMON-LISP:DEFUN %ZAXPY (N ZA ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZAXPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48901 ':INT32)
                              (ZA-REF48902
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48904 ':INT32) (INCY-REF48906 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48901 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF48902
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48904 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48906 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48903 ZX) (ZY-REF48905 ZY))
      (%%ZAXPY N-REF48901 ZA-REF48902 ZX-REF48903 INCX-REF48904 ZY-REF48905
       INCY-REF48906))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZAXPY))

(COMMON-LISP:EXPORT '%ZAXPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZCOPY))

(CFFI:DEFCFUN ("zcopy_" %%ZCOPY :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZCOPY))

(COMMON-LISP:PUSHNEW '("ZCOPY" "zcopy_" %%ZCOPY %ZCOPY)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZCOPY))

(COMMON-LISP:DEFUN %ZCOPY (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZCOPY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48907 ':INT32) (INCX-REF48909 ':INT32)
                              (INCY-REF48911 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48907 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48909 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48911 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48908 ZX) (ZY-REF48910 ZY))
      (%%ZCOPY N-REF48907 ZX-REF48908 INCX-REF48909 ZY-REF48910
       INCY-REF48911))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZCOPY))

(COMMON-LISP:EXPORT '%ZCOPY '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDOTC))

(CFFI:DEFCFUN ("zdotc_" %%ZDOTC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDOTC))

(COMMON-LISP:PUSHNEW '("ZDOTC" "zdotc_" %%ZDOTC %ZDOTC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDOTC))

(COMMON-LISP:DEFUN %ZDOTC (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48912 ':INT32) (INCX-REF48914 ':INT32)
                              (INCY-REF48916 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48912 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48914 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48916 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48913 ZX) (ZY-REF48915 ZY))
      (%%ZDOTC N-REF48912 ZX-REF48913 INCX-REF48914 ZY-REF48915
       INCY-REF48916))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDOTC))

(COMMON-LISP:EXPORT '%ZDOTC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDOTU))

(CFFI:DEFCFUN ("zdotu_" %%ZDOTU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDOTU))

(COMMON-LISP:PUSHNEW '("ZDOTU" "zdotu_" %%ZDOTU %ZDOTU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDOTU))

(COMMON-LISP:DEFUN %ZDOTU (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDOTU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48917 ':INT32) (INCX-REF48919 ':INT32)
                              (INCY-REF48921 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48917 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48919 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48921 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48918 ZX) (ZY-REF48920 ZY))
      (%%ZDOTU N-REF48917 ZX-REF48918 INCX-REF48919 ZY-REF48920
       INCY-REF48921))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDOTU))

(COMMON-LISP:EXPORT '%ZDOTU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDROT))

(CFFI:DEFCFUN ("zdrot_" %%ZDROT :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (CX :POINTER)
  (INCX :POINTER)
  (CY :POINTER)
  (INCY :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDROT))

(COMMON-LISP:PUSHNEW '("ZDROT" "zdrot_" %%ZDROT %ZDROT)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDROT))

(COMMON-LISP:DEFUN %ZDROT (N CX INCX CY INCY C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDROT)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        CX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        CY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT S))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48922 ':INT32) (INCX-REF48924 ':INT32)
                              (INCY-REF48926 ':INT32) (C-REF48927 ':DOUBLE)
                              (S-REF48928 ':DOUBLE))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48922 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48924 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48926 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF48927 :DOUBLE) C)
    (COMMON-LISP:SETF (CFFI:MEM-REF S-REF48928 :DOUBLE) S)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((CX-REF48923 CX) (CY-REF48925 CY))
      (%%ZDROT N-REF48922 CX-REF48923 INCX-REF48924 CY-REF48925 INCY-REF48926
       C-REF48927 S-REF48928))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDROT))

(COMMON-LISP:EXPORT '%ZDROT '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZDSCAL))

(CFFI:DEFCFUN ("zdscal_" %%ZDSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (DA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZDSCAL))

(COMMON-LISP:PUSHNEW '("ZDSCAL" "zdscal_" %%ZDSCAL %ZDSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZDSCAL))

(COMMON-LISP:DEFUN %ZDSCAL (N DA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZDSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT DA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48929 ':INT32) (DA-REF48930 ':DOUBLE)
                              (INCX-REF48932 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48929 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF DA-REF48930 :DOUBLE) DA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48932 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF48931 ZX))
      (%%ZDSCAL N-REF48929 DA-REF48930 ZX-REF48931 INCX-REF48932))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZDSCAL))

(COMMON-LISP:EXPORT '%ZDSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGBMV))

(CFFI:DEFCFUN ("zgbmv_" %%ZGBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (KL :POINTER)
  (KU :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGBMV))

(COMMON-LISP:PUSHNEW '("ZGBMV" "zgbmv_" %%ZGBMV %ZGBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGBMV))

(COMMON-LISP:DEFUN %ZGBMV (TRANS M N KL KU ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) KU)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48934 ':INT32) (N-REF48935 ':INT32)
                              (KL-REF48936 ':INT32) (KU-REF48937 ':INT32)
                              (ALPHA-REF48938
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48940 ':INT32) (INCX-REF48942 ':INT32)
                              (BETA-REF48943
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48945 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48934 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48935 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF KL-REF48936 :INT32) KL)
    (COMMON-LISP:SETF (CFFI:MEM-REF KU-REF48937 :INT32) KU)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48938
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48940 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48942 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48943
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48945 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48939 A) (X-REF48941 X)
                                            (Y-REF48944 Y))
      (%%ZGBMV TRANS M-REF48934 N-REF48935 KL-REF48936 KU-REF48937
       ALPHA-REF48938 A-REF48939 LDA-REF48940 X-REF48941 INCX-REF48942
       BETA-REF48943 Y-REF48944 INCY-REF48945))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGBMV))

(COMMON-LISP:EXPORT '%ZGBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGEMM))

(CFFI:DEFCFUN ("zgemm_" %%ZGEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANSA :STRING)
  (TRANSB :STRING)
  (M :POINTER)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGEMM))

(COMMON-LISP:PUSHNEW '("ZGEMM" "zgemm_" %%ZGEMM %ZGEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGEMM))

(COMMON-LISP:DEFUN %ZGEMM (TRANSA TRANSB M N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSB)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48948 ':INT32) (N-REF48949 ':INT32)
                              (K-REF48950 ':INT32)
                              (ALPHA-REF48951
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48953 ':INT32) (LDB-REF48955 ':INT32)
                              (BETA-REF48956
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF48958 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48948 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48949 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48950 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48951
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48953 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF48955 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48956
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF48958 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48952 A) (B-REF48954 B)
                                            (C-REF48957 C))
      (%%ZGEMM TRANSA TRANSB M-REF48948 N-REF48949 K-REF48950 ALPHA-REF48951
       A-REF48952 LDA-REF48953 B-REF48954 LDB-REF48955 BETA-REF48956 C-REF48957
       LDC-REF48958))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGEMM))

(COMMON-LISP:EXPORT '%ZGEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGEMV))

(CFFI:DEFCFUN ("zgemv_" %%ZGEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (TRANS :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGEMV))

(COMMON-LISP:PUSHNEW '("ZGEMV" "zgemv_" %%ZGEMV %ZGEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGEMV))

(COMMON-LISP:DEFUN %ZGEMV (TRANS M N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48960 ':INT32) (N-REF48961 ':INT32)
                              (ALPHA-REF48962
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48964 ':INT32) (INCX-REF48966 ':INT32)
                              (BETA-REF48967
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48969 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48960 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48961 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48962
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48964 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48966 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48967
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48969 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48963 A) (X-REF48965 X)
                                            (Y-REF48968 Y))
      (%%ZGEMV TRANS M-REF48960 N-REF48961 ALPHA-REF48962 A-REF48963
       LDA-REF48964 X-REF48965 INCX-REF48966 BETA-REF48967 Y-REF48968
       INCY-REF48969))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGEMV))

(COMMON-LISP:EXPORT '%ZGEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGERC))

(CFFI:DEFCFUN ("zgerc_" %%ZGERC :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGERC))

(COMMON-LISP:PUSHNEW '("ZGERC" "zgerc_" %%ZGERC %ZGERC)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGERC))

(COMMON-LISP:DEFUN %ZGERC (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERC)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48970 ':INT32) (N-REF48971 ':INT32)
                              (ALPHA-REF48972
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48974 ':INT32) (INCY-REF48976 ':INT32)
                              (LDA-REF48978 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48970 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48971 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48972
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48974 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48976 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48978 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48973 X) (Y-REF48975 Y)
                                            (A-REF48977 A))
      (%%ZGERC M-REF48970 N-REF48971 ALPHA-REF48972 X-REF48973 INCX-REF48974
       Y-REF48975 INCY-REF48976 A-REF48977 LDA-REF48978))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGERC))

(COMMON-LISP:EXPORT '%ZGERC '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZGERU))

(CFFI:DEFCFUN ("zgeru_" %%ZGERU :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZGERU))

(COMMON-LISP:PUSHNEW '("ZGERU" "zgeru_" %%ZGERU %ZGERU)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZGERU))

(COMMON-LISP:DEFUN %ZGERU (M N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZGERU)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF48979 ':INT32) (N-REF48980 ':INT32)
                              (ALPHA-REF48981
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF48983 ':INT32) (INCY-REF48985 ':INT32)
                              (LDA-REF48987 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF48979 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48980 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48981
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48983 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48985 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48987 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF48982 X) (Y-REF48984 Y)
                                            (A-REF48986 A))
      (%%ZGERU M-REF48979 N-REF48980 ALPHA-REF48981 X-REF48982 INCX-REF48983
       Y-REF48984 INCY-REF48985 A-REF48986 LDA-REF48987))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZGERU))

(COMMON-LISP:EXPORT '%ZGERU '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHBMV))

(CFFI:DEFCFUN ("zhbmv_" %%ZHBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHBMV))

(COMMON-LISP:PUSHNEW '("ZHBMV" "zhbmv_" %%ZHBMV %ZHBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHBMV))

(COMMON-LISP:DEFUN %ZHBMV (UPLO N K ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF48989 ':INT32) (K-REF48990 ':INT32)
                              (ALPHA-REF48991
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF48993 ':INT32) (INCX-REF48995 ':INT32)
                              (BETA-REF48996
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF48998 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF48989 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF48990 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF48991
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF48993 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF48995 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF48996
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF48998 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF48992 A) (X-REF48994 X)
                                            (Y-REF48997 Y))
      (%%ZHBMV UPLO N-REF48989 K-REF48990 ALPHA-REF48991 A-REF48992
       LDA-REF48993 X-REF48994 INCX-REF48995 BETA-REF48996 Y-REF48997
       INCY-REF48998))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHBMV))

(COMMON-LISP:EXPORT '%ZHBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHEMM))

(CFFI:DEFCFUN ("zhemm_" %%ZHEMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHEMM))

(COMMON-LISP:PUSHNEW '("ZHEMM" "zhemm_" %%ZHEMM %ZHEMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHEMM))

(COMMON-LISP:DEFUN %ZHEMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49001 ':INT32) (N-REF49002 ':INT32)
                              (ALPHA-REF49003
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49005 ':INT32) (LDB-REF49007 ':INT32)
                              (BETA-REF49008
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49010 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49001 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49002 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49003
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49005 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49007 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49008
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49010 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49004 A) (B-REF49006 B)
                                            (C-REF49009 C))
      (%%ZHEMM SIDE UPLO M-REF49001 N-REF49002 ALPHA-REF49003 A-REF49004
       LDA-REF49005 B-REF49006 LDB-REF49007 BETA-REF49008 C-REF49009
       LDC-REF49010))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHEMM))

(COMMON-LISP:EXPORT '%ZHEMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHEMV))

(CFFI:DEFCFUN ("zhemv_" %%ZHEMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHEMV))

(COMMON-LISP:PUSHNEW '("ZHEMV" "zhemv_" %%ZHEMV %ZHEMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHEMV))

(COMMON-LISP:DEFUN %ZHEMV (UPLO N ALPHA A LDA X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHEMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49012 ':INT32)
                              (ALPHA-REF49013
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49015 ':INT32) (INCX-REF49017 ':INT32)
                              (BETA-REF49018
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF49020 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49012 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49013
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49015 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49017 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49018
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49020 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49014 A) (X-REF49016 X)
                                            (Y-REF49019 Y))
      (%%ZHEMV UPLO N-REF49012 ALPHA-REF49013 A-REF49014 LDA-REF49015
       X-REF49016 INCX-REF49017 BETA-REF49018 Y-REF49019 INCY-REF49020))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHEMV))

(COMMON-LISP:EXPORT '%ZHEMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER))

(CFFI:DEFCFUN ("zher_" %%ZHER :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER))

(COMMON-LISP:PUSHNEW '("ZHER" "zher_" %%ZHER %ZHER)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER))

(COMMON-LISP:DEFUN %ZHER (UPLO N ALPHA X INCX A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49022 ':INT32) (ALPHA-REF49023 ':DOUBLE)
                              (INCX-REF49025 ':INT32) (LDA-REF49027 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49022 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF49023 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49025 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49027 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF49024 X) (A-REF49026 A))
      (%%ZHER UPLO N-REF49022 ALPHA-REF49023 X-REF49024 INCX-REF49025
       A-REF49026 LDA-REF49027))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER))

(COMMON-LISP:EXPORT '%ZHER '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER2))

(CFFI:DEFCFUN ("zher2_" %%ZHER2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (A :POINTER)
  (LDA :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER2))

(COMMON-LISP:PUSHNEW '("ZHER2" "zher2_" %%ZHER2 %ZHER2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER2))

(COMMON-LISP:DEFUN %ZHER2 (UPLO N ALPHA X INCX Y INCY A LDA)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49029 ':INT32)
                              (ALPHA-REF49030
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF49032 ':INT32) (INCY-REF49034 ':INT32)
                              (LDA-REF49036 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49029 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49030
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49032 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49034 :INT32) INCY)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49036 :INT32) LDA)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF49031 X) (Y-REF49033 Y)
                                            (A-REF49035 A))
      (%%ZHER2 UPLO N-REF49029 ALPHA-REF49030 X-REF49031 INCX-REF49032
       Y-REF49033 INCY-REF49034 A-REF49035 LDA-REF49036))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER2))

(COMMON-LISP:EXPORT '%ZHER2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHER2K))

(CFFI:DEFCFUN ("zher2k_" %%ZHER2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHER2K))

(COMMON-LISP:PUSHNEW '("ZHER2K" "zher2k_" %%ZHER2K %ZHER2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHER2K))

(COMMON-LISP:DEFUN %ZHER2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHER2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49039 ':INT32) (K-REF49040 ':INT32)
                              (ALPHA-REF49041
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49043 ':INT32) (LDB-REF49045 ':INT32)
                              (BETA-REF49046 ':DOUBLE) (LDC-REF49048 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49039 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49040 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49041
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49043 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49045 :INT32) LDB)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF49046 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49048 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49042 A) (B-REF49044 B)
                                            (C-REF49047 C))
      (%%ZHER2K UPLO TRANS N-REF49039 K-REF49040 ALPHA-REF49041 A-REF49042
       LDA-REF49043 B-REF49044 LDB-REF49045 BETA-REF49046 C-REF49047
       LDC-REF49048))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHER2K))

(COMMON-LISP:EXPORT '%ZHER2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHERK))

(CFFI:DEFCFUN ("zherk_" %%ZHERK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHERK))

(COMMON-LISP:PUSHNEW '("ZHERK" "zherk_" %%ZHERK %ZHERK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHERK))

(COMMON-LISP:DEFUN %ZHERK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHERK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49051 ':INT32) (K-REF49052 ':INT32)
                              (ALPHA-REF49053 ':DOUBLE) (LDA-REF49055 ':INT32)
                              (BETA-REF49056 ':DOUBLE) (LDC-REF49058 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49051 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49052 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF49053 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49055 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF BETA-REF49056 :DOUBLE) BETA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49058 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49054 A) (C-REF49057 C))
      (%%ZHERK UPLO TRANS N-REF49051 K-REF49052 ALPHA-REF49053 A-REF49054
       LDA-REF49055 BETA-REF49056 C-REF49057 LDC-REF49058))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHERK))

(COMMON-LISP:EXPORT '%ZHERK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPMV))

(CFFI:DEFCFUN ("zhpmv_" %%ZHPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (BETA :POINTER)
  (Y :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPMV))

(COMMON-LISP:PUSHNEW '("ZHPMV" "zhpmv_" %%ZHPMV %ZHPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPMV))

(COMMON-LISP:DEFUN %ZHPMV (UPLO N ALPHA AP X INCX BETA Y INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49060 ':INT32)
                              (ALPHA-REF49061
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF49064 ':INT32)
                              (BETA-REF49065
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCY-REF49067 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49060 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49061
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49064 :INT32) INCX)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49065
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49067 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF49062 AP) (X-REF49063 X)
                                            (Y-REF49066 Y))
      (%%ZHPMV UPLO N-REF49060 ALPHA-REF49061 AP-REF49062 X-REF49063
       INCX-REF49064 BETA-REF49065 Y-REF49066 INCY-REF49067))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPMV))

(COMMON-LISP:EXPORT '%ZHPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPR))

(CFFI:DEFCFUN ("zhpr_" %%ZHPR :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPR))

(COMMON-LISP:PUSHNEW '("ZHPR" "zhpr_" %%ZHPR %ZHPR)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPR))

(COMMON-LISP:DEFUN %ZHPR (UPLO N ALPHA X INCX AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49069 ':INT32) (ALPHA-REF49070 ':DOUBLE)
                              (INCX-REF49072 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49069 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF ALPHA-REF49070 :DOUBLE) ALPHA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49072 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF49071 X) (AP-REF49073 AP))
      (%%ZHPR UPLO N-REF49069 ALPHA-REF49070 X-REF49071 INCX-REF49072
       AP-REF49073))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPR))

(COMMON-LISP:EXPORT '%ZHPR '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZHPR2))

(CFFI:DEFCFUN ("zhpr2_" %%ZHPR2 :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (N :POINTER)
  (ALPHA :POINTER)
  (X :POINTER)
  (INCX :POINTER)
  (Y :POINTER)
  (INCY :POINTER)
  (AP :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZHPR2))

(COMMON-LISP:PUSHNEW '("ZHPR2" "zhpr2_" %%ZHPR2 %ZHPR2)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZHPR2))

(COMMON-LISP:DEFUN %ZHPR2 (UPLO N ALPHA X INCX Y INCY AP)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZHPR2)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        Y)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        AP))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49075 ':INT32)
                              (ALPHA-REF49076
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF49078 ':INT32) (INCY-REF49080 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49075 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49076
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49078 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49080 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((X-REF49077 X) (Y-REF49079 Y)
                                            (AP-REF49081 AP))
      (%%ZHPR2 UPLO N-REF49075 ALPHA-REF49076 X-REF49077 INCX-REF49078
       Y-REF49079 INCY-REF49080 AP-REF49081))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZHPR2))

(COMMON-LISP:EXPORT '%ZHPR2 '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZROTG))

(CFFI:DEFCFUN ("zrotg_" %%ZROTG :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (CA :POINTER)
  (CB :POINTER)
  (C :POINTER)
  (S :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZROTG))

(COMMON-LISP:PUSHNEW '("ZROTG" "zrotg_" %%ZROTG %ZROTG)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZROTG))

(COMMON-LISP:DEFUN %ZROTG (CA CB C S)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZROTG)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) CB)
                       (COMMON-LISP:TYPE COMMON-LISP:DOUBLE-FLOAT C)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) S))
  (CFFI:WITH-FOREIGN-OBJECTS ((CA-REF49082
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (CB-REF49083
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (C-REF49084 ':DOUBLE)
                              (S-REF49085
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CA-REF49082
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CA)))
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              CB-REF49083
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART CB)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART CB)))
    (COMMON-LISP:SETF (CFFI:MEM-REF C-REF49084 :DOUBLE) C)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              S-REF49085 MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART S)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART S)))
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS COMMON-LISP:NIL
      (%%ZROTG CA-REF49082 CB-REF49083 C-REF49084 S-REF49085))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZROTG))

(COMMON-LISP:EXPORT '%ZROTG '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSCAL))

(CFFI:DEFCFUN ("zscal_" %%ZSCAL :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZA :POINTER)
  (ZX :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSCAL))

(COMMON-LISP:PUSHNEW '("ZSCAL" "zscal_" %%ZSCAL %ZSCAL)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSCAL))

(COMMON-LISP:DEFUN %ZSCAL (N ZA ZX INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSCAL)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ZA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49086 ':INT32)
                              (ZA-REF49087
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (INCX-REF49089 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49086 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ZA-REF49087
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ZA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ZA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49089 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF49088 ZX))
      (%%ZSCAL N-REF49086 ZA-REF49087 ZX-REF49088 INCX-REF49089))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSCAL))

(COMMON-LISP:EXPORT '%ZSCAL '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSWAP))

(CFFI:DEFCFUN ("zswap_" %%ZSWAP :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (N :POINTER)
  (ZX :POINTER)
  (INCX :POINTER)
  (ZY :POINTER)
  (INCY :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSWAP))

(COMMON-LISP:PUSHNEW '("ZSWAP" "zswap_" %%ZSWAP %ZSWAP)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSWAP))

(COMMON-LISP:DEFUN %ZSWAP (N ZX INCX ZY INCY)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSWAP)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZX)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        ZY)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCY))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49090 ':INT32) (INCX-REF49092 ':INT32)
                              (INCY-REF49094 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49090 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49092 :INT32) INCX)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCY-REF49094 :INT32) INCY)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((ZX-REF49091 ZX) (ZY-REF49093 ZY))
      (%%ZSWAP N-REF49090 ZX-REF49091 INCX-REF49092 ZY-REF49093
       INCY-REF49094))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSWAP))

(COMMON-LISP:EXPORT '%ZSWAP '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYMM))

(CFFI:DEFCFUN ("zsymm_" %%ZSYMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYMM))

(COMMON-LISP:PUSHNEW '("ZSYMM" "zsymm_" %%ZSYMM %ZSYMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYMM))

(COMMON-LISP:DEFUN %ZSYMM (SIDE UPLO M N ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49097 ':INT32) (N-REF49098 ':INT32)
                              (ALPHA-REF49099
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49101 ':INT32) (LDB-REF49103 ':INT32)
                              (BETA-REF49104
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49106 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49097 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49098 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49099
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49101 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49103 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49104
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49106 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49100 A) (B-REF49102 B)
                                            (C-REF49105 C))
      (%%ZSYMM SIDE UPLO M-REF49097 N-REF49098 ALPHA-REF49099 A-REF49100
       LDA-REF49101 B-REF49102 LDB-REF49103 BETA-REF49104 C-REF49105
       LDC-REF49106))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYMM))

(COMMON-LISP:EXPORT '%ZSYMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYR2K))

(CFFI:DEFCFUN ("zsyr2k_" %%ZSYR2K :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYR2K))

(COMMON-LISP:PUSHNEW '("ZSYR2K" "zsyr2k_" %%ZSYR2K %ZSYR2K)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYR2K))

(COMMON-LISP:DEFUN %ZSYR2K (UPLO TRANS N K ALPHA A LDA B LDB BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYR2K)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49109 ':INT32) (K-REF49110 ':INT32)
                              (ALPHA-REF49111
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49113 ':INT32) (LDB-REF49115 ':INT32)
                              (BETA-REF49116
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49118 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49109 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49110 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49111
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49113 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49115 :INT32) LDB)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49116
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49118 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49112 A) (B-REF49114 B)
                                            (C-REF49117 C))
      (%%ZSYR2K UPLO TRANS N-REF49109 K-REF49110 ALPHA-REF49111 A-REF49112
       LDA-REF49113 B-REF49114 LDB-REF49115 BETA-REF49116 C-REF49117
       LDC-REF49118))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYR2K))

(COMMON-LISP:EXPORT '%ZSYR2K '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZSYRK))

(CFFI:DEFCFUN ("zsyrk_" %%ZSYRK :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (N :POINTER)
  (K :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (BETA :POINTER)
  (C :POINTER)
  (LDC :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZSYRK))

(COMMON-LISP:PUSHNEW '("ZSYRK" "zsyrk_" %%ZSYRK %ZSYRK)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZSYRK))

(COMMON-LISP:DEFUN %ZSYRK (UPLO TRANS N K ALPHA A LDA BETA C LDC)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZSYRK)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) BETA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        C)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDC))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49121 ':INT32) (K-REF49122 ':INT32)
                              (ALPHA-REF49123
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49125 ':INT32)
                              (BETA-REF49126
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDC-REF49128 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49121 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49122 :INT32) K)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49123
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49125 :INT32) LDA)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              BETA-REF49126
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART BETA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART BETA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDC-REF49128 :INT32) LDC)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49124 A) (C-REF49127 C))
      (%%ZSYRK UPLO TRANS N-REF49121 K-REF49122 ALPHA-REF49123 A-REF49124
       LDA-REF49125 BETA-REF49126 C-REF49127 LDC-REF49128))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZSYRK))

(COMMON-LISP:EXPORT '%ZSYRK '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTBMV))

(CFFI:DEFCFUN ("ztbmv_" %%ZTBMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTBMV))

(COMMON-LISP:PUSHNEW '("ZTBMV" "ztbmv_" %%ZTBMV %ZTBMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTBMV))

(COMMON-LISP:DEFUN %ZTBMV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49132 ':INT32) (K-REF49133 ':INT32)
                              (LDA-REF49135 ':INT32) (INCX-REF49137 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49132 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49133 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49135 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49137 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49134 A) (X-REF49136 X))
      (%%ZTBMV UPLO TRANS DIAG N-REF49132 K-REF49133 A-REF49134 LDA-REF49135
       X-REF49136 INCX-REF49137))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTBMV))

(COMMON-LISP:EXPORT '%ZTBMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTBSV))

(CFFI:DEFCFUN ("ztbsv_" %%ZTBSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (K :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTBSV))

(COMMON-LISP:PUSHNEW '("ZTBSV" "ztbsv_" %%ZTBSV %ZTBSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTBSV))

(COMMON-LISP:DEFUN %ZTBSV (UPLO TRANS DIAG N K A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTBSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) K)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49141 ':INT32) (K-REF49142 ':INT32)
                              (LDA-REF49144 ':INT32) (INCX-REF49146 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49141 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF K-REF49142 :INT32) K)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49144 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49146 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49143 A) (X-REF49145 X))
      (%%ZTBSV UPLO TRANS DIAG N-REF49141 K-REF49142 A-REF49143 LDA-REF49144
       X-REF49145 INCX-REF49146))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTBSV))

(COMMON-LISP:EXPORT '%ZTBSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTPMV))

(CFFI:DEFCFUN ("ztpmv_" %%ZTPMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTPMV))

(COMMON-LISP:PUSHNEW '("ZTPMV" "ztpmv_" %%ZTPMV %ZTPMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTPMV))

(COMMON-LISP:DEFUN %ZTPMV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49150 ':INT32) (INCX-REF49153 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49150 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49153 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF49151 AP) (X-REF49152 X))
      (%%ZTPMV UPLO TRANS DIAG N-REF49150 AP-REF49151 X-REF49152
       INCX-REF49153))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTPMV))

(COMMON-LISP:EXPORT '%ZTPMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTPSV))

(CFFI:DEFCFUN ("ztpsv_" %%ZTPSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (AP :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTPSV))

(COMMON-LISP:PUSHNEW '("ZTPSV" "ztpsv_" %%ZTPSV %ZTPSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTPSV))

(COMMON-LISP:DEFUN %ZTPSV (UPLO TRANS DIAG N AP X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTPSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        AP)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49157 ':INT32) (INCX-REF49160 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49157 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49160 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((AP-REF49158 AP) (X-REF49159 X))
      (%%ZTPSV UPLO TRANS DIAG N-REF49157 AP-REF49158 X-REF49159
       INCX-REF49160))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTPSV))

(COMMON-LISP:EXPORT '%ZTPSV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRMM))

(CFFI:DEFCFUN ("ztrmm_" %%ZTRMM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRMM))

(COMMON-LISP:PUSHNEW '("ZTRMM" "ztrmm_" %%ZTRMM %ZTRMM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRMM))

(COMMON-LISP:DEFUN %ZTRMM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49165 ':INT32) (N-REF49166 ':INT32)
                              (ALPHA-REF49167
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49169 ':INT32) (LDB-REF49171 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49165 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49166 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49167
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49169 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49171 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49168 A) (B-REF49170 B))
      (%%ZTRMM SIDE UPLO TRANSA DIAG M-REF49165 N-REF49166 ALPHA-REF49167
       A-REF49168 LDA-REF49169 B-REF49170 LDB-REF49171))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRMM))

(COMMON-LISP:EXPORT '%ZTRMM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRMV))

(CFFI:DEFCFUN ("ztrmv_" %%ZTRMV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRMV))

(COMMON-LISP:PUSHNEW '("ZTRMV" "ztrmv_" %%ZTRMV %ZTRMV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRMV))

(COMMON-LISP:DEFUN %ZTRMV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRMV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49175 ':INT32) (LDA-REF49177 ':INT32)
                              (INCX-REF49179 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49175 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49177 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49179 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49176 A) (X-REF49178 X))
      (%%ZTRMV UPLO TRANS DIAG N-REF49175 A-REF49176 LDA-REF49177 X-REF49178
       INCX-REF49179))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRMV))

(COMMON-LISP:EXPORT '%ZTRMV '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRSM))

(CFFI:DEFCFUN ("ztrsm_" %%ZTRSM :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (SIDE :STRING)
  (UPLO :STRING)
  (TRANSA :STRING)
  (DIAG :STRING)
  (M :POINTER)
  (N :POINTER)
  (ALPHA :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (B :POINTER)
  (LDB :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRSM))

(COMMON-LISP:PUSHNEW '("ZTRSM" "ztrsm_" %%ZTRSM %ZTRSM)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRSM))

(COMMON-LISP:DEFUN %ZTRSM (SIDE UPLO TRANSA DIAG M N ALPHA A LDA B LDB)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSM)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING SIDE)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANSA)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) M)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT) ALPHA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        B)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDB))
  (CFFI:WITH-FOREIGN-OBJECTS ((M-REF49184 ':INT32) (N-REF49185 ':INT32)
                              (ALPHA-REF49186
                               'MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
                              (LDA-REF49188 ':INT32) (LDB-REF49190 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF M-REF49184 :INT32) M)
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49185 :INT32) N)
    (CFFI:WITH-FOREIGN-SLOTS ((COMMON-LISP:REAL MAGICL.CFFI-TYPES::IMAG)
                              ALPHA-REF49186
                              MAGICL.CFFI-TYPES:COMPLEX-DOUBLE-FLOAT)
      (COMMON-LISP:SETF COMMON-LISP:REAL (COMMON-LISP:REALPART ALPHA)
                        MAGICL.CFFI-TYPES::IMAG (COMMON-LISP:IMAGPART ALPHA)))
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49188 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDB-REF49190 :INT32) LDB)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49187 A) (B-REF49189 B))
      (%%ZTRSM SIDE UPLO TRANSA DIAG M-REF49184 N-REF49185 ALPHA-REF49186
       A-REF49187 LDA-REF49188 B-REF49189 LDB-REF49190))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRSM))

(COMMON-LISP:EXPORT '%ZTRSM '#:MAGICL.BLAS-CFFI)


(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %%ZTRSV))

(CFFI:DEFCFUN ("ztrsv_" %%ZTRSV :LIBRARY MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
    :VOID
  (UPLO :STRING)
  (TRANS :STRING)
  (DIAG :STRING)
  (N :POINTER)
  (A :POINTER)
  (LDA :POINTER)
  (X :POINTER)
  (INCX :POINTER))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %%ZTRSV))

(COMMON-LISP:PUSHNEW '("ZTRSV" "ztrsv_" %%ZTRSV %ZTRSV)
                     (COMMON-LISP:GETF
                      (COMMON-LISP:SYMBOL-PLIST
                       'MAGICL.FOREIGN-LIBRARIES:LIBBLAS)
                      ':MAGICL)
                     :TEST 'COMMON-LISP:EQUAL :KEY 'COMMON-LISP:CAR)

(COMMON-LISP:DECLAIM (COMMON-LISP:INLINE %ZTRSV))

(COMMON-LISP:DEFUN %ZTRSV (UPLO TRANS DIAG N A LDA X INCX)
  (COMMON-LISP:DECLARE (COMMON-LISP:INLINE %%ZTRSV)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING UPLO)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING TRANS)
                       (COMMON-LISP:TYPE COMMON-LISP:STRING DIAG)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) N)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        A)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) LDA)
                       (COMMON-LISP:TYPE
                        (COMMON-LISP:SIMPLE-ARRAY
                         (COMMON-LISP:COMPLEX COMMON-LISP:DOUBLE-FLOAT))
                        X)
                       (COMMON-LISP:TYPE (COMMON-LISP:SIGNED-BYTE 32) INCX))
  (CFFI:WITH-FOREIGN-OBJECTS ((N-REF49194 ':INT32) (LDA-REF49196 ':INT32)
                              (INCX-REF49198 ':INT32))
    (COMMON-LISP:SETF (CFFI:MEM-REF N-REF49194 :INT32) N)
    (COMMON-LISP:SETF (CFFI:MEM-REF LDA-REF49196 :INT32) LDA)
    (COMMON-LISP:SETF (CFFI:MEM-REF INCX-REF49198 :INT32) INCX)
    (MAGICL.CFFI-TYPES:WITH-ARRAY-POINTERS ((A-REF49195 A) (X-REF49197 X))
      (%%ZTRSV UPLO TRANS DIAG N-REF49194 A-REF49195 LDA-REF49196 X-REF49197
       INCX-REF49198))))

(COMMON-LISP:DECLAIM (COMMON-LISP:NOTINLINE %ZTRSV))

(COMMON-LISP:EXPORT '%ZTRSV '#:MAGICL.BLAS-CFFI)


;;; End of file.
